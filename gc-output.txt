# github.com/square/metrics/tasks
tasks/canceller.go:28: can inline TimeoutOwner.Timeout
tasks/canceller.go:54: can inline (*Timeout).Done
tasks/queue.go:38: can inline timeoutError.Timeout
tasks/queue.go:42: can inline NewTimeoutError
tasks/queue.go:87: can inline (*ParallelQueue).Do.func1.1
tasks/queue.go:89: inlining call to (*Timeout).Done
tasks/queue.go:90: inlining call to NewTimeoutError
tasks/queue.go:105: inlining call to (*Timeout).Done
tasks/queue.go:106: inlining call to NewTimeoutError
tasks/queue.go:127: inlining call to TimeoutOwner.Timeout
tasks/canceller.go:28: leaking param: t to result ~r0 level=0
tasks/canceller.go:38: to.timeout.mutex escapes to heap
tasks/canceller.go:34: leaking param: to
tasks/canceller.go:39: to.timeout.mutex escapes to heap
tasks/canceller.go:54: leaking param: t to result ~r0 level=1
tasks/canceller.go:72: leaking closure reference owner
tasks/canceller.go:67: &Timeout literal escapes to heap
tasks/canceller.go:67: make(chan struct {}) escapes to heap
tasks/canceller.go:70: func literal escapes to heap
tasks/canceller.go:70: func literal escapes to heap
tasks/canceller.go:67: &Timeout literal escapes to heap
tasks/canceller.go:67: make(chan struct {}) escapes to heap
tasks/canceller.go:67: &Timeout literal escapes to heap
tasks/canceller.go:67: make(chan struct {}) escapes to heap
tasks/queue.go:35: t.duration escapes to heap
tasks/queue.go:35: timeoutError.Error ... argument does not escape
tasks/queue.go:43: timeoutError literal escapes to heap
tasks/queue.go:70: q.Mutex escapes to heap
tasks/queue.go:66: leaking param: q
tasks/queue.go:71: q.Mutex escapes to heap
tasks/queue.go:66: leaking param: err
tasks/queue.go:84: q.waitgroup escapes to heap
tasks/queue.go:84: leaking closure reference q
tasks/queue.go:81: leaking param: q
tasks/queue.go:84: leaking closure reference q
tasks/queue.go:84: leaking closure reference q
tasks/queue.go:90: NewTimeoutError(q.timeoutTime) escapes to heap
tasks/queue.go:90: timeoutError literal escapes to heap
tasks/queue.go:82: q.waitgroup escapes to heap
tasks/queue.go:83: func literal escapes to heap
tasks/queue.go:83: func literal escapes to heap
tasks/queue.go:81: leaking param: f
tasks/queue.go:87: (*ParallelQueue).Do.func1 func literal does not escape
tasks/queue.go:101: q.waitgroup escapes to heap
tasks/queue.go:101: leaking closure reference q
tasks/queue.go:98: leaking param: q
tasks/queue.go:100: func literal escapes to heap
tasks/queue.go:100: func literal escapes to heap
tasks/queue.go:99: make(chan ticket, 1) escapes to heap
tasks/queue.go:108: q.Mutex escapes to heap
tasks/queue.go:109: q.Mutex escapes to heap
tasks/queue.go:112: q.Mutex escapes to heap
tasks/queue.go:113: q.Mutex escapes to heap
tasks/queue.go:106: NewTimeoutError(q.timeoutTime) escapes to heap
tasks/queue.go:106: timeoutError literal escapes to heap
tasks/queue.go:128: &ParallelQueue literal escapes to heap
tasks/queue.go:120: make(chan ticket, tickets) escapes to heap
tasks/queue.go:128: make(chan ticket, 1) escapes to heap
<autogenerated>:1: inlining call to TimeoutOwner.Timeout
<autogenerated>:1: leaking param: .this to result ~r0 level=1
<autogenerated>:2: leaking param content: .this
<autogenerated>:3: (*timeoutError).Error .this does not escape
<autogenerated>:4: inlining call to timeoutError.Timeout
<autogenerated>:4: (*timeoutError).Timeout .this does not escape
<autogenerated>:5: leaking param: .this
<autogenerated>:6: leaking param: .this
<autogenerated>:7: (*ParallelQueue).Lock .this does not escape
<autogenerated>:7: (*ParallelQueue).Lock &.this.Mutex does not escape
<autogenerated>:8: (*ParallelQueue).Unlock .this does not escape
<autogenerated>:8: (*ParallelQueue).Unlock &.this.Mutex does not escape
# github.com/square/metrics/compress
compress/compress.go:41: inlining call to Bytes
compress/compress.go:56: can inline NewCompressionBuffer
compress/util.go:100: can inline nthLowestBit
compress/compress.go:102: inlining call to nthLowestBit
compress/util.go:33: can inline leadingZeros
compress/util.go:26: inlining call to leadingZeros
compress/util.go:28: inlining call to leadingZeros
compress/compress.go:150: inlining call to math.Float64bits
compress/decompress.go:38: can inline NewDecompressionBuffer
compress/decompress.go:61: inlining call to bytes.NewReader
compress/decompress.go:72: can inline (*DecompressionBuffer).hasMore
compress/decompress.go:82: inlining call to nthLowestBit
compress/decompress.go:115: inlining call to math.Float64bits
compress/decompress.go:117: inlining call to math.Float64frombits
compress/decompress.go:128: inlining call to math.Float64bits
compress/decompress.go:133: inlining call to math.Float64frombits
compress/decompress.go:142: inlining call to (*DecompressionBuffer).hasMore
compress/compress.go:37: leaking param: c to result ~r0 level=2
compress/compress.go:46: c.buffer escapes to heap
compress/compress.go:44: leaking param content: c
compress/compress.go:46: binary.BigEndian escapes to heap
compress/compress.go:46: c.current escapes to heap
compress/compress.go:58: &bytes.Buffer literal escapes to heap
compress/compress.go:72: c.buffer escapes to heap
compress/compress.go:65: leaking param content: c
compress/compress.go:72: binary.BigEndian escapes to heap
compress/compress.go:72: x escapes to heap
compress/compress.go:78: leaking param content: c
compress/compress.go:85: leaking param content: c
compress/compress.go:91: leaking param content: c
compress/compress.go:91: leaking param content: c
compress/compress.go:99: leaking param content: c
compress/compress.go:107: leaking param content: c
compress/compress.go:107: leaking param content: c
compress/compress.go:107: leaking param content: c
compress/compress.go:107: leaking param content: c
compress/compress.go:107: leaking param content: c
compress/compress.go:137: leaking param content: c
compress/compress.go:148: leaking param content: c
compress/compress.go:148: leaking param content: c
compress/compress.go:148: leaking param content: c
compress/compress.go:148: leaking param content: c
compress/compress.go:148: (*CompressionBuffer).Compress data does not escape
compress/compress.go:150: (*CompressionBuffer).Compress &math.f·2 does not escape
compress/decompress.go:38: leaking param: data to result ~r2 level=0
compress/decompress.go:63: buf escapes to heap
compress/decompress.go:61: &bytes.Reader literal escapes to heap
compress/decompress.go:59: leaking param content: d
compress/decompress.go:63: binary.BigEndian escapes to heap
compress/decompress.go:63: &result escapes to heap
compress/decompress.go:62: moved to heap: result
compress/decompress.go:63: &result escapes to heap
compress/decompress.go:65: "binary.Read failed:" escapes to heap
compress/decompress.go:65: err escapes to heap
compress/decompress.go:65: (*DecompressionBuffer).readFloat ... argument does not escape
compress/decompress.go:72: (*DecompressionBuffer).hasMore d does not escape
compress/decompress.go:77: (*DecompressionBuffer).ReadBit d does not escape
compress/decompress.go:100: (*DecompressionBuffer).ReadBits d does not escape
compress/decompress.go:114: (*DecompressionBuffer).readPartialXOR d does not escape
compress/decompress.go:115: (*DecompressionBuffer).readPartialXOR &math.f·2 does not escape
compress/decompress.go:117: (*DecompressionBuffer).readPartialXOR &math.b·2 does not escape
compress/decompress.go:122: (*DecompressionBuffer).readFullXOR d does not escape
compress/decompress.go:128: (*DecompressionBuffer).readFullXOR &math.f·2 does not escape
compress/decompress.go:133: (*DecompressionBuffer).readFullXOR &math.b·2 does not escape
compress/decompress.go:137: leaking param content: d
compress/decompress.go:139: []float64 literal escapes to heap
# github.com/square/metrics/main/common
main/common/common.go:62: inlining call to "log".New
main/common/common.go:62: inlining call to "github.com/square/metrics/log".InitLogger
main/common/common.go:59: inlining call to "github.com/square/metrics/log".InitLogger
main/common/common.go:50: os.Stderr escapes to heap
main/common/common.go:49: leaking param content: arguments
main/common/common.go:49: ExitWithErrorMessage format does not escape
main/common/common.go:50: ExitWithErrorMessage format + "\n" does not escape
main/common/common.go:39: *ConfigFile escapes to heap
main/common/common.go:39: err.Error() escapes to heap
main/common/common.go:32: leaking param: config
main/common/common.go:44: err.Error() escapes to heap
main/common/common.go:39: LoadConfig ... argument does not escape
main/common/common.go:44: LoadConfig ... argument does not escape
main/common/common.go:59: &"github.com/square/metrics/log/glog".Logger literal escapes to heap
main/common/common.go:59: &"github.com/square/metrics/log/glog".Logger literal escapes to heap
main/common/common.go:62: &standard.Logger literal escapes to heap
main/common/common.go:62: &standard.Logger literal escapes to heap
main/common/common.go:62: &"log".Logger literal escapes to heap
main/common/common.go:62: os.Stderr escapes to heap
# github.com/square/metrics/main/compressor
main/compressor/compressor.go:29: inlining call to compress.NewCompressionBuffer
main/compressor/compressor.go:35: inlining call to compress.NewDecompressionBuffer
main/compressor/compressor.go:27: data escapes to heap
main/compressor/compressor.go:26: []float64 literal escapes to heap
main/compressor/compressor.go:29: &bytes.Buffer literal escapes to heap
main/compressor/compressor.go:29: &bytes.Buffer literal escapes to heap
main/compressor/compressor.go:33: compressed escapes to heap
main/compressor/compressor.go:34: len(compressed) escapes to heap
main/compressor/compressor.go:34: len(data) * 8 escapes to heap
main/compressor/compressor.go:37: decompressed escapes to heap
main/compressor/compressor.go:27: main ... argument does not escape
main/compressor/compressor.go:30: main c does not escape
main/compressor/compressor.go:31: main c does not escape
main/compressor/compressor.go:32: main c does not escape
main/compressor/compressor.go:33: main ... argument does not escape
main/compressor/compressor.go:34: main ... argument does not escape
main/compressor/compressor.go:36: main d does not escape
main/compressor/compressor.go:37: main ... argument does not escape
# github.com/square/metrics/timeseries
timeseries/interface.go:66: can inline FetchError.Error
timeseries/interface.go:71: can inline FetchError.ErrorCode
timeseries/interface.go:66: leaking param: e to result ~r0 level=0
timeseries/interface.go:71: FetchError.ErrorCode e does not escape
timeseries/interface.go:106: string(err.Metric.MetricKey) escapes to heap
timeseries/interface.go:92: leaking param: err
timeseries/interface.go:106: err.Metric.TagSet escapes to heap
timeseries/interface.go:106: message escapes to heap
timeseries/interface.go:108: formatted + " - " + err.Message escapes to heap
timeseries/interface.go:106: Error.Error ... argument does not escape
timeseries/interface.go:116: make([]FetchRequest, len(r.Metrics)) escapes to heap
timeseries/interface.go:115: leaking param content: r
timeseries/interface.go:115: leaking param: r
timeseries/interface.go:116: make([]FetchRequest, len(r.Metrics)) escapes to heap
<autogenerated>:1: inlining call to FetchError.Error
<autogenerated>:1: leaking param: .this to result ~r0 level=1
<autogenerated>:2: inlining call to FetchError.ErrorCode
<autogenerated>:2: (*FetchError).ErrorCode .this does not escape
<autogenerated>:3: leaking param content: .this
<autogenerated>:4: (*SampleMethod).String .this does not escape
<autogenerated>:5: leaking param content: .this
<autogenerated>:6: leaking param: .this
<autogenerated>:7: leaking param: .this
<autogenerated>:8: leaking param: request
<autogenerated>:8: leaking param: .this
<autogenerated>:9: leaking param: request
<autogenerated>:9: leaking param: .this
# github.com/square/metrics/demo/emit
demo/emit/source.go:51: can inline Generate
demo/emit/mock.go:148: inlining call to time.Time.Unix
demo/emit/mock.go:113: inlining call to bytes.NewBuffer
demo/emit/mock.go:127: inlining call to bytes.NewBuffer
demo/emit/mock.go:53: inlining call to Generate
demo/emit/mock.go:68: inlining call to Generate
demo/emit/mock.go:84: inlining call to Generate
demo/emit/source.go:46: can inline (*Generator).Value
demo/emit/source.go:146: can inline (*Cumulative).Value
demo/emit/source.go:100: make([]float64, len(sources)) escapes to heap
demo/emit/source.go:109: &Linear literal escapes to heap
demo/emit/source.go:109: &Linear literal escapes to heap
demo/emit/source.go:99: leaking param: sources to result ~r1 level=-1
demo/emit/source.go:100: make([]float64, len(sources)) escapes to heap
demo/emit/mock.go:148: int64(~r0) * 1000 escapes to heap
demo/emit/mock.go:148: value escapes to heap
demo/emit/mock.go:148: metricName escapes to heap
demo/emit/mock.go:141: leaking param: metricName
demo/emit/mock.go:148: createPointJSON ... argument does not escape
demo/emit/mock.go:109: leaking param content: name
demo/emit/mock.go:109: leaking param content: options
demo/emit/mock.go:113: bytes.NewBuffer(([]byte)(json)) escapes to heap
demo/emit/mock.go:113: &bytes.Buffer literal escapes to heap
demo/emit/mock.go:113: ([]byte)(json) escapes to heap
demo/emit/mock.go:115: err.Error() escapes to heap
demo/emit/mock.go:109: leaking param content: client
demo/emit/mock.go:119: err.Error() escapes to heap
demo/emit/mock.go:121: "Blueflood: " escapes to heap
demo/emit/mock.go:121: response.Status escapes to heap
demo/emit/mock.go:122: response.Body escapes to heap
demo/emit/mock.go:123: string(body) escapes to heap
demo/emit/mock.go:123: string(body) escapes to heap
demo/emit/mock.go:127: bytes.NewBuffer(([]byte)(metricName)) escapes to heap
demo/emit/mock.go:127: &bytes.Buffer literal escapes to heap
demo/emit/mock.go:127: ([]byte)(metricName) escapes to heap
demo/emit/mock.go:129: err.Error() escapes to heap
demo/emit/mock.go:109: leaking param content: client
demo/emit/mock.go:133: err.Error() escapes to heap
demo/emit/mock.go:135: "MQE: " escapes to heap
demo/emit/mock.go:135: response.Status escapes to heap
demo/emit/mock.go:136: response.Body escapes to heap
demo/emit/mock.go:137: string(body) escapes to heap
demo/emit/mock.go:137: string(body) escapes to heap
demo/emit/mock.go:115: reportMetric ... argument does not escape
demo/emit/mock.go:119: reportMetric ... argument does not escape
demo/emit/mock.go:121: reportMetric ... argument does not escape
demo/emit/mock.go:123: reportMetric ... argument does not escape
demo/emit/mock.go:129: reportMetric ... argument does not escape
demo/emit/mock.go:133: reportMetric ... argument does not escape
demo/emit/mock.go:135: reportMetric ... argument does not escape
demo/emit/mock.go:137: reportMetric ... argument does not escape
demo/emit/mock.go:53: &Generator literal escapes to heap
demo/emit/mock.go:53: &Generator literal escapes to heap
demo/emit/mock.go:53: func literal escapes to heap
demo/emit/mock.go:53: func literal escapes to heap
demo/emit/mock.go:57: i escapes to heap
demo/emit/mock.go:49: make([]Source, 5) escapes to heap
demo/emit/mock.go:68: &Generator literal escapes to heap
demo/emit/mock.go:68: &Generator literal escapes to heap
demo/emit/mock.go:68: func literal escapes to heap
demo/emit/mock.go:68: func literal escapes to heap
demo/emit/mock.go:73: i escapes to heap
demo/emit/mock.go:64: make([]Source, 5) escapes to heap
demo/emit/mock.go:74: &Mapper literal escapes to heap
demo/emit/mock.go:74: &Mapper literal escapes to heap
demo/emit/mock.go:74: func literal escapes to heap
demo/emit/mock.go:74: func literal escapes to heap
demo/emit/mock.go:84: &Generator literal escapes to heap
demo/emit/mock.go:84: &Generator literal escapes to heap
demo/emit/mock.go:84: func literal escapes to heap
demo/emit/mock.go:84: func literal escapes to heap
demo/emit/mock.go:88: i escapes to heap
demo/emit/mock.go:89: &Capper literal escapes to heap
demo/emit/mock.go:89: &Capper literal escapes to heap
demo/emit/mock.go:103: metric.Metric escapes to heap
demo/emit/mock.go:103: err.Error() escapes to heap
demo/emit/mock.go:46: main []sourceMetric literal does not escape
demo/emit/mock.go:57: main ... argument does not escape
demo/emit/mock.go:73: main ... argument does not escape
demo/emit/mock.go:80: main make([]Source, 5) does not escape
demo/emit/mock.go:88: main ... argument does not escape
demo/emit/mock.go:94: main &http.Client literal does not escape
demo/emit/mock.go:103: main ... argument does not escape
demo/emit/source.go:37: (*Generator).Advance g does not escape
demo/emit/source.go:46: (*Generator).Value g does not escape
demo/emit/source.go:52: &Generator literal escapes to heap
demo/emit/source.go:52: &Generator literal escapes to heap
demo/emit/source.go:51: leaking param: f to result ~r1 level=-1
demo/emit/source.go:57: &Generator literal escapes to heap
demo/emit/source.go:57: &Generator literal escapes to heap
demo/emit/source.go:57: func literal escapes to heap
demo/emit/source.go:57: func literal escapes to heap
demo/emit/source.go:64: &Generator literal escapes to heap
demo/emit/source.go:64: &Generator literal escapes to heap
demo/emit/source.go:64: func literal escapes to heap
demo/emit/source.go:64: func literal escapes to heap
demo/emit/source.go:71: &Generator literal escapes to heap
demo/emit/source.go:71: &Generator literal escapes to heap
demo/emit/source.go:71: func literal escapes to heap
demo/emit/source.go:71: func literal escapes to heap
demo/emit/source.go:83: leaking param content: linear
demo/emit/source.go:90: leaking param content: linear
demo/emit/source.go:120: leaking param content: c
demo/emit/source.go:125: leaking param content: c
demo/emit/source.go:137: leaking param content: c
demo/emit/source.go:137: leaking param content: c
demo/emit/source.go:146: (*Cumulative).Value c does not escape
demo/emit/source.go:157: leaking param content: m
demo/emit/source.go:162: leaking param content: m
demo/emit/source.go:169: make([]Source, count) escapes to heap
demo/emit/source.go:168: []Source literal escapes to heap
demo/emit/source.go:169: make([]Source, count) escapes to heap
<autogenerated>:1: leaking param: .this
<autogenerated>:2: leaking param: .this
# github.com/square/metrics/metric_metadata/cassandra
metric_metadata/cassandra/cassandra.go:148: can inline (*cassandraDatabase).AddMetricNames.func2
metric_metadata/cassandra/cassandra.go:142: inlining call to Consistency
metric_metadata/cassandra/cassandra.go:154: inlining call to Consistency
metric_metadata/cassandra/cassandra.go:187: inlining call to Close
metric_metadata/cassandra/cassandra.go:192: inlining call to metadata.NewNoSuchMetricError
metric_metadata/cassandra/cassandra.go:107: leaking param content: clusterConfig
metric_metadata/cassandra/cassandra.go:38: leaking param: config
metric_metadata/cassandra/cassandra.go:49: &MetricMetadataAPI literal escapes to heap
metric_metadata/cassandra/cassandra.go:118: leaking param content: db
metric_metadata/cassandra/cassandra.go:119: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:119: metricKey escapes to heap
metric_metadata/cassandra/cassandra.go:118: leaking param: metricKey
metric_metadata/cassandra/cassandra.go:119: tagSet.Serialize() escapes to heap
metric_metadata/cassandra/cassandra.go:118: leaking param content: db
metric_metadata/cassandra/cassandra.go:122: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:122: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:122: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:122: 0 escapes to heap
metric_metadata/cassandra/cassandra.go:118: (*cassandraDatabase).AddMetricName tagSet does not escape
metric_metadata/cassandra/cassandra.go:164: leaking param content: db
metric_metadata/cassandra/cassandra.go:170: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:167: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:164: leaking param: metricKey
metric_metadata/cassandra/cassandra.go:167: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:167: tagKey escapes to heap
metric_metadata/cassandra/cassandra.go:164: leaking param: tagKey
metric_metadata/cassandra/cassandra.go:167: tagValue escapes to heap
metric_metadata/cassandra/cassandra.go:164: leaking param: tagValue
metric_metadata/cassandra/cassandra.go:60: leaking param: context
metric_metadata/cassandra/cassandra.go:60: leaking param content: a
metric_metadata/cassandra/cassandra.go:60: leaking param content: metric
metric_metadata/cassandra/cassandra.go:60: leaking param: metric
metric_metadata/cassandra/cassandra.go:63: (*MetricMetadataAPI).AddMetricTagsToTagIndex a.db does not escape
metric_metadata/cassandra/cassandra.go:53: leaking param: context
metric_metadata/cassandra/cassandra.go:53: leaking param content: a
metric_metadata/cassandra/cassandra.go:53: leaking param: metric
metric_metadata/cassandra/cassandra.go:53: leaking param content: a
metric_metadata/cassandra/cassandra.go:55: (*MetricMetadataAPI).AddMetric a.db does not escape
metric_metadata/cassandra/cassandra.go:150: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:130: leaking param: metrics
metric_metadata/cassandra/cassandra.go:150: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:151: 0 escapes to heap
metric_metadata/cassandra/cassandra.go:149: []interface {} literal escapes to heap
metric_metadata/cassandra/cassandra.go:138: m.MetricKey escapes to heap
metric_metadata/cassandra/cassandra.go:139: m.TagSet.Serialize() escapes to heap
metric_metadata/cassandra/cassandra.go:137: []interface {} literal escapes to heap
metric_metadata/cassandra/cassandra.go:130: leaking param content: db
metric_metadata/cassandra/cassandra.go:136: func literal escapes to heap
metric_metadata/cassandra/cassandra.go:136: func literal escapes to heap
metric_metadata/cassandra/cassandra.go:135: moved to heap: m
metric_metadata/cassandra/cassandra.go:138: &m escapes to heap
metric_metadata/cassandra/cassandra.go:130: leaking param content: db
metric_metadata/cassandra/cassandra.go:148: func literal escapes to heap
metric_metadata/cassandra/cassandra.go:148: func literal escapes to heap
metric_metadata/cassandra/cassandra.go:150: &m escapes to heap
metric_metadata/cassandra/cassandra.go:148: (*cassandraDatabase).AddMetricNames.func2 q does not escape
metric_metadata/cassandra/cassandra.go:136: (*cassandraDatabase).AddMetricNames.func1 q does not escape
metric_metadata/cassandra/cassandra.go:70: leaking param: context
metric_metadata/cassandra/cassandra.go:70: leaking param content: a
metric_metadata/cassandra/cassandra.go:70: leaking param content: metrics
metric_metadata/cassandra/cassandra.go:70: leaking param content: a
metric_metadata/cassandra/cassandra.go:70: leaking param: metrics
metric_metadata/cassandra/cassandra.go:79: (*MetricMetadataAPI).AddMetrics a.db does not escape
metric_metadata/cassandra/cassandra.go:174: leaking param content: db
metric_metadata/cassandra/cassandra.go:180: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:178: metricKey escapes to heap
metric_metadata/cassandra/cassandra.go:174: leaking param: metricKey
metric_metadata/cassandra/cassandra.go:181: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:181: &rawTag escapes to heap
metric_metadata/cassandra/cassandra.go:176: moved to heap: rawTag
metric_metadata/cassandra/cassandra.go:181: &rawTag escapes to heap
metric_metadata/cassandra/cassandra.go:192: metadata.NewNoSuchMetricError(string(metricKey)) escapes to heap
metric_metadata/cassandra/cassandra.go:82: leaking param: context
metric_metadata/cassandra/cassandra.go:82: leaking param content: a
metric_metadata/cassandra/cassandra.go:82: leaking param: metricKey
metric_metadata/cassandra/cassandra.go:84: (*MetricMetadataAPI).GetAllTags a.db does not escape
metric_metadata/cassandra/cassandra.go:197: leaking param content: db
metric_metadata/cassandra/cassandra.go:203: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:200: tagKey escapes to heap
metric_metadata/cassandra/cassandra.go:197: leaking param: tagKey
metric_metadata/cassandra/cassandra.go:200: tagValue escapes to heap
metric_metadata/cassandra/cassandra.go:197: leaking param: tagValue
metric_metadata/cassandra/cassandra.go:203: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:203: &keys escapes to heap
metric_metadata/cassandra/cassandra.go:198: moved to heap: keys
metric_metadata/cassandra/cassandra.go:203: &keys escapes to heap
metric_metadata/cassandra/cassandra.go:87: leaking param: context
metric_metadata/cassandra/cassandra.go:87: leaking param content: a
metric_metadata/cassandra/cassandra.go:87: leaking param: tagKey
metric_metadata/cassandra/cassandra.go:87: leaking param: tagValue
metric_metadata/cassandra/cassandra.go:89: (*MetricMetadataAPI).GetMetricsForTag a.db does not escape
metric_metadata/cassandra/cassandra.go:213: leaking param content: db
metric_metadata/cassandra/cassandra.go:215: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:215: 0 escapes to heap
metric_metadata/cassandra/cassandra.go:215: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:215: &keys escapes to heap
metric_metadata/cassandra/cassandra.go:214: moved to heap: keys
metric_metadata/cassandra/cassandra.go:215: &keys escapes to heap
metric_metadata/cassandra/cassandra.go:92: leaking param: context
metric_metadata/cassandra/cassandra.go:92: leaking param content: a
metric_metadata/cassandra/cassandra.go:94: (*MetricMetadataAPI).GetAllMetrics a.db does not escape
metric_metadata/cassandra/cassandra.go:232: leaking param content: db
metric_metadata/cassandra/cassandra.go:98: leaking param content: a
metric_metadata/cassandra/cassandra.go:99: (*MetricMetadataAPI).CheckHealthy a.db does not escape
metric_metadata/cassandra/cassandra.go:222: leaking param content: db
metric_metadata/cassandra/cassandra.go:228: ... argument escapes to heap
metric_metadata/cassandra/cassandra.go:225: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:222: leaking param: metricKey
metric_metadata/cassandra/cassandra.go:225: []string literal escapes to heap
metric_metadata/cassandra/cassandra.go:225: tagKey escapes to heap
metric_metadata/cassandra/cassandra.go:222: leaking param: tagKey
metric_metadata/cassandra/cassandra.go:225: tagValue escapes to heap
metric_metadata/cassandra/cassandra.go:222: leaking param: tagValue
# github.com/square/metrics/demo/ingest
demo/ingest/ingest.go:74: req.Body escapes to heap
demo/ingest/ingest.go:67: leaking param content: req
demo/ingest/ingest.go:76: err.Error() escapes to heap
demo/ingest/ingest.go:67: leaking param: w
demo/ingest/ingest.go:78: err.Error() escapes to heap
demo/ingest/ingest.go:78: ([]byte)(fmt.Sprintf("Error reading body: %s", err.Error())) escapes to heap
demo/ingest/ingest.go:67: leaking param content: req
demo/ingest/ingest.go:85: err.Error() escapes to heap
demo/ingest/ingest.go:92: string(bytes) escapes to heap
demo/ingest/ingest.go:101: ([]byte)("No metrics were received.") escapes to heap
demo/ingest/ingest.go:110: leaking closure reference converter
demo/ingest/ingest.go:113: metric escapes to heap
demo/ingest/ingest.go:113: err.Error() escapes to heap
demo/ingest/ingest.go:113: ([]byte)(fmt.Sprintf("Error converting metric `%s`; %s\n", metric, err.Error())) escapes to heap
demo/ingest/ingest.go:106: []api.TaggedMetric literal escapes to heap
demo/ingest/ingest.go:122: err.Error() escapes to heap
demo/ingest/ingest.go:124: err.Error() escapes to heap
demo/ingest/ingest.go:124: ([]byte)(fmt.Sprintf("Error connecting to Cassandra; %s\n", err.Error())) escapes to heap
demo/ingest/ingest.go:49: err.Error() escapes to heap
demo/ingest/ingest.go:56: []string literal escapes to heap
demo/ingest/ingest.go:60: err.Error() escapes to heap
demo/ingest/ingest.go:67: func literal escapes to heap
demo/ingest/ingest.go:67: func literal escapes to heap
demo/ingest/ingest.go:53: moved to heap: converter
demo/ingest/ingest.go:110: &converter escapes to heap
demo/ingest/ingest.go:129: ":" + *listenOnPort escapes to heap
demo/ingest/ingest.go:131: "ListenAndServe: " escapes to heap
demo/ingest/ingest.go:131: err escapes to heap
demo/ingest/ingest.go:76: main.func1 ... argument does not escape
demo/ingest/ingest.go:78: main.func1 ... argument does not escape
demo/ingest/ingest.go:85: main.func1 ... argument does not escape
demo/ingest/ingest.go:91: main.func1 []util.GraphiteMetric literal does not escape
demo/ingest/ingest.go:110: main.func1 converter does not escape
demo/ingest/ingest.go:113: main.func1 ... argument does not escape
demo/ingest/ingest.go:122: main.func1 ... argument does not escape
demo/ingest/ingest.go:124: main.func1 ... argument does not escape
demo/ingest/ingest.go:49: main ... argument does not escape
demo/ingest/ingest.go:60: main ... argument does not escape
demo/ingest/ingest.go:131: main ... argument does not escape
# github.com/square/metrics/function
function/errors.go:36: can inline NewLimitError
function/errors.go:56: can inline defaultLimitError.Actual
function/errors.go:61: can inline defaultLimitError.Limit
function/errors.go:74: can inline ArgumentLengthError.TokenName
function/expression.go:79: can inline EvaluationContext.WithTimerange
function/expression.go:91: can inline NewFetchCounter
function/expression.go:100: can inline FetchCounter.Limit
function/value.go:42: can inline (*ConversionFailure).WithContext
function/expression.go:141: inlining call to (*ConversionFailure).WithContext
function/expression.go:154: inlining call to (*ConversionFailure).WithContext
function/expression.go:167: inlining call to (*ConversionFailure).WithContext
function/expression.go:180: inlining call to (*ConversionFailure).WithContext
function/expression.go:193: inlining call to (*ConversionFailure).WithContext
function/function.go:49: can inline MetricFunction.Name
function/make.go:149: inlining call to reflect.TypeOf
function/make.go:149: inlining call to reflect.toType
function/make.go:137: can inline MakeFunction.func1.3.1
function/make.go:101: can inline MakeFunction.func1.1
function/make.go:43: inlining call to reflect.Value.Kind
function/make.go:43: inlining call to reflect.reflect.flag.reflect.kind
function/scalarset.go:42: inlining call to math.IsInf
function/scalarset.go:42: inlining call to math.IsNaN
function/scalarset.go:48: inlining call to Bytes
function/scalarset.go:60: inlining call to api.Timerange.Slots
function/scalarset.go:68: can inline ScalarSet.ToString
function/scalarset.go:83: can inline ScalarSet.ToScalarSet
function/scalarset.go:86: can inline ScalarSet.ToDuration
function/value.go:66: can inline SeriesListValue.ToSeriesList
function/value.go:71: can inline SeriesListValue.ToString
function/value.go:76: can inline SeriesListValue.ToScalar
function/value.go:81: can inline SeriesListValue.ToScalarSet
function/value.go:86: can inline SeriesListValue.ToDuration
function/value.go:94: can inline StringValue.ToSeriesList
function/value.go:99: can inline StringValue.ToString
function/value.go:104: can inline StringValue.ToScalar
function/value.go:109: can inline StringValue.ToScalarSet
function/value.go:114: can inline StringValue.ToDuration
function/value.go:124: inlining call to api.Timerange.Slots
function/value.go:130: inlining call to api.NewTagSet
function/value.go:135: can inline ScalarValue.ToString
function/value.go:140: can inline ScalarValue.ToScalar
function/value.go:145: can inline ScalarValue.ToScalarSet
function/value.go:156: can inline ScalarValue.ToDuration
function/value.go:167: can inline NewDurationValue
function/value.go:172: can inline DurationValue.ToSeriesList
function/value.go:177: can inline DurationValue.ToString
function/value.go:182: can inline DurationValue.ToScalar
function/value.go:186: can inline DurationValue.ToScalarSet
function/value.go:191: can inline DurationValue.ToDuration
function/value.go:201: inlining call to String
function/errors.go:37: composite literal escapes to heap
function/errors.go:36: leaking param: message to result ~r3 level=0
function/errors.go:36: leaking param: limit to result ~r3 level=0
function/errors.go:36: leaking param: actual to result ~r3 level=0
function/errors.go:52: err.message escapes to heap
function/errors.go:51: leaking param: err
function/errors.go:52: defaultLimitError.Error ... argument does not escape
function/errors.go:56: leaking param: err to result ~r0 level=0
function/errors.go:61: leaking param: err to result ~r0 level=0
function/errors.go:74: leaking param: err to result ~r0 level=0
function/errors.go:83: err.Name escapes to heap
function/errors.go:79: leaking param: err
function/errors.go:84: err.ExpectedMin escapes to heap
function/errors.go:85: err.Actual escapes to heap
function/errors.go:90: err.Name escapes to heap
function/errors.go:91: err.ExpectedMin escapes to heap
function/errors.go:92: err.Actual escapes to heap
function/errors.go:97: err.Name escapes to heap
function/errors.go:98: err.ExpectedMin escapes to heap
function/errors.go:99: err.ExpectedMax escapes to heap
function/errors.go:100: err.Actual escapes to heap
function/errors.go:86: ArgumentLengthError.Error ... argument does not escape
function/errors.go:93: ArgumentLengthError.Error ... argument does not escape
function/errors.go:101: ArgumentLengthError.Error ... argument does not escape
function/expression.go:63: notes.mutex escapes to heap
function/expression.go:59: leaking param: notes
function/expression.go:64: notes.mutex escapes to heap
function/expression.go:59: leaking param: note
function/expression.go:73: notes.mutex escapes to heap
function/expression.go:69: leaking param: notes
function/expression.go:74: notes.mutex escapes to heap
function/expression.go:79: leaking param: e to result ~r1 level=0
function/expression.go:92: moved to heap: n32
function/expression.go:94: &n32 escapes to heap
function/expression.go:100: FetchCounter.Limit c does not escape
function/expression.go:105: leaking param: c
function/expression.go:111: leaking param: c
function/expression.go:114: n escapes to heap
function/expression.go:114: c.limit - int(remaining) escapes to heap
function/expression.go:114: c.limit escapes to heap
function/expression.go:114: FetchCounter.Consume ... argument does not escape
function/expression.go:134: leaking param: context
function/expression.go:134: leaking param: e
function/expression.go:141: convErr.WithContext(e.QueryString()) escapes to heap
function/expression.go:147: leaking param: context
function/expression.go:147: leaking param: e
function/expression.go:154: convErr.WithContext(e.QueryString()) escapes to heap
function/expression.go:160: leaking param: context
function/expression.go:160: leaking param: e
function/expression.go:167: convErr.WithContext(e.QueryString()) escapes to heap
function/expression.go:173: leaking param: context
function/expression.go:173: leaking param: e
function/expression.go:180: convErr.WithContext(e.QueryString()) escapes to heap
function/expression.go:186: leaking param: context
function/expression.go:186: leaking param: e
function/expression.go:193: convErr.WithContext(e.QueryString()) escapes to heap
function/expression.go:222: leaking closure reference context
function/expression.go:201: leaking param: context
function/expression.go:221: leaking param: expr
function/expression.go:201: leaking param content: expressions
function/expression.go:201: leaking param content: expressions
function/expression.go:221: func literal escapes to heap
function/expression.go:221: func literal escapes to heap
function/expression.go:201: moved to heap: context
function/expression.go:222: &context escapes to heap
function/expression.go:219: make(chan result, length) escapes to heap
function/expression.go:201: leaking param content: expressions
function/expression.go:226: make([]Value, length) escapes to heap
function/expression.go:209: []Value literal escapes to heap
function/expression.go:216: []Value literal escapes to heap
function/expression.go:226: make([]Value, length) escapes to heap
function/function.go:49: leaking param: metricFunc to result ~r0 level=0
function/function.go:59: ArgumentLengthError literal escapes to heap
function/function.go:55: leaking param: f to result ~r4 level=0
function/function.go:63: f.FunctionName escapes to heap
function/function.go:55: leaking param: f
function/function.go:55: leaking param: context
function/function.go:55: leaking param: arguments
function/function.go:55: leaking param: groups
function/function.go:63: MetricFunction.Run ... argument does not escape
function/make.go:188: moved to heap: waiter
function/make.go:195: waiter escapes to heap
function/make.go:195: leaking closure reference waiter
function/make.go:174: leaking closure reference argType
function/make.go:174: leaking closure reference arg
function/make.go:166: leaking closure reference arg
function/make.go:166: leaking closure reference argType
function/make.go:149: reflect.t·2 escapes to heap
function/make.go:148: leaking param: x
function/make.go:143: leaking param: t
function/make.go:112: leaking param: expression
function/make.go:117: leaking closure reference context
function/make.go:96: leaking param: context
function/make.go:117: leaking closure reference context
function/make.go:117: leaking closure reference context
function/make.go:117: leaking closure reference context
function/make.go:117: leaking closure reference context
function/make.go:117: leaking closure reference context
function/make.go:129: resultType escapes to heap
function/make.go:112: leaking param: resultType
function/make.go:133: make([]func() (interface {}, error), funcType.NumIn()) escapes to heap
function/make.go:133: leaking closure reference funcType
function/make.go:133: leaking closure reference funcType
function/make.go:158: context escapes to heap
function/make.go:160: context.Timerange escapes to heap
function/make.go:162: groups escapes to heap
function/make.go:96: leaking param: groups
function/make.go:165: func literal escapes to heap
function/make.go:165: func literal escapes to heap
function/make.go:112: func literal escapes to heap
function/make.go:112: func literal escapes to heap
function/make.go:96: moved to heap: context
function/make.go:117: &context escapes to heap
function/make.go:173: func literal escapes to heap
function/make.go:173: func literal escapes to heap
function/make.go:112: func literal escapes to heap
function/make.go:112: func literal escapes to heap
function/make.go:117: &context escapes to heap
function/make.go:148: func literal escapes to heap
function/make.go:148: func literal escapes to heap
function/make.go:182: argType escapes to heap
function/make.go:189: make([]reflect.Value, funcType.NumIn()) escapes to heap
function/make.go:133: leaking closure reference funcType
function/make.go:133: leaking closure reference funcType
function/make.go:193: waiter escapes to heap
function/make.go:194: func literal escapes to heap
function/make.go:194: func literal escapes to heap
function/make.go:195: &waiter escapes to heap
function/make.go:133: make([]func() (interface {}, error), funcType.NumIn()) escapes to heap
function/make.go:190: make(chan error, funcType.NumIn()) escapes to heap
function/make.go:189: make([]reflect.Value, funcType.NumIn()) escapes to heap
function/make.go:204: waiter escapes to heap
function/make.go:210: leaking closure reference funcValue
function/make.go:133: leaking closure reference funcType
function/make.go:41: leaking param: function
function/make.go:84: i escapes to heap
function/make.go:84: argType escapes to heap
function/make.go:136: leaking param: x
function/make.go:137: func literal escapes to heap
function/make.go:137: func literal escapes to heap
function/make.go:115: expression escapes to heap
function/make.go:217: StringValue(output[0].Interface().(string)) escapes to heap
function/make.go:219: ScalarValue(output[0].Interface().(float64)) escapes to heap
function/make.go:221: output[0].Interface().(ScalarSet) escapes to heap
function/make.go:223: composite literal escapes to heap
function/make.go:225: SeriesListValue(output[0].Interface().(api.SeriesList)) escapes to heap
function/make.go:41: leaking param: name to result ~r2 level=0
function/make.go:96: func literal escapes to heap
function/make.go:96: func literal escapes to heap
function/make.go:149: MakeFunction.func1.5 &reflect.i·2 does not escape
function/make.go:129: MakeFunction.func1.2 ... argument does not escape
function/make.go:96: MakeFunction.func1 arguments does not escape
function/make.go:101: MakeFunction.func1 func literal does not escape
function/make.go:136: MakeFunction.func1 func literal does not escape
function/make.go:143: MakeFunction.func1 func literal does not escape
function/make.go:182: MakeFunction.func1 ... argument does not escape
function/make.go:84: MakeFunction ... argument does not escape
function/scalarset.go:34: moved to heap: buffer
function/scalarset.go:35: buffer escapes to heap
function/scalarset.go:36: ts.TagSet escapes to heap
function/scalarset.go:33: leaking param: ts
function/scalarset.go:40: buffer escapes to heap
function/scalarset.go:41: buffer escapes to heap
function/scalarset.go:43: buffer escapes to heap
function/scalarset.go:45: buffer escapes to heap
function/scalarset.go:47: buffer escapes to heap
function/scalarset.go:48: TaggedScalar.MarshalJSON buffer does not escape
function/scalarset.go:55: make([]api.Timeseries, len(set)) escapes to heap
function/scalarset.go:60: make([]float64, int(~r0)) escapes to heap
function/scalarset.go:53: leaking param content: set
function/scalarset.go:60: make([]float64, int(~r0)) escapes to heap
function/scalarset.go:55: make([]api.Timeseries, len(set)) escapes to heap
function/scalarset.go:71: &ConversionFailure literal escapes to heap
function/scalarset.go:68: ScalarSet.ToString set does not escape
function/scalarset.go:80: &ConversionFailure literal escapes to heap
function/scalarset.go:74: ScalarSet.ToScalar set does not escape
function/scalarset.go:75: ScalarSet.ToScalar api.TagSet literal does not escape
function/scalarset.go:83: leaking param: set to result ~r0 level=0
function/scalarset.go:89: &ConversionFailure literal escapes to heap
function/scalarset.go:86: ScalarSet.ToDuration set does not escape
function/value.go:42: leaking param: c to result ~r1 level=1
function/value.go:42: leaking param: context to result ~r1 level=0
function/value.go:59: e.Context escapes to heap
function/value.go:58: leaking param: e
function/value.go:59: e.From escapes to heap
function/value.go:59: e.To escapes to heap
function/value.go:59: ConversionError.Error ... argument does not escape
function/value.go:66: leaking param: list to result ~r1 level=0
function/value.go:72: &ConversionFailure literal escapes to heap
function/value.go:71: SeriesListValue.ToString list does not escape
function/value.go:77: &ConversionFailure literal escapes to heap
function/value.go:76: SeriesListValue.ToScalar list does not escape
function/value.go:82: &ConversionFailure literal escapes to heap
function/value.go:81: SeriesListValue.ToScalarSet list does not escape
function/value.go:87: &ConversionFailure literal escapes to heap
function/value.go:86: SeriesListValue.ToDuration list does not escape
function/value.go:95: &ConversionFailure literal escapes to heap
function/value.go:94: StringValue.ToSeriesList value does not escape
function/value.go:99: leaking param: value to result ~r0 level=0
function/value.go:105: &ConversionFailure literal escapes to heap
function/value.go:104: StringValue.ToScalar value does not escape
function/value.go:110: &ConversionFailure literal escapes to heap
function/value.go:109: StringValue.ToScalarSet value does not escape
function/value.go:115: &ConversionFailure literal escapes to heap
function/value.go:114: StringValue.ToDuration value does not escape
function/value.go:124: make([]float64, int(~r0)) escapes to heap
function/value.go:124: make([]float64, int(~r0)) escapes to heap
function/value.go:130: make(map[string]string) escapes to heap
function/value.go:130: []api.Timeseries literal escapes to heap
function/value.go:136: &ConversionFailure literal escapes to heap
function/value.go:149: api.TagSet literal escapes to heap
function/value.go:146: ScalarSet literal escapes to heap
function/value.go:157: &ConversionFailure literal escapes to heap
function/value.go:167: leaking param: name to result ~r2 level=0
function/value.go:173: &ConversionFailure literal escapes to heap
function/value.go:172: DurationValue.ToSeriesList value does not escape
function/value.go:178: &ConversionFailure literal escapes to heap
function/value.go:177: DurationValue.ToString value does not escape
function/value.go:183: &ConversionFailure literal escapes to heap
function/value.go:182: DurationValue.ToScalar value does not escape
function/value.go:187: &ConversionFailure literal escapes to heap
function/value.go:186: DurationValue.ToScalarSet value does not escape
function/value.go:191: DurationValue.ToDuration value does not escape
function/value.go:198: leaking param: timeString
function/value.go:201: durationRegexp.String() escapes to heap
function/value.go:201: StringToDuration ... argument does not escape
<autogenerated>:1: leaking param content: .this
<autogenerated>:2: inlining call to defaultLimitError.Actual
<autogenerated>:2: leaking param: .this to result ~r0 level=1
<autogenerated>:3: inlining call to defaultLimitError.Limit
<autogenerated>:3: leaking param: .this to result ~r0 level=1
<autogenerated>:4: leaking param: .this
<autogenerated>:5: leaking param: .this
<autogenerated>:6: leaking param: .this
<autogenerated>:7: inlining call to ArgumentLengthError.TokenName
<autogenerated>:7: leaking param: .this to result ~r0 level=1
<autogenerated>:8: leaking param content: .this
<autogenerated>:9: inlining call to FetchCounter.Limit
<autogenerated>:9: (*FetchCounter).Limit .this does not escape
<autogenerated>:10: leaking param content: .this
<autogenerated>:11: leaking param content: .this
<autogenerated>:12: leaking param: .this
<autogenerated>:13: leaking param: .anon0
<autogenerated>:13: leaking param: .this
<autogenerated>:14: leaking param: .this
<autogenerated>:15: leaking param: .anon0
<autogenerated>:15: leaking param: .anon1
<autogenerated>:15: leaking param: .anon2
<autogenerated>:15: leaking param: .this
<autogenerated>:16: leaking param: context
<autogenerated>:16: leaking param: .this
<autogenerated>:17: leaking param: .this
<autogenerated>:18: leaking param: .this
<autogenerated>:19: leaking param: .this
<autogenerated>:20: leaking param: .this
<autogenerated>:21: leaking param: .this
<autogenerated>:22: leaking param: .this
<autogenerated>:23: leaking param: .this
<autogenerated>:24: leaking param content: .this
<autogenerated>:25: leaking param content: .this
<autogenerated>:26: leaking param content: .this
<autogenerated>:27: inlining call to ScalarSet.ToString
<autogenerated>:27: &ConversionFailure literal escapes to heap
<autogenerated>:27: (*ScalarSet).ToString .this does not escape
<autogenerated>:28: (*ScalarSet).ToScalar .this does not escape
<autogenerated>:29: inlining call to ScalarSet.ToScalarSet
<autogenerated>:29: leaking param: .this to result ~r0 level=1
<autogenerated>:30: inlining call to ScalarSet.ToDuration
<autogenerated>:30: &ConversionFailure literal escapes to heap
<autogenerated>:30: (*ScalarSet).ToDuration .this does not escape
<autogenerated>:31: inlining call to EvaluationContext.WithTimerange
<autogenerated>:31: leaking param: .this to result ~r1 level=1
<autogenerated>:32: inlining call to MetricFunction.Name
<autogenerated>:32: leaking param: .this to result ~r0 level=1
<autogenerated>:33: leaking param content: .this
<autogenerated>:33: leaking param: context
<autogenerated>:33: leaking param: arguments
<autogenerated>:33: leaking param: groups
<autogenerated>:34: inlining call to SeriesListValue.ToSeriesList
<autogenerated>:34: leaking param: .this to result ~r1 level=1
<autogenerated>:35: inlining call to SeriesListValue.ToString
<autogenerated>:35: &ConversionFailure literal escapes to heap
<autogenerated>:35: (*SeriesListValue).ToString .this does not escape
<autogenerated>:36: inlining call to SeriesListValue.ToScalar
<autogenerated>:36: &ConversionFailure literal escapes to heap
<autogenerated>:36: (*SeriesListValue).ToScalar .this does not escape
<autogenerated>:37: inlining call to SeriesListValue.ToScalarSet
<autogenerated>:37: &ConversionFailure literal escapes to heap
<autogenerated>:37: (*SeriesListValue).ToScalarSet .this does not escape
<autogenerated>:38: inlining call to SeriesListValue.ToDuration
<autogenerated>:38: &ConversionFailure literal escapes to heap
<autogenerated>:38: (*SeriesListValue).ToDuration .this does not escape
<autogenerated>:39: inlining call to StringValue.ToSeriesList
<autogenerated>:39: &ConversionFailure literal escapes to heap
<autogenerated>:39: (*StringValue).ToSeriesList .this does not escape
<autogenerated>:40: inlining call to StringValue.ToString
<autogenerated>:40: leaking param: .this to result ~r0 level=1
<autogenerated>:41: inlining call to StringValue.ToScalar
<autogenerated>:41: &ConversionFailure literal escapes to heap
<autogenerated>:41: (*StringValue).ToScalar .this does not escape
<autogenerated>:42: inlining call to StringValue.ToScalarSet
<autogenerated>:42: &ConversionFailure literal escapes to heap
<autogenerated>:42: (*StringValue).ToScalarSet .this does not escape
<autogenerated>:43: inlining call to StringValue.ToDuration
<autogenerated>:43: &ConversionFailure literal escapes to heap
<autogenerated>:43: (*StringValue).ToDuration .this does not escape
<autogenerated>:44: (*ScalarValue).ToSeriesList .this does not escape
<autogenerated>:45: inlining call to ScalarValue.ToString
<autogenerated>:45: &ConversionFailure literal escapes to heap
<autogenerated>:45: (*ScalarValue).ToString .this does not escape
<autogenerated>:46: inlining call to ScalarValue.ToScalar
<autogenerated>:46: (*ScalarValue).ToScalar .this does not escape
<autogenerated>:47: inlining call to ScalarValue.ToScalarSet
<autogenerated>:47: api.TagSet literal escapes to heap
<autogenerated>:47: ScalarSet literal escapes to heap
<autogenerated>:47: (*ScalarValue).ToScalarSet .this does not escape
<autogenerated>:48: inlining call to ScalarValue.ToDuration
<autogenerated>:48: &ConversionFailure literal escapes to heap
<autogenerated>:48: (*ScalarValue).ToDuration .this does not escape
<autogenerated>:49: inlining call to DurationValue.ToSeriesList
<autogenerated>:49: &ConversionFailure literal escapes to heap
<autogenerated>:49: (*DurationValue).ToSeriesList .this does not escape
<autogenerated>:50: inlining call to DurationValue.ToString
<autogenerated>:50: &ConversionFailure literal escapes to heap
<autogenerated>:50: (*DurationValue).ToString .this does not escape
<autogenerated>:51: inlining call to DurationValue.ToScalar
<autogenerated>:51: &ConversionFailure literal escapes to heap
<autogenerated>:51: (*DurationValue).ToScalar .this does not escape
<autogenerated>:52: inlining call to DurationValue.ToScalarSet
<autogenerated>:52: &ConversionFailure literal escapes to heap
<autogenerated>:52: (*DurationValue).ToScalarSet .this does not escape
<autogenerated>:53: inlining call to DurationValue.ToDuration
<autogenerated>:53: (*DurationValue).ToDuration .this does not escape
<autogenerated>:54: leaking param: .this
<autogenerated>:55: leaking param: .this
# github.com/square/metrics/function/forecast
function/forecast/anomaly_function.go:89: inlining call to math.IsInf
function/forecast/anomaly_function.go:89: inlining call to math.IsNaN
function/forecast/anomaly_function.go:92: inlining call to math.IsInf
function/forecast/anomaly_function.go:92: inlining call to math.IsNaN
function/forecast/anomaly_function.go:51: inlining call to WithContext
function/forecast/anomaly_function.go:57: inlining call to api.Timerange.Resolution
function/forecast/rolling.go:25: can inline (*weighted).get
function/forecast/rolling.go:48: can inline (*weighted).skip
function/forecast/rolling.go:29: inlining call to math.IsNaN
function/forecast/rolling.go:30: inlining call to (*weighted).skip
function/forecast/rolling.go:33: inlining call to math.IsNaN
function/forecast/rolling.go:33: inlining call to math.IsInf
function/forecast/rolling.go:42: can inline (*weighted).boostAdd
function/forecast/rolling.go:43: inlining call to math.IsNaN
function/forecast/rolling.go:51: can inline newWeighted
function/forecast/rolling.go:63: can inline cycle.index
function/forecast/rolling.go:66: can inline cycle.get
function/forecast/rolling.go:67: inlining call to cycle.index
function/forecast/rolling.go:67: inlining call to (*weighted).get
function/forecast/rolling.go:70: inlining call to cycle.index
function/forecast/rolling.go:72: can inline cycle.skip
function/forecast/rolling.go:73: inlining call to cycle.index
function/forecast/rolling.go:73: inlining call to (*weighted).skip
function/forecast/rolling.go:78: inlining call to newWeighted
function/forecast/rolling.go:99: inlining call to newWeighted
function/forecast/rolling.go:100: inlining call to newWeighted
function/forecast/rolling.go:110: inlining call to (*weighted).get
function/forecast/rolling.go:111: inlining call to (*weighted).get
function/forecast/rolling.go:112: inlining call to cycle.get
function/forecast/rolling.go:112: inlining call to cycle.index
function/forecast/rolling.go:112: inlining call to (*weighted).get
function/forecast/rolling.go:115: inlining call to (*weighted).boostAdd
function/forecast/rolling.go:115: inlining call to math.IsNaN
function/forecast/rolling.go:121: inlining call to math.IsNaN
function/forecast/rolling.go:125: inlining call to (*weighted).get
function/forecast/rolling.go:122: inlining call to (*weighted).skip
function/forecast/rolling.go:133: inlining call to (*weighted).get
function/forecast/rolling.go:133: inlining call to cycle.get
function/forecast/rolling.go:133: inlining call to cycle.index
function/forecast/rolling.go:133: inlining call to (*weighted).get
function/forecast/rolling.go:147: inlining call to cycle.get
function/forecast/rolling.go:147: inlining call to cycle.index
function/forecast/rolling.go:147: inlining call to (*weighted).get
function/forecast/utility.go:34: inlining call to math.IsNaN
function/forecast/utility.go:20: can inline mod
function/forecast/rolling_function.go:41: inlining call to api.Timerange.Resolution
function/forecast/rolling_function.go:46: inlining call to function.EvaluationContext.WithTimerange
function/forecast/rolling_function.go:47: inlining call to api.Timerange.Slots
function/forecast/rolling_function.go:47: inlining call to api.Timerange.Slots
function/forecast/rolling_function.go:82: inlining call to api.Timerange.Resolution
function/forecast/rolling_function.go:87: inlining call to function.EvaluationContext.WithTimerange
function/forecast/rolling_function.go:88: inlining call to api.Timerange.Slots
function/forecast/rolling_function.go:88: inlining call to api.Timerange.Slots
function/forecast/drop_function.go:28: inlining call to api.Timerange.Slots
function/forecast/drop_function.go:28: inlining call to time.Duration.Seconds
function/forecast/drop_function.go:28: inlining call to api.Timerange.Resolution
function/forecast/drop_function.go:28: inlining call to time.Duration.Seconds
function/forecast/drop_function.go:37: inlining call to math.NaN
function/forecast/drop_function.go:37: inlining call to math.Float64frombits
function/forecast/rolling_function.go:123: inlining call to function.EvaluationContext.WithTimerange
function/forecast/rolling_function.go:124: inlining call to api.Timerange.Slots
function/forecast/rolling_function.go:124: inlining call to api.Timerange.Slots
function/forecast/anomaly_function.go:112: make([]float64, len(estimate)) escapes to heap
function/forecast/anomaly_function.go:112: make([]float64, len(estimate)) escapes to heap
function/forecast/anomaly_function.go:83: standardDeviationsFromExpected correct does not escape
function/forecast/anomaly_function.go:83: standardDeviationsFromExpected estimate does not escape
function/forecast/anomaly_function.go:87: standardDeviationsFromExpected []float64 literal does not escape
function/forecast/anomaly_function.go:126: make([][]float64, period) escapes to heap
function/forecast/anomaly_function.go:142: make([]float64, length) escapes to heap
function/forecast/anomaly_function.go:143: make([]float64, length) escapes to heap
function/forecast/anomaly_function.go:155: make([]float64, len(correct)) escapes to heap
function/forecast/anomaly_function.go:155: make([]float64, len(correct)) escapes to heap
function/forecast/anomaly_function.go:119: periodicStandardDeviationsFromExpected correct does not escape
function/forecast/anomaly_function.go:119: periodicStandardDeviationsFromExpected estimate does not escape
function/forecast/anomaly_function.go:37: leaking param content: arguments
function/forecast/anomaly_function.go:37: leaking param: context
function/forecast/anomaly_function.go:37: leaking param: arguments
function/forecast/anomaly_function.go:37: leaking param: groups
function/forecast/anomaly_function.go:66: make([]api.Timeseries, len(prediction.Series)) escapes to heap
function/forecast/anomaly_function.go:51: convErr.WithContext("in anomaly function - model") escapes to heap
function/forecast/anomaly_function.go:75: function.SeriesListValue(prediction) escapes to heap
function/forecast/anomaly_function.go:66: make([]api.Timeseries, len(prediction.Series)) escapes to heap
function/forecast/anomaly_function.go:29: leaking param: name to result ~r2 level=0
function/forecast/anomaly_function.go:37: func literal escapes to heap
function/forecast/anomaly_function.go:37: func literal escapes to heap
function/forecast/anomaly_function.go:29: leaking param: model to result ~r2 level=-1
function/forecast/anomaly_function.go:61: FunctionPeriodicAnomalyMaker.func1 map[string][]float64 literal does not escape
function/forecast/rolling.go:25: (*weighted).get w does not escape
function/forecast/rolling.go:28: (*weighted).observe w does not escape
function/forecast/rolling.go:42: (*weighted).boostAdd w does not escape
function/forecast/rolling.go:48: (*weighted).skip w does not escape
function/forecast/rolling.go:55: &weighted literal escapes to heap
function/forecast/rolling.go:63: cycle.index c does not escape
function/forecast/rolling.go:66: cycle.get c does not escape
function/forecast/rolling.go:69: cycle.observe c does not escape
function/forecast/rolling.go:72: cycle.skip c does not escape
function/forecast/rolling.go:76: make([]*weighted, n) escapes to heap
function/forecast/rolling.go:78: &weighted literal escapes to heap
function/forecast/rolling.go:76: make([]*weighted, n) escapes to heap
function/forecast/rolling.go:97: make([]float64, len(ys)) escapes to heap
function/forecast/rolling.go:97: make([]float64, len(ys)) escapes to heap
function/forecast/rolling.go:89: RollingMultiplicativeHoltWinters ys does not escape
function/forecast/rolling.go:99: RollingMultiplicativeHoltWinters &weighted literal does not escape
function/forecast/rolling.go:100: RollingMultiplicativeHoltWinters &weighted literal does not escape
function/forecast/rolling.go:144: make([]float64, len(ys)) escapes to heap
function/forecast/rolling.go:144: make([]float64, len(ys)) escapes to heap
function/forecast/rolling.go:142: RollingSeasonal ys does not escape
function/forecast/utility.go:27: LinearRegression ys does not escape
function/forecast/rolling.go:154: make([]float64, len(ys)) escapes to heap
function/forecast/rolling.go:154: make([]float64, len(ys)) escapes to heap
function/forecast/rolling.go:153: ForecastLinear ys does not escape
function/forecast/rolling_function.go:38: extraTrainingTime.String() escapes to heap
function/forecast/rolling_function.go:32: leaking param: seriesExpression
function/forecast/rolling_function.go:32: leaking param: context
function/forecast/rolling_function.go:54: make([]api.Timeseries, len(seriesList.Series)) escapes to heap
function/forecast/rolling_function.go:54: make([]api.Timeseries, len(seriesList.Series)) escapes to heap
function/forecast/rolling_function.go:32: glob.func1 optionalExtraTrainingTime does not escape
function/forecast/rolling_function.go:38: glob.func1 ... argument does not escape
function/forecast/rolling_function.go:79: extraTrainingTime.String() escapes to heap
function/forecast/rolling_function.go:73: leaking param: seriesExpression
function/forecast/rolling_function.go:73: leaking param: context
function/forecast/rolling_function.go:95: make([]api.Timeseries, len(seriesList.Series)) escapes to heap
function/forecast/rolling_function.go:95: make([]api.Timeseries, len(seriesList.Series)) escapes to heap
function/forecast/rolling_function.go:73: glob.func2 optionalExtraTrainingTime does not escape
function/forecast/rolling_function.go:79: glob.func2 ... argument does not escape
function/forecast/drop_function.go:29: make([]api.Timeseries, len(original.Series)) escapes to heap
function/forecast/drop_function.go:31: make([]float64, len(series.Values)) escapes to heap
function/forecast/drop_function.go:27: leaking param content: original
function/forecast/drop_function.go:31: make([]float64, len(series.Values)) escapes to heap
function/forecast/drop_function.go:29: make([]api.Timeseries, len(original.Series)) escapes to heap
function/forecast/drop_function.go:27: glob.func3 context does not escape
function/forecast/drop_function.go:37: glob.func3 &math.b·2 does not escape
function/forecast/rolling_function.go:120: extraTrainingTime.String() escapes to heap
function/forecast/rolling_function.go:114: leaking param: seriesExpression
function/forecast/rolling_function.go:114: leaking param: context
function/forecast/rolling_function.go:131: make([]api.Timeseries, len(seriesList.Series)) escapes to heap
function/forecast/rolling_function.go:131: make([]api.Timeseries, len(seriesList.Series)) escapes to heap
function/forecast/rolling_function.go:114: glob.func4 optionalTrainingTime does not escape
function/forecast/rolling_function.go:120: glob.func4 ... argument does not escape
<autogenerated>:1: inlining call to cycle.index
<autogenerated>:1: (*cycle).index .this does not escape
<autogenerated>:2: inlining call to cycle.get
<autogenerated>:2: inlining call to cycle.index
<autogenerated>:2: inlining call to (*weighted).get
<autogenerated>:2: (*cycle).get .this does not escape
<autogenerated>:3: (*cycle).observe .this does not escape
<autogenerated>:4: inlining call to cycle.skip
<autogenerated>:4: inlining call to cycle.index
<autogenerated>:4: inlining call to (*weighted).skip
<autogenerated>:4: (*cycle).skip .this does not escape
# github.com/square/metrics/function/summary
function/summary/summary.go:36: inlining call to api.Timerange.Slots
function/summary/summary.go:36: inlining call to api.Timerange.Resolution
function/summary/summary.go:60: inlining call to math.IsNaN
function/summary/summary.go:73: inlining call to math.NaN
function/summary/summary.go:73: inlining call to math.Float64frombits
function/summary/summary.go:75: inlining call to math.IsNaN
function/summary/summary.go:78: inlining call to math.IsNaN
function/summary/summary.go:90: inlining call to math.NaN
function/summary/summary.go:90: inlining call to math.Float64frombits
function/summary/summary.go:92: inlining call to math.IsNaN
function/summary/summary.go:95: inlining call to math.IsNaN
function/summary/summary.go:108: inlining call to math.IsNaN
function/summary/summary.go:112: inlining call to math.NaN
function/summary/summary.go:112: inlining call to math.Float64frombits
function/summary/summary.go:31: leaking param content: list
function/summary/summary.go:31: leaking param content: list
function/summary/summary.go:31: func literal escapes to heap
function/summary/summary.go:31: func literal escapes to heap
function/summary/summary.go:31: func literal escapes to heap
function/summary/summary.go:28: leaking param: summarizer
function/summary/summary.go:41: function.ScalarSet literal escapes to heap
function/summary/summary.go:28: leaking param: name to result ~r2 level=0
function/summary/summary.go:31: glob.func1.1 optionalDuration does not escape
function/summary/summary.go:56: glob.func2 slice does not escape
function/summary/summary.go:72: glob.func3 slice does not escape
function/summary/summary.go:73: glob.func3 &math.b·2 does not escape
function/summary/summary.go:89: glob.func4 slice does not escape
function/summary/summary.go:90: glob.func4 &math.b·2 does not escape
function/summary/summary.go:106: glob.func5 slice does not escape
function/summary/summary.go:112: glob.func5 &math.b·2 does not escape
function/summary/summary.go:118: leaking param content: list
function/summary/summary.go:119: function.ScalarSet literal escapes to heap
# github.com/square/metrics/function/tag
function/tag/tag.go:24: inlining call to api.NewTagSet
function/tag/tag.go:47: inlining call to api.NewTagSet
function/tag/tag.go:23: leaking param content: series
function/tag/tag.go:23: leaking param: series to result ~r2 level=0
function/tag/tag.go:24: make(map[string]string) escapes to heap
function/tag/tag.go:23: dropTagSeries dropTag does not escape
function/tag/tag.go:36: make([]api.Timeseries, len(list.Series)) escapes to heap
function/tag/tag.go:35: leaking param content: list
function/tag/tag.go:35: leaking param content: list
function/tag/tag.go:36: make([]api.Timeseries, len(list.Series)) escapes to heap
function/tag/tag.go:35: DropTag tag does not escape
function/tag/tag.go:46: leaking param content: series
function/tag/tag.go:46: leaking param: newTag
function/tag/tag.go:46: leaking param: newValue
function/tag/tag.go:46: leaking param: series to result ~r3 level=0
function/tag/tag.go:47: make(map[string]string) escapes to heap
function/tag/tag.go:58: make([]api.Timeseries, len(list.Series)) escapes to heap
function/tag/tag.go:57: leaking param content: list
function/tag/tag.go:57: leaking param: tag
function/tag/tag.go:57: leaking param: value
function/tag/tag.go:57: leaking param content: list
function/tag/tag.go:58: make([]api.Timeseries, len(list.Series)) escapes to heap
# github.com/square/metrics/function/transform
function/transform/special.go:29: inlining call to function.EvaluationContext.WithTimerange
function/transform/special.go:38: inlining call to api.Timerange.Resolution
function/transform/special.go:45: inlining call to api.Timerange.StartMillis
function/transform/special.go:45: inlining call to api.Timerange.ResolutionMillis
function/transform/special.go:45: inlining call to api.Timerange.EndMillis
function/transform/special.go:45: inlining call to api.Timerange.ResolutionMillis
function/transform/special.go:49: inlining call to function.EvaluationContext.WithTimerange
function/transform/special.go:59: inlining call to api.Timerange.Slots
function/transform/special.go:64: inlining call to math.IsNaN
function/transform/special.go:70: inlining call to math.IsNaN
function/transform/special.go:77: inlining call to math.NaN
function/transform/special.go:77: inlining call to math.Float64frombits
function/transform/special.go:93: inlining call to api.Timerange.Resolution
function/transform/special.go:100: inlining call to api.Timerange.StartMillis
function/transform/special.go:100: inlining call to api.Timerange.ResolutionMillis
function/transform/special.go:100: inlining call to api.Timerange.EndMillis
function/transform/special.go:100: inlining call to api.Timerange.ResolutionMillis
function/transform/special.go:105: inlining call to function.EvaluationContext.WithTimerange
function/transform/special.go:118: inlining call to api.Timerange.Resolution
function/transform/special.go:123: inlining call to api.Timerange.Slots
function/transform/special.go:129: inlining call to math.IsNaN
function/transform/special.go:153: inlining call to api.Timerange.Resolution
function/transform/special.go:153: inlining call to function.EvaluationContext.WithTimerange
function/transform/special.go:168: inlining call to api.Timerange.Resolution
function/transform/special.go:168: inlining call to time.Duration.Seconds
function/transform/special.go:187: inlining call to api.Timerange.Resolution
function/transform/special.go:187: inlining call to function.EvaluationContext.WithTimerange
function/transform/special.go:202: inlining call to api.Timerange.Resolution
function/transform/special.go:202: inlining call to time.Duration.Seconds
function/transform/special.go:213: inlining call to api.Timerange.Resolution
function/transform/special.go:213: inlining call to time.Duration.Seconds
function/transform/transformation.go:64: inlining call to math.IsNaN
function/transform/transformation.go:67: inlining call to api.Timerange.Resolution
function/transform/transformation.go:67: inlining call to time.Duration.Seconds
function/transform/transformation.go:87: inlining call to math.IsNaN
function/transform/transformation.go:119: can inline glob.func9.1
function/transform/transformation.go:120: inlining call to math.IsNaN
function/transform/transformation.go:136: inlining call to math.IsNaN
function/transform/transformation.go:166: can inline glob.func11.1
function/transform/transformation.go:182: can inline glob.func12.1
function/transform/transformation.go:195: can inline glob.func13.1
function/transform/transformation.go:29: make([]api.Timeseries, len(list.Series)) escapes to heap
function/transform/transformation.go:27: leaking param content: list
function/transform/transformation.go:27: leaking param content: list
function/transform/transformation.go:29: make([]api.Timeseries, len(list.Series)) escapes to heap
function/transform/transformation.go:27: transformEach transformation does not escape
function/transform/transformation.go:42: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:40: leaking param content: list
function/transform/transformation.go:42: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:41: mapper.func1 values does not escape
function/transform/transformation.go:40: mapper mapFunc does not escape
function/transform/transformation.go:41: mapper func literal does not escape
function/transform/transformation.go:105: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:103: leaking param content: list
function/transform/transformation.go:103: func literal escapes to heap
function/transform/transformation.go:103: func literal escapes to heap
function/transform/transformation.go:103: func literal escapes to heap
function/transform/transformation.go:100: leaking param: fun
function/transform/transformation.go:105: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:112: function.MakeFunction(name, func literal) escapes to heap
function/transform/transformation.go:100: leaking param: name to result ~r2 level=0
function/transform/transformation.go:104: MapMaker.func1.1 values does not escape
function/transform/transformation.go:104: MapMaker.func1 func literal does not escape
function/transform/transformation.go:152: b.lower escapes to heap
function/transform/transformation.go:152: b.upper escapes to heap
function/transform/transformation.go:152: b.lower escapes to heap
function/transform/transformation.go:152: b.upper escapes to heap
function/transform/transformation.go:152: boundError.Error ... argument does not escape
function/transform/transformation.go:156: b.lower escapes to heap
function/transform/transformation.go:156: b.upper escapes to heap
function/transform/transformation.go:156: boundError.TokenName ... argument does not escape
function/transform/special.go:28: leaking param: context
function/transform/special.go:28: leaking param: expression
function/transform/special.go:36: leaking param: listExpression
function/transform/special.go:36: leaking param: context
function/transform/special.go:59: make([]float64, int(~r0)) escapes to heap
function/transform/special.go:59: make([]float64, int(~r0)) escapes to heap
function/transform/special.go:77: glob.func2 &math.b·2 does not escape
function/transform/special.go:91: leaking param: listExpression
function/transform/special.go:91: leaking param: context
function/transform/special.go:123: make([]float64, int(~r0)) escapes to heap
function/transform/special.go:123: make([]float64, int(~r0)) escapes to heap
function/transform/special.go:143: leaking param: context
function/transform/special.go:143: leaking param: seriesList to result ~r3 level=0
function/transform/special.go:143: glob.func4 message does not escape
function/transform/special.go:152: leaking param: listExpression
function/transform/special.go:152: leaking param: context
function/transform/special.go:159: make([]api.Timeseries, len(list.Series)) escapes to heap
function/transform/special.go:162: make([]float64, len(series.Values) - 1) escapes to heap
function/transform/special.go:162: make([]float64, len(series.Values) - 1) escapes to heap
function/transform/special.go:159: make([]api.Timeseries, len(list.Series)) escapes to heap
function/transform/special.go:186: leaking param: listExpression
function/transform/special.go:186: leaking param: context
function/transform/special.go:193: make([]api.Timeseries, len(list.Series)) escapes to heap
function/transform/special.go:196: make([]float64, len(series.Values) - 1) escapes to heap
function/transform/special.go:209: series.TagSet escapes to heap
function/transform/special.go:209: series.Values[i - 1] escapes to heap
function/transform/special.go:209: series.Values[i] escapes to heap
function/transform/special.go:196: make([]float64, len(series.Values) - 1) escapes to heap
function/transform/special.go:193: make([]api.Timeseries, len(list.Series)) escapes to heap
function/transform/special.go:209: glob.func6 ... argument does not escape
function/transform/transformation.go:56: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:54: leaking param content: list
function/transform/transformation.go:56: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:55: glob.func7.1 values does not escape
function/transform/transformation.go:55: glob.func7 func literal does not escape
function/transform/transformation.go:79: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:77: leaking param content: list
function/transform/transformation.go:79: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:78: glob.func8.1 values does not escape
function/transform/transformation.go:78: glob.func8 func literal does not escape
function/transform/transformation.go:118: leaking param content: list
function/transform/transformation.go:119: glob.func9 func literal does not escape
function/transform/transformation.go:133: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:131: leaking param content: list
function/transform/transformation.go:133: make([]float64, len(values)) escapes to heap
function/transform/transformation.go:132: glob.func10.1 values does not escape
function/transform/transformation.go:132: glob.func10 func literal does not escape
function/transform/transformation.go:164: boundError literal escapes to heap
function/transform/transformation.go:162: leaking param content: list
function/transform/transformation.go:166: glob.func11 func literal does not escape
function/transform/transformation.go:181: leaking param content: list
function/transform/transformation.go:182: glob.func12 func literal does not escape
function/transform/transformation.go:194: leaking param content: list
function/transform/transformation.go:195: glob.func13 func literal does not escape
<autogenerated>:1: (*boundError).Error .this does not escape
<autogenerated>:2: (*boundError).TokenName .this does not escape
# github.com/square/metrics/function/registry
function/registry/registry.go:171: inlining call to api.Timerange.Resolution
function/registry/registry.go:188: inlining call to api.Timerange.Resolution
function/registry/registry.go:39: can inline init.1.func4
function/registry/registry.go:38: can inline init.1.func3
function/registry/registry.go:37: can inline init.1.func2
function/registry/registry.go:36: can inline init.1.func1
function/registry/registry.go:111: can inline Default
function/registry/registry.go:116: can inline StandardRegistry.GetFunction
function/registry/registry.go:208: leaking param: leftList
function/registry/registry.go:208: leaking param: rightList
function/registry/registry.go:211: make([]api.Timeseries, len(joined.Rows)) escapes to heap
function/registry/registry.go:216: make([]float64, len(left.Values)) escapes to heap
function/registry/registry.go:216: make([]float64, len(left.Values)) escapes to heap
function/registry/registry.go:208: func literal escapes to heap
function/registry/registry.go:208: func literal escapes to heap
function/registry/registry.go:208: func literal escapes to heap
function/registry/registry.go:205: leaking param: operator
function/registry/registry.go:211: make([]api.Timeseries, len(joined.Rows)) escapes to heap
function/registry/registry.go:227: function.MakeFunction(op, func literal) escapes to heap
function/registry/registry.go:205: leaking param: op to result ~r2 level=0
function/registry/registry.go:209: NewOperator.func1 []api.SeriesList literal does not escape
function/registry/registry.go:133: leaking param: fun
function/registry/registry.go:136: fun.Name escapes to heap
function/registry/registry.go:136: fun.Name escapes to heap
function/registry/registry.go:133: StandardRegistry.Register r does not escape
function/registry/registry.go:136: StandardRegistry.Register ... argument does not escape
function/registry/registry.go:146: leaking param: fun
function/registry/registry.go:149: fun.Name escapes to heap
function/registry/registry.go:149: fun.Name escapes to heap
function/registry/registry.go:149: MustRegister ... argument does not escape
function/registry/registry.go:197: leaking param content: seriesList
function/registry/registry.go:197: leaking param content: groups
function/registry/registry.go:197: func literal escapes to heap
function/registry/registry.go:197: func literal escapes to heap
function/registry/registry.go:197: func literal escapes to heap
function/registry/registry.go:194: leaking param: aggregator
function/registry/registry.go:194: leaking param: name to result ~r2 level=0
function/registry/registry.go:162: count escapes to heap
function/registry/registry.go:169: duration escapes to heap
function/registry/registry.go:159: leaking param content: list
function/registry/registry.go:159: func literal escapes to heap
function/registry/registry.go:159: func literal escapes to heap
function/registry/registry.go:159: func literal escapes to heap
function/registry/registry.go:156: leaking param: summary
function/registry/registry.go:156: leaking param: name to result ~r3 level=0
function/registry/registry.go:159: NewFilterCount.func1 optionalDuration does not escape
function/registry/registry.go:162: NewFilterCount.func1 ... argument does not escape
function/registry/registry.go:169: NewFilterCount.func1 ... argument does not escape
function/registry/registry.go:186: duration escapes to heap
function/registry/registry.go:180: leaking param content: list
function/registry/registry.go:180: func literal escapes to heap
function/registry/registry.go:180: func literal escapes to heap
function/registry/registry.go:180: func literal escapes to heap
function/registry/registry.go:177: leaking param: summary
function/registry/registry.go:177: leaking param: name to result ~r3 level=0
function/registry/registry.go:180: NewFilterThreshold.func1 optionalDuration does not escape
function/registry/registry.go:186: NewFilterThreshold.func1 ... argument does not escape
function/registry/registry.go:36: func literal escapes to heap
function/registry/registry.go:36: func literal escapes to heap
function/registry/registry.go:37: func literal escapes to heap
function/registry/registry.go:37: func literal escapes to heap
function/registry/registry.go:38: func literal escapes to heap
function/registry/registry.go:38: func literal escapes to heap
function/registry/registry.go:39: func literal escapes to heap
function/registry/registry.go:39: func literal escapes to heap
function/registry/registry.go:41: NewAggregate("aggregate.max", aggregate.Max) escapes to heap
function/registry/registry.go:42: NewAggregate("aggregate.min", aggregate.Min) escapes to heap
function/registry/registry.go:43: NewAggregate("aggregate.mean", aggregate.Mean) escapes to heap
function/registry/registry.go:44: NewAggregate("aggregate.sum", aggregate.Sum) escapes to heap
function/registry/registry.go:45: NewAggregate("aggregate.total", aggregate.Total) escapes to heap
function/registry/registry.go:46: NewAggregate("aggregate.count", aggregate.Count) escapes to heap
function/registry/registry.go:48: transform.Integral escapes to heap
function/registry/registry.go:49: transform.Cumulative escapes to heap
function/registry/registry.go:50: transform.NaNFill escapes to heap
function/registry/registry.go:53: transform.NaNKeepLast escapes to heap
function/registry/registry.go:54: transform.Bound escapes to heap
function/registry/registry.go:55: transform.LowerBound escapes to heap
function/registry/registry.go:56: transform.UpperBound escapes to heap
function/registry/registry.go:59: NewFilterCount("filter.highest_mean", aggregate.Mean, false) escapes to heap
function/registry/registry.go:60: NewFilterCount("filter.highest_max", aggregate.Max, false) escapes to heap
function/registry/registry.go:61: NewFilterCount("filter.highest_min", aggregate.Min, false) escapes to heap
function/registry/registry.go:63: NewFilterCount("filter.lowest_mean", aggregate.Mean, true) escapes to heap
function/registry/registry.go:64: NewFilterCount("filter.lowest_max", aggregate.Max, true) escapes to heap
function/registry/registry.go:65: NewFilterCount("filter.lowest_min", aggregate.Min, true) escapes to heap
function/registry/registry.go:67: NewFilterThreshold("filter.mean_above", aggregate.Mean, false) escapes to heap
function/registry/registry.go:68: NewFilterThreshold("filter.max_above", aggregate.Max, false) escapes to heap
function/registry/registry.go:69: NewFilterThreshold("filter.min_above", aggregate.Min, false) escapes to heap
function/registry/registry.go:71: NewFilterThreshold("filter.mean_below", aggregate.Mean, true) escapes to heap
function/registry/registry.go:72: NewFilterThreshold("filter.max_below", aggregate.Max, true) escapes to heap
function/registry/registry.go:73: NewFilterThreshold("filter.min_below", aggregate.Min, true) escapes to heap
function/registry/registry.go:76: transform.Alias escapes to heap
function/registry/registry.go:77: transform.Derivative escapes to heap
function/registry/registry.go:78: transform.MovingAverage escapes to heap
function/registry/registry.go:79: transform.ExponentialMovingAverage escapes to heap
function/registry/registry.go:80: transform.Rate escapes to heap
function/registry/registry.go:81: transform.Timeshift escapes to heap
function/registry/registry.go:84: tag.DropFunction escapes to heap
function/registry/registry.go:85: tag.SetFunction escapes to heap
function/registry/registry.go:88: forecast.FunctionRollingMultiplicativeHoltWinters escapes to heap
function/registry/registry.go:89: forecast.FunctionAnomalyRollingMultiplicativeHoltWinters escapes to heap
function/registry/registry.go:90: forecast.FunctionRollingSeasonal escapes to heap
function/registry/registry.go:91: forecast.FunctionAnomalyRollingSeasonal escapes to heap
function/registry/registry.go:92: forecast.FunctionForecastLinear escapes to heap
function/registry/registry.go:94: forecast.FunctionDrop escapes to heap
function/registry/registry.go:97: summary.Current escapes to heap
function/registry/registry.go:98: summary.Mean escapes to heap
function/registry/registry.go:99: summary.Min escapes to heap
function/registry/registry.go:100: summary.Max escapes to heap
function/registry/registry.go:101: summary.LastNotNaN escapes to heap
function/registry/registry.go:116: StandardRegistry.GetFunction r does not escape
function/registry/registry.go:116: StandardRegistry.GetFunction name does not escape
function/registry/registry.go:122: make([]string, len(r.mapping)) escapes to heap
function/registry/registry.go:122: make([]string, len(r.mapping)) escapes to heap
function/registry/registry.go:122: make([]string, len(r.mapping)) escapes to heap
function/registry/registry.go:121: StandardRegistry.All r does not escape
<autogenerated>:1: inlining call to StandardRegistry.GetFunction
<autogenerated>:1: (*StandardRegistry).GetFunction .this does not escape
<autogenerated>:1: (*StandardRegistry).GetFunction name does not escape
<autogenerated>:2: (*StandardRegistry).All .this does not escape
<autogenerated>:3: leaking param: fun
<autogenerated>:3: (*StandardRegistry).Register .this does not escape
# github.com/square/metrics/query/expression
query/expression/errors.go:25: can inline SyntaxError.Error
query/expression/expression.go:38: can inline Duration.Evaluate
query/expression/expression.go:39: inlining call to function.NewDurationValue
query/expression/expression.go:42: can inline Duration.Name
query/expression/expression.go:45: can inline Duration.QueryString
query/expression/expression.go:53: can inline Scalar.Evaluate
query/expression/expression.go:69: can inline String.Evaluate
query/expression/expression.go:212: can inline (*AnnotationExpression).Name
query/expression/errors.go:25: leaking param: err to result ~r0 level=0
query/expression/expression.go:39: function.NewDurationValue(expr.Literal, expr.Duration) escapes to heap
query/expression/expression.go:38: leaking param: expr to result ~r1 level=0
query/expression/expression.go:38: Duration.Evaluate context does not escape
query/expression/expression.go:42: leaking param: expr to result ~r0 level=0
query/expression/expression.go:45: leaking param: expr to result ~r0 level=0
query/expression/expression.go:54: function.ScalarValue(expr.Value) escapes to heap
query/expression/expression.go:53: Scalar.Evaluate context does not escape
query/expression/expression.go:58: expr.Value escapes to heap
query/expression/expression.go:58: Scalar.Name ... argument does not escape
query/expression/expression.go:62: expr.Value escapes to heap
query/expression/expression.go:62: Scalar.QueryString ... argument does not escape
query/expression/expression.go:70: function.StringValue(expr.Value) escapes to heap
query/expression/expression.go:69: leaking param: expr to result ~r1 level=0
query/expression/expression.go:69: String.Evaluate context does not escape
query/expression/expression.go:74: expr.Value escapes to heap
query/expression/expression.go:73: leaking param: expr
query/expression/expression.go:74: String.Name ... argument does not escape
query/expression/expression.go:78: expr.Value escapes to heap
query/expression/expression.go:77: leaking param: expr
query/expression/expression.go:78: String.QueryString ... argument does not escape
query/expression/expression.go:219: leaking param content: tagSets
query/expression/expression.go:219: leaking param: predicate
query/expression/expression.go:219: leaking param content: tagSets
query/expression/expression.go:220: []api.TagSet literal escapes to heap
query/expression/expression.go:86: leaking param content: expr
query/expression/expression.go:86: leaking param: context
query/expression/expression.go:86: leaking param content: expr
query/expression/expression.go:103: make([]api.TaggedMetric, len(filtered)) escapes to heap
query/expression/expression.go:86: leaking param content: expr
query/expression/expression.go:103: make([]api.TaggedMetric, len(filtered)) escapes to heap
query/expression/expression.go:123: function.SeriesListValue(seriesList) escapes to heap
query/expression/expression.go:88: (*MetricFetchExpression).Evaluate ... argument does not escape
query/expression/expression.go:126: leaking param content: expr
query/expression/expression.go:126: leaking param content: expr
query/expression/expression.go:126: leaking param content: expr
query/expression/expression.go:126: leaking param content: expr
query/expression/expression.go:130: util.EscapeIdentifier(expr.MetricName) escapes to heap
query/expression/expression.go:130: expr.Predicate.Query() escapes to heap
query/expression/expression.go:130: (*MetricFetchExpression).QueryString ... argument does not escape
query/expression/expression.go:132: leaking param content: expr
query/expression/expression.go:143: leaking param content: expr
query/expression/expression.go:143: leaking param: context
query/expression/expression.go:146: expr.FunctionName escapes to heap
query/expression/expression.go:143: leaking param content: expr
query/expression/expression.go:143: leaking param content: expr
query/expression/expression.go:143: leaking param content: expr
query/expression/expression.go:146: SyntaxError literal escapes to heap
query/expression/expression.go:146: (*FunctionExpression).Evaluate ... argument does not escape
query/expression/expression.go:159: argumentStrings[0] escapes to heap
query/expression/expression.go:152: leaking param content: argumentStrings
query/expression/expression.go:159: f.FunctionName escapes to heap
query/expression/expression.go:152: leaking param: f
query/expression/expression.go:159: argumentStrings[1] escapes to heap
query/expression/expression.go:152: leaking param content: argumentStrings
query/expression/expression.go:152: leaking param content: argumentStrings
query/expression/expression.go:172: groupKeyword escapes to heap
query/expression/expression.go:172: strings.Join(escapedGroupBy, ", ") escapes to heap
query/expression/expression.go:174: f.FunctionName escapes to heap
query/expression/expression.go:174: argumentString escapes to heap
query/expression/expression.go:152: leaking param content: argumentStrings
query/expression/expression.go:174: groupString escapes to heap
query/expression/expression.go:159: functionFormatString ... argument does not escape
query/expression/expression.go:168: functionFormatString []string literal does not escape
query/expression/expression.go:172: functionFormatString ... argument does not escape
query/expression/expression.go:174: functionFormatString ... argument does not escape
query/expression/expression.go:177: leaking param content: expr
query/expression/expression.go:177: leaking param content: expr
query/expression/expression.go:178: (*FunctionExpression).QueryString []string literal does not escape
query/expression/expression.go:185: leaking param: expr to result ~r0 level=2
query/expression/expression.go:185: leaking param content: expr
query/expression/expression.go:185: leaking param content: expr
query/expression/expression.go:192: (*FunctionExpression).Name []string literal does not escape
query/expression/expression.go:204: leaking param: context
query/expression/expression.go:204: leaking param content: expr
query/expression/expression.go:208: leaking param content: expr
query/expression/expression.go:209: expr.Expression.QueryString() escapes to heap
query/expression/expression.go:209: expr.Annotation escapes to heap
query/expression/expression.go:208: leaking param content: expr
query/expression/expression.go:209: (*AnnotationExpression).QueryString ... argument does not escape
query/expression/expression.go:212: leaking param: expr to result ~r0 level=1
<autogenerated>:1: inlining call to SyntaxError.Error
<autogenerated>:1: leaking param: .this to result ~r0 level=1
<autogenerated>:2: inlining call to Duration.Evaluate
<autogenerated>:2: inlining call to function.NewDurationValue
<autogenerated>:2: function.NewDurationValue(expr.Literal, expr.Duration) escapes to heap
<autogenerated>:2: leaking param: .this to result ~r1 level=1
<autogenerated>:2: (*Duration).Evaluate context does not escape
<autogenerated>:3: inlining call to Duration.Name
<autogenerated>:3: leaking param: .this to result ~r0 level=1
<autogenerated>:4: inlining call to Duration.QueryString
<autogenerated>:4: leaking param: .this to result ~r0 level=1
<autogenerated>:5: inlining call to Scalar.Evaluate
<autogenerated>:5: function.ScalarValue(expr.Value) escapes to heap
<autogenerated>:5: (*Scalar).Evaluate .this does not escape
<autogenerated>:5: (*Scalar).Evaluate context does not escape
<autogenerated>:6: (*Scalar).Name .this does not escape
<autogenerated>:7: (*Scalar).QueryString .this does not escape
<autogenerated>:8: inlining call to String.Evaluate
<autogenerated>:8: function.StringValue(expr.Value) escapes to heap
<autogenerated>:8: leaking param: .this to result ~r1 level=1
<autogenerated>:8: (*String).Evaluate context does not escape
<autogenerated>:9: leaking param content: .this
<autogenerated>:10: leaking param content: .this
# github.com/square/metrics/query/command
query/command/command.go:133: can inline (*DescribeCommand).Name
query/command/command.go:160: can inline (*DescribeAllCommand).Name
query/command/command.go:180: can inline (*DescribeMetricsCommand).Name
query/command/command.go:221: inlining call to api.Timerange.StartMillis
query/command/command.go:221: inlining call to api.Timerange.EndMillis
query/command/command.go:226: inlining call to api.Timerange.Slots
query/command/command.go:229: inlining call to api.Timerange.Slots
query/command/command.go:229: inlining call to function.NewLimitError
query/command/command.go:238: inlining call to registry.Default
query/command/command.go:244: inlining call to function.NewFetchCounter
query/command/command.go:249: inlining call to tasks.TimeoutOwner.Timeout
query/command/command.go:277: inlining call to function.NewLimitError
query/command/command.go:342: can inline (*SelectCommand).Name
query/command/command.go:352: can inline NewProfilingCommandWithProfiler
query/command/command.go:94: leaking param content: cmd
query/command/command.go:94: leaking param: context
query/command/command.go:94: leaking param content: cmd
query/command/command.go:114: map[string]bool literal escapes to heap
query/command/command.go:122: make([]string, 0, len(set)) escapes to heap
query/command/command.go:122: make([]string, 0, len(set)) escapes to heap
query/command/command.go:122: make([]string, 0, len(set)) escapes to heap
query/command/command.go:130: keyValueLists escapes to heap
query/command/command.go:120: map[string][]string literal escapes to heap
query/command/command.go:107: (*DescribeCommand).Execute ... argument does not escape
query/command/command.go:108: (*DescribeCommand).Execute map[string]map[string]bool literal does not escape
query/command/command.go:133: (*DescribeCommand).Name cmd does not escape
query/command/command.go:138: leaking param: context
query/command/command.go:143: make([]api.MetricKey, 0, len(result)) escapes to heap
query/command/command.go:138: leaking param content: cmd
query/command/command.go:149: api.MetricKeys(filtered) escapes to heap
query/command/command.go:143: make([]api.MetricKey, 0, len(result)) escapes to heap
query/command/command.go:153: len(filtered) escapes to heap
query/command/command.go:151: filtered escapes to heap
query/command/command.go:143: make([]api.MetricKey, 0, len(result)) escapes to heap
query/command/command.go:152: map[string]interface {} literal escapes to heap
query/command/command.go:160: (*DescribeAllCommand).Name cmd does not escape
query/command/command.go:165: leaking param content: cmd
query/command/command.go:165: leaking param content: cmd
query/command/command.go:165: leaking param: context
query/command/command.go:175: len(data) escapes to heap
query/command/command.go:173: data escapes to heap
query/command/command.go:174: map[string]interface {} literal escapes to heap
query/command/command.go:180: (*DescribeMetricsCommand).Name cmd does not escape
query/command/command.go:267: leaking closure reference evaluationContext
query/command/command.go:196: leaking param: context
query/command/command.go:244: moved to heap: function.n32·3
query/command/command.go:244: &function.n32·3 escapes to heap
query/command/command.go:238: registry.Default() escapes to heap
query/command/command.go:252: new(function.EvaluationNotes) escapes to heap
query/command/command.go:196: leaking param content: cmd
query/command/command.go:196: leaking param content: cmd
query/command/command.go:265: func literal escapes to heap
query/command/command.go:265: func literal escapes to heap
query/command/command.go:254: moved to heap: evaluationContext
query/command/command.go:267: &evaluationContext escapes to heap
query/command/command.go:244: &function.n32·3 escapes to heap
query/command/command.go:238: registry.Default() escapes to heap
query/command/command.go:252: new(function.EvaluationNotes) escapes to heap
query/command/command.go:196: leaking param: cmd
query/command/command.go:263: make(chan error, 1) escapes to heap
query/command/command.go:262: make(chan []function.Value, 1) escapes to heap
query/command/command.go:296: []string literal escapes to heap
query/command/command.go:308: make([]QueryResult, len(result)) escapes to heap
query/command/command.go:329: cmd.Expressions[i].QueryString() escapes to heap
query/command/command.go:335: description escapes to heap
query/command/command.go:281: map[string][]string literal escapes to heap
query/command/command.go:336: evaluationContext.EvaluationNotes escapes to heap
query/command/command.go:244: &function.n32·3 escapes to heap
query/command/command.go:238: registry.Default() escapes to heap
query/command/command.go:252: new(function.EvaluationNotes) escapes to heap
query/command/command.go:333: body escapes to heap
query/command/command.go:308: make([]QueryResult, len(result)) escapes to heap
query/command/command.go:334: map[string]interface {} literal escapes to heap
query/command/command.go:229: function.NewLimitError("Requested number of data points exceeds the configured limit", chosenTimerange.Slots(), slotLimit) escapes to heap
query/command/command.go:229: composite literal escapes to heap
query/command/command.go:229: slotLimit escapes to heap
query/command/command.go:229: chosenTimerange.Slots() escapes to heap
query/command/command.go:277: function.NewLimitError("Timeout while executing the query.", context.Timeout, context.Timeout) escapes to heap
query/command/command.go:277: composite literal escapes to heap
query/command/command.go:277: context.Timeout escapes to heap
query/command/command.go:277: context.Timeout escapes to heap
query/command/command.go:246: (*SelectCommand).Execute ... argument does not escape
query/command/command.go:329: (*SelectCommand).Execute ... argument does not escape
query/command/command.go:342: (*SelectCommand).Name cmd does not escape
query/command/command.go:353: ProfilingCommand literal escapes to heap
query/command/command.go:352: leaking param: profiler to result ~r2 level=0
query/command/command.go:352: leaking param: command to result ~r2 level=0
query/command/command.go:359: leaking param: cmd
query/command/command.go:369: leaking param: cmd
query/command/command.go:370: cmd.Name() escapes to heap
query/command/command.go:369: leaking param: context
query/command/command.go:381: profiles escapes to heap
query/command/command.go:379: map[string]interface {} literal escapes to heap
query/command/command.go:370: ProfilingCommand.Execute ... argument does not escape
<autogenerated>:1: leaking param: .anon0
<autogenerated>:1: leaking param: .this
<autogenerated>:2: leaking param: .this
<autogenerated>:3: leaking param content: .this
<autogenerated>:4: leaking param content: .this
<autogenerated>:4: leaking param: context
# github.com/square/metrics/timeseries/blueflood
timeseries/blueflood/blueflood.go:87: can inline NewBlueflood
timeseries/blueflood/blueflood.go:127: inlining call to api.Interval.CoveringTimerange
timeseries/blueflood/blueflood.go:127: inlining call to time.Duration.Seconds
timeseries/blueflood/blueflood.go:127: inlining call to time.Time.UnixNano
timeseries/blueflood/blueflood.go:127: inlining call to time.Time.UnixNano
timeseries/blueflood/blueflood.go:128: inlining call to api.Timerange.Start
timeseries/blueflood/blueflood.go:128: inlining call to time.Unix
timeseries/blueflood/blueflood.go:129: inlining call to api.Timerange.End
timeseries/blueflood/blueflood.go:129: inlining call to time.Unix
timeseries/blueflood/blueflood.go:132: inlining call to time.Time.Before
timeseries/blueflood/blueflood.go:135: inlining call to time.Time.Add
timeseries/blueflood/blueflood.go:135: inlining call to time.Time.Before
timeseries/blueflood/blueflood.go:143: inlining call to time.Time.Add
timeseries/blueflood/blueflood.go:144: inlining call to time.Time.Before
timeseries/blueflood/blueflood.go:155: inlining call to time.Time.Add
timeseries/blueflood/blueflood.go:110: inlining call to api.Timerange.Resolution
timeseries/blueflood/blueflood.go:113: inlining call to api.Timerange.Interval
timeseries/blueflood/blueflood.go:113: inlining call to api.Timerange.Start
timeseries/blueflood/blueflood.go:113: inlining call to time.Unix
timeseries/blueflood/blueflood.go:113: inlining call to api.Timerange.End
timeseries/blueflood/blueflood.go:113: inlining call to time.Unix
timeseries/blueflood/blueflood.go:170: inlining call to api.Timerange.Resolution
timeseries/blueflood/blueflood.go:172: inlining call to api.Timerange.Resolution
timeseries/blueflood/blueflood.go:174: inlining call to api.Timerange.Interval
timeseries/blueflood/blueflood.go:174: inlining call to api.Timerange.Start
timeseries/blueflood/blueflood.go:174: inlining call to time.Unix
timeseries/blueflood/blueflood.go:174: inlining call to api.Timerange.End
timeseries/blueflood/blueflood.go:174: inlining call to time.Unix
timeseries/blueflood/blueflood.go:177: inlining call to api.Timerange.Interval
timeseries/blueflood/blueflood.go:177: inlining call to api.Timerange.Start
timeseries/blueflood/blueflood.go:177: inlining call to time.Unix
timeseries/blueflood/blueflood.go:177: inlining call to api.Timerange.End
timeseries/blueflood/blueflood.go:177: inlining call to time.Unix
timeseries/blueflood/blueflood.go:273: inlining call to time.Time.UnixNano
timeseries/blueflood/blueflood.go:274: inlining call to time.Time.UnixNano
timeseries/blueflood/blueflood.go:341: inlining call to api.Timerange.Slots
timeseries/blueflood/blueflood.go:344: inlining call to api.Timerange.StartMillis
timeseries/blueflood/blueflood.go:344: inlining call to api.Timerange.ResolutionMillis
timeseries/blueflood/blueflood.go:352: inlining call to api.Timerange.Slots
timeseries/blueflood/blueflood.go:356: inlining call to math.NaN
timeseries/blueflood/blueflood.go:356: inlining call to math.Float64frombits
timeseries/blueflood/blueflood.go:224: inlining call to api.Timerange.End
timeseries/blueflood/blueflood.go:224: inlining call to time.Unix
timeseries/blueflood/blueflood.go:224: inlining call to api.Timerange.Resolution
timeseries/blueflood/blueflood.go:224: inlining call to time.Time.Add
timeseries/blueflood/blueflood.go:224: inlining call to time.Time.Before
timeseries/blueflood/blueflood.go:225: inlining call to api.Timerange.Resolution
timeseries/blueflood/blueflood.go:367: can inline glob.func1
timeseries/blueflood/blueflood.go:372: inlining call to math.IsNaN
timeseries/blueflood/blueflood.go:382: can inline glob.func3
timeseries/blueflood/blueflood.go:384: inlining call to math.NaN
timeseries/blueflood/blueflood.go:384: inlining call to math.Float64frombits
timeseries/blueflood/blueflood.go:386: inlining call to math.IsNaN
timeseries/blueflood/blueflood.go:389: inlining call to math.IsNaN
timeseries/blueflood/blueflood.go:400: can inline glob.func5
timeseries/blueflood/blueflood.go:402: inlining call to math.NaN
timeseries/blueflood/blueflood.go:402: inlining call to math.Float64frombits
timeseries/blueflood/blueflood.go:404: inlining call to math.IsNaN
timeseries/blueflood/blueflood.go:407: inlining call to math.IsNaN
timeseries/blueflood/blueflood.go:53: r.Name escapes to heap
timeseries/blueflood/blueflood.go:52: leaking param: r
timeseries/blueflood/blueflood.go:53: r.Resolution escapes to heap
timeseries/blueflood/blueflood.go:53: Resolution.String ... argument does not escape
timeseries/blueflood/blueflood.go:102: b escapes to heap
timeseries/blueflood/blueflood.go:99: &Blueflood literal escapes to heap
timeseries/blueflood/blueflood.go:87: leaking param: c to result ~r1 level=-1
timeseries/blueflood/blueflood.go:89: http.DefaultClient escapes to heap
timeseries/blueflood/blueflood.go:137: resolution.Resolution escapes to heap
timeseries/blueflood/blueflood.go:137: resolution.TimeToLive escapes to heap
timeseries/blueflood/blueflood.go:137: now.Sub(here) escapes to heap
timeseries/blueflood/blueflood.go:123: leaking param content: resolutions
timeseries/blueflood/blueflood.go:124: map[Resolution]api.Interval literal escapes to heap
timeseries/blueflood/blueflood.go:123: planFetchIntervals now does not escape
timeseries/blueflood/blueflood.go:123: planFetchIntervals requestInterval does not escape
timeseries/blueflood/blueflood.go:137: planFetchIntervals ... argument does not escape
timeseries/blueflood/blueflood.go:107: leaking param content: b
timeseries/blueflood/blueflood.go:118: requested escapes to heap
timeseries/blueflood/blueflood.go:118: (*Blueflood).ChooseResolution ... argument does not escape
timeseries/blueflood/blueflood.go:172: requestRange.Resolution() escapes to heap
timeseries/blueflood/blueflood.go:168: leaking param content: resolutions
timeseries/blueflood/blueflood.go:168: leaking param content: resolutions
timeseries/blueflood/blueflood.go:168: planFetchIntervalsWithOnlyFiner now does not escape
timeseries/blueflood/blueflood.go:172: planFetchIntervalsWithOnlyFiner ... argument does not escape
timeseries/blueflood/blueflood.go:261: leaking param: metric
timeseries/blueflood/blueflood.go:261: leaking param content: b
timeseries/blueflood/blueflood.go:267: b.config.BaseURL escapes to heap
timeseries/blueflood/blueflood.go:261: leaking param content: b
timeseries/blueflood/blueflood.go:267: b.config.TenantID escapes to heap
timeseries/blueflood/blueflood.go:261: leaking param content: b
timeseries/blueflood/blueflood.go:267: graphiteName escapes to heap
timeseries/blueflood/blueflood.go:269: graphiteName escapes to heap
timeseries/blueflood/blueflood.go:261: leaking param content: sampler
timeseries/blueflood/blueflood.go:276: strings.ToLower(sampler.fieldName) escapes to heap
timeseries/blueflood/blueflood.go:261: leaking param: sampler
timeseries/blueflood/blueflood.go:273: composite literal escapes to heap
timeseries/blueflood/blueflood.go:274: composite literal escapes to heap
timeseries/blueflood/blueflood.go:261: leaking param: resolution
timeseries/blueflood/blueflood.go:275: composite literal escapes to heap
timeseries/blueflood/blueflood.go:276: composite literal escapes to heap
timeseries/blueflood/blueflood.go:264: timeseries.Error literal escapes to heap
timeseries/blueflood/blueflood.go:269: timeseries.Error literal escapes to heap
timeseries/blueflood/blueflood.go:261: (*Blueflood).constructURL interval does not escape
timeseries/blueflood/blueflood.go:267: (*Blueflood).constructURL ... argument does not escape
timeseries/blueflood/blueflood.go:269: (*Blueflood).constructURL ... argument does not escape
timeseries/blueflood/blueflood.go:276: (*Blueflood).constructURL ... argument does not escape
timeseries/blueflood/blueflood.go:272: (*Blueflood).constructURL url.Values literal does not escape
timeseries/blueflood/blueflood.go:283: leaking param content: queryURL
timeseries/blueflood/blueflood.go:283: leaking param content: b
timeseries/blueflood/blueflood.go:283: leaking param content: queryURL
timeseries/blueflood/blueflood.go:287: queryURL.String() escapes to heap
timeseries/blueflood/blueflood.go:287: err.Error() escapes to heap
timeseries/blueflood/blueflood.go:291: resp.Body escapes to heap
timeseries/blueflood/blueflood.go:283: leaking param content: queryURL
timeseries/blueflood/blueflood.go:294: queryURL.String() escapes to heap
timeseries/blueflood/blueflood.go:294: err.Error() escapes to heap
timeseries/blueflood/blueflood.go:283: leaking param content: queryURL
timeseries/blueflood/blueflood.go:300: queryURL.String() escapes to heap
timeseries/blueflood/blueflood.go:300: resp.StatusCode escapes to heap
timeseries/blueflood/blueflood.go:300: string(body) escapes to heap
timeseries/blueflood/blueflood.go:300: string(body) escapes to heap
timeseries/blueflood/blueflood.go:304: &parsedJSON escapes to heap
timeseries/blueflood/blueflood.go:303: moved to heap: parsedJSON
timeseries/blueflood/blueflood.go:304: &parsedJSON escapes to heap
timeseries/blueflood/blueflood.go:283: leaking param content: queryURL
timeseries/blueflood/blueflood.go:287: timeseries.FetchError literal escapes to heap
timeseries/blueflood/blueflood.go:294: timeseries.FetchError literal escapes to heap
timeseries/blueflood/blueflood.go:300: timeseries.FetchError literal escapes to heap
timeseries/blueflood/blueflood.go:307: timeseries.Error literal escapes to heap
timeseries/blueflood/blueflood.go:307: "error while fetching - json decoding\nBody: " + string(body) + "\nError: " + err.Error() + "\nURL: " + queryURL.String() escapes to heap
timeseries/blueflood/blueflood.go:287: (*Blueflood).performFetch ... argument does not escape
timeseries/blueflood/blueflood.go:294: (*Blueflood).performFetch ... argument does not escape
timeseries/blueflood/blueflood.go:300: (*Blueflood).performFetch ... argument does not escape
timeseries/blueflood/blueflood.go:307: (*Blueflood).performFetch string(body) does not escape
timeseries/blueflood/blueflood.go:313: leaking param content: b
timeseries/blueflood/blueflood.go:313: leaking param content: queryURL
timeseries/blueflood/blueflood.go:319: func literal escapes to heap
timeseries/blueflood/blueflood.go:319: func literal escapes to heap
timeseries/blueflood/blueflood.go:313: leaking param: b
timeseries/blueflood/blueflood.go:313: leaking param: queryURL
timeseries/blueflood/blueflood.go:318: make(chan Answer, 1) escapes to heap
timeseries/blueflood/blueflood.go:328: timeseries.Error literal escapes to heap
timeseries/blueflood/blueflood.go:245: leaking param content: b
timeseries/blueflood/blueflood.go:245: leaking param: metric
timeseries/blueflood/blueflood.go:245: leaking param: sampler
timeseries/blueflood/blueflood.go:245: leaking param: resolution
timeseries/blueflood/blueflood.go:245: leaking param: b
timeseries/blueflood/blueflood.go:245: (*Blueflood).requestPoints interval does not escape
timeseries/blueflood/blueflood.go:341: make([][]float64, int(~r0)) escapes to heap
timeseries/blueflood/blueflood.go:352: make([]float64, int(~r0)) escapes to heap
timeseries/blueflood/blueflood.go:352: make([]float64, int(~r0)) escapes to heap
timeseries/blueflood/blueflood.go:339: samplePoints points does not escape
timeseries/blueflood/blueflood.go:339: samplePoints sampler does not escape
timeseries/blueflood/blueflood.go:356: samplePoints &math.b·2 does not escape
timeseries/blueflood/blueflood.go:192: leaking closure reference request
timeseries/blueflood/blueflood.go:184: leaking param: request
timeseries/blueflood/blueflood.go:192: request.Metric.String() escapes to heap
timeseries/blueflood/blueflood.go:192: resolution.Resolution escapes to heap
timeseries/blueflood/blueflood.go:192: leaking closure reference request
timeseries/blueflood/blueflood.go:193: leaking closure reference b
timeseries/blueflood/blueflood.go:184: leaking param: b
timeseries/blueflood/blueflood.go:192: leaking closure reference request
timeseries/blueflood/blueflood.go:193: leaking closure reference sampler
timeseries/blueflood/blueflood.go:184: leaking param: sampler
timeseries/blueflood/blueflood.go:192: leaking closure reference resolution
timeseries/blueflood/blueflood.go:197: queue.Mutex escapes to heap
timeseries/blueflood/blueflood.go:197: leaking closure reference queue
timeseries/blueflood/blueflood.go:198: queue.Mutex escapes to heap
timeseries/blueflood/blueflood.go:197: leaking closure reference queue
timeseries/blueflood/blueflood.go:191: func literal escapes to heap
timeseries/blueflood/blueflood.go:191: func literal escapes to heap
timeseries/blueflood/blueflood.go:184: moved to heap: request
timeseries/blueflood/blueflood.go:192: &request escapes to heap
timeseries/blueflood/blueflood.go:184: leaking param content: intervals
timeseries/blueflood/blueflood.go:187: moved to heap: allPoints
timeseries/blueflood/blueflood.go:199: &allPoints escapes to heap
timeseries/blueflood/blueflood.go:187: []metricPoint literal escapes to heap
timeseries/blueflood/blueflood.go:184: mark escaped content: intervals
timeseries/blueflood/blueflood.go:192: (*Blueflood).fetchSingleTimeseriesPrepped.func1 request.Metric does not escape
timeseries/blueflood/blueflood.go:192: (*Blueflood).fetchSingleTimeseriesPrepped.func1 ... argument does not escape
timeseries/blueflood/blueflood.go:220: request.SampleMethod.String() escapes to heap
timeseries/blueflood/blueflood.go:217: leaking param content: b
timeseries/blueflood/blueflood.go:217: (*Blueflood).prepWork request does not escape
timeseries/blueflood/blueflood.go:220: (*Blueflood).prepWork ... argument does not escape
timeseries/blueflood/blueflood.go:236: leaking param: request
timeseries/blueflood/blueflood.go:236: leaking param content: b
timeseries/blueflood/blueflood.go:236: leaking param: b
timeseries/blueflood/blueflood.go:237: (*Blueflood).FetchSingleTimeseries request.Metric does not escape
timeseries/blueflood/blueflood.go:431: leaking closure reference b
timeseries/blueflood/blueflood.go:418: leaking param: b
timeseries/blueflood/blueflood.go:431: leaking closure reference samplerFunc
timeseries/blueflood/blueflood.go:418: leaking param: request
timeseries/blueflood/blueflood.go:426: make([]api.Timeseries, len(singleRequests)) escapes to heap
timeseries/blueflood/blueflood.go:430: func literal escapes to heap
timeseries/blueflood/blueflood.go:430: func literal escapes to heap
timeseries/blueflood/blueflood.go:426: make([]api.Timeseries, len(singleRequests)) escapes to heap
timeseries/blueflood/blueflood.go:426: make([]api.Timeseries, len(singleRequests)) escapes to heap
timeseries/blueflood/blueflood.go:451: b.config.BaseURL escapes to heap
timeseries/blueflood/blueflood.go:450: leaking param content: b
timeseries/blueflood/blueflood.go:450: leaking param content: b
timeseries/blueflood/blueflood.go:458: resp.Body escapes to heap
timeseries/blueflood/blueflood.go:462: resp.StatusCode escapes to heap
timeseries/blueflood/blueflood.go:462: string(body) escapes to heap
timeseries/blueflood/blueflood.go:462: string(body) escapes to heap
timeseries/blueflood/blueflood.go:451: (*Blueflood).CheckHealthy ... argument does not escape
timeseries/blueflood/blueflood.go:462: (*Blueflood).CheckHealthy ... argument does not escape
timeseries/blueflood/blueflood.go:368: glob.func2 bucket does not escape
timeseries/blueflood/blueflood.go:383: glob.func4 bucket does not escape
timeseries/blueflood/blueflood.go:384: glob.func4 &math.b·2 does not escape
timeseries/blueflood/blueflood.go:401: glob.func6 bucket does not escape
timeseries/blueflood/blueflood.go:402: glob.func6 &math.b·2 does not escape
<autogenerated>:1: leaking param content: .this
<autogenerated>:2: leaking param: url
<autogenerated>:2: leaking param: .this
# github.com/square/metrics/main/ruletester
main/ruletester/ruletester.go:66: inlining call to bytes.NewBuffer
main/ruletester/ruletester.go:74: inlining call to gob.NewDecoder
main/ruletester/ruletester.go:74: inlining call to bufio.NewReader
main/ruletester/ruletester.go:74: inlining call to bufio.NewReaderSize
main/ruletester/ruletester.go:74: inlining call to bufio.reset
main/ruletester/ruletester.go:188: inlining call to runtime.NumCPU
main/ruletester/ruletester.go:88: inlining call to runtime.NumCPU
main/ruletester/ruletester.go:59: leaking param: file
main/ruletester/ruletester.go:66: bytes.NewBuffer(data) escapes to heap
main/ruletester/ruletester.go:66: &bytes.Buffer literal escapes to heap
main/ruletester/ruletester.go:69: err.Error() escapes to heap
main/ruletester/ruletester.go:74: make([]byte, bufio.size·3) escapes to heap
main/ruletester/ruletester.go:74: make([]byte, bufio.size·3) escapes to heap
main/ruletester/ruletester.go:74: r escapes to heap
main/ruletester/ruletester.go:74: bufio.NewReader(gob.r·2) escapes to heap
main/ruletester/ruletester.go:74: new(bufio.Reader) escapes to heap
main/ruletester/ruletester.go:74: r escapes to heap
main/ruletester/ruletester.go:74: bufio.NewReader(gob.r·2) escapes to heap
main/ruletester/ruletester.go:74: new(bufio.Reader) escapes to heap
main/ruletester/ruletester.go:74: make(map[gob.typeId]*gob.wireType) escapes to heap
main/ruletester/ruletester.go:74: make(map[reflect.Type]map[gob.typeId]**gob.decEngine) escapes to heap
main/ruletester/ruletester.go:74: make(map[gob.typeId]**gob.decEngine) escapes to heap
main/ruletester/ruletester.go:74: make([]byte, 9) escapes to heap
main/ruletester/ruletester.go:74: new(gob.Decoder) escapes to heap
main/ruletester/ruletester.go:74: &result escapes to heap
main/ruletester/ruletester.go:73: moved to heap: result
main/ruletester/ruletester.go:74: &result escapes to heap
main/ruletester/ruletester.go:73: map[string]int literal escapes to heap
main/ruletester/ruletester.go:79: []string literal escapes to heap
main/ruletester/ruletester.go:69: ReadMetricsFile ... argument does not escape
main/ruletester/ruletester.go:132: leaking param: graphiteConverter
main/ruletester/ruletester.go:132: leaking param: metric
main/ruletester/ruletester.go:134: ClassifyMetric graphiteConverter does not escape
main/ruletester/ruletester.go:138: ClassifyMetric graphiteConverter does not escape
main/ruletester/ruletester.go:185: moved to heap: wgWorkQueue
main/ruletester/ruletester.go:195: wgWorkQueue escapes to heap
main/ruletester/ruletester.go:195: leaking closure reference wgWorkQueue
main/ruletester/ruletester.go:202: leaking closure reference graphiteConverter
main/ruletester/ruletester.go:148: leaking param: graphiteConverter
main/ruletester/ruletester.go:170: moved to heap: wgClassifyAppend
main/ruletester/ruletester.go:181: wgClassifyAppend escapes to heap
main/ruletester/ruletester.go:181: leaking closure reference wgClassifyAppend
main/ruletester/ruletester.go:148: leaking param content: metrics
main/ruletester/ruletester.go:153: func literal escapes to heap
main/ruletester/ruletester.go:153: func literal escapes to heap
main/ruletester/ruletester.go:148: leaking param: metrics
main/ruletester/ruletester.go:151: make(chan string, 100) escapes to heap
main/ruletester/ruletester.go:162: make(chan string, 100) escapes to heap
main/ruletester/ruletester.go:163: make(chan string, 100) escapes to heap
main/ruletester/ruletester.go:164: make(chan string, 100) escapes to heap
main/ruletester/ruletester.go:165: make(chan string, 100) escapes to heap
main/ruletester/ruletester.go:176: wgClassifyAppend escapes to heap
main/ruletester/ruletester.go:177: func literal escapes to heap
main/ruletester/ruletester.go:177: func literal escapes to heap
main/ruletester/ruletester.go:161: map[ConversionStatus]chan string literal escapes to heap
main/ruletester/ruletester.go:168: map[ConversionStatus][]string literal escapes to heap
main/ruletester/ruletester.go:181: &wgClassifyAppend escapes to heap
main/ruletester/ruletester.go:192: wgWorkQueue escapes to heap
main/ruletester/ruletester.go:193: func literal escapes to heap
main/ruletester/ruletester.go:193: func literal escapes to heap
main/ruletester/ruletester.go:195: &wgWorkQueue escapes to heap
main/ruletester/ruletester.go:151: make(chan string, 100) escapes to heap
main/ruletester/ruletester.go:161: map[ConversionStatus]chan string literal escapes to heap
main/ruletester/ruletester.go:148: moved to heap: graphiteConverter
main/ruletester/ruletester.go:202: &graphiteConverter escapes to heap
main/ruletester/ruletester.go:206: wgWorkQueue escapes to heap
main/ruletester/ruletester.go:212: wgClassifyAppend escapes to heap
main/ruletester/ruletester.go:215: len(classifiedMetrics[Matched]) escapes to heap
main/ruletester/ruletester.go:216: len(classifiedMetrics[Unmatched]) escapes to heap
main/ruletester/ruletester.go:217: len(classifiedMetrics[ReverseFailed]) escapes to heap
main/ruletester/ruletester.go:220: metric escapes to heap
main/ruletester/ruletester.go:222: len(classifiedMetrics[ReverseChanged]) escapes to heap
main/ruletester/ruletester.go:225: metric escapes to heap
main/ruletester/ruletester.go:168: map[ConversionStatus][]string literal escapes to heap
main/ruletester/ruletester.go:149: DoAnalysis graphiteConverter does not escape
main/ruletester/ruletester.go:215: DoAnalysis ... argument does not escape
main/ruletester/ruletester.go:216: DoAnalysis ... argument does not escape
main/ruletester/ruletester.go:217: DoAnalysis ... argument does not escape
main/ruletester/ruletester.go:220: DoAnalysis ... argument does not escape
main/ruletester/ruletester.go:222: DoAnalysis ... argument does not escape
main/ruletester/ruletester.go:225: DoAnalysis ... argument does not escape
main/ruletester/ruletester.go:246: metric escapes to heap
main/ruletester/ruletester.go:230: leaking param content: unmatched
main/ruletester/ruletester.go:250: i escapes to heap
main/ruletester/ruletester.go:230: leaking param content: graphiteConverter
main/ruletester/ruletester.go:255: rule.Description() escapes to heap
main/ruletester/ruletester.go:258: match escapes to heap
main/ruletester/ruletester.go:230: leaking param content: graphiteConverter
main/ruletester/ruletester.go:246: GenerateReport ... argument does not escape
main/ruletester/ruletester.go:250: GenerateReport ... argument does not escape
main/ruletester/ruletester.go:255: GenerateReport ... argument does not escape
main/ruletester/ruletester.go:258: GenerateReport ... argument does not escape
main/ruletester/ruletester.go:105: err.Error() escapes to heap
main/ruletester/ruletester.go:112: err escapes to heap
main/ruletester/ruletester.go:120: len(metrics) escapes to heap
main/ruletester/ruletester.go:105: main ... argument does not escape
main/ruletester/ruletester.go:112: main ... argument does not escape
main/ruletester/ruletester.go:120: main ... argument does not escape
# github.com/square/metrics/query/parser
query/parser/errors.go:36: can inline AssertionError.Error
query/parser/errors.go:41: can inline SyntaxError.Token
query/parser/errors.go:45: can inline SyntaxError.Error
query/parser/errors.go:55: inlining call to SyntaxError.Error
query/parser/language.peg.go:326: can inline (*token32).isZero
query/parser/language.peg.go:330: can inline (*token32).isParentOf
query/parser/language.peg.go:334: can inline (*token32).getToken32
query/parser/language.peg.go:347: can inline (*tokens32).trim
query/parser/language.peg.go:548: inlining call to (*token32).getToken32
query/parser/language.peg.go:424: can inline (*tokens32).PreOrder.func1.1
query/parser/language.peg.go:439: inlining call to (*token32).isParentOf
query/parser/language.peg.go:440: inlining call to (*token32).isParentOf
query/parser/language.peg.go:455: inlining call to (*token32).isParentOf
query/parser/language.peg.go:466: inlining call to (*token32).isParentOf
query/parser/language.peg.go:476: inlining call to (*token32).isParentOf
query/parser/language.peg.go:540: can inline (*tokens32).Add
query/parser/language.peg.go:562: inlining call to (*token32).getToken32
query/parser/language.peg.go:580: can inline (*tokens32).Expand
query/parser/parser.go:242: can inline (*Parser).pushNode
query/parser/parser.go:280: inlining call to (*Parser).pushNode
query/parser/parser.go:183: can inline (*Parser).flagSyntaxError
query/parser/parser.go:623: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:285: inlining call to (*Parser).pushNode
query/parser/parser.go:333: can inline (*Parser).addEvaluationContext
query/parser/parser.go:338: inlining call to (*Parser).pushNode
query/parser/parser.go:325: can inline (*Parser).addPropertyKey
query/parser/parser.go:326: inlining call to (*Parser).pushNode
query/parser/parser.go:329: can inline (*Parser).addPropertyValue
query/parser/parser.go:330: inlining call to (*Parser).pushNode
query/parser/parser.go:110: inlining call to time.Time.Unix
query/parser/parser.go:121: inlining call to time.Time.Add
query/parser/parser.go:121: inlining call to time.Time.Unix
query/parser/parser.go:128: inlining call to time.Time.Unix
query/parser/parser.go:128: inlining call to time.Time.Nanosecond
query/parser/parser.go:131: inlining call to errors.New
query/parser/parser.go:359: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:378: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:388: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:405: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:411: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:413: inlining call to (*Parser).pushNode
query/parser/parser.go:426: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:429: inlining call to (*Parser).pushNode
query/parser/parser.go:577: inlining call to (*Parser).pushNode
query/parser/parser.go:485: can inline (*Parser).addExpressionList
query/parser/parser.go:486: inlining call to (*Parser).pushNode
query/parser/parser.go:494: inlining call to (*Parser).pushNode
query/parser/parser.go:307: can inline (*Parser).addOperatorLiteral
query/parser/parser.go:308: inlining call to (*Parser).pushNode
query/parser/parser.go:322: inlining call to (*Parser).pushNode
query/parser/parser.go:545: can inline (*Parser).addGroupBy
query/parser/parser.go:546: inlining call to (*Parser).pushNode
query/parser/parser.go:446: inlining call to (*Parser).pushNode
query/parser/parser.go:590: inlining call to (*Parser).pushNode
query/parser/parser.go:595: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:601: inlining call to (*Parser).pushNode
query/parser/parser.go:602: inlining call to math.IsNaN
query/parser/parser.go:606: inlining call to (*Parser).flagSyntaxError
query/parser/parser.go:610: can inline (*Parser).addStringNode
query/parser/parser.go:611: inlining call to (*Parser).pushNode
query/parser/parser.go:471: inlining call to (*Parser).pushNode
query/parser/parser.go:462: inlining call to (*Parser).pushNode
query/parser/parser.go:482: inlining call to (*Parser).pushNode
query/parser/parser.go:573: inlining call to (*Parser).pushNode
query/parser/parser.go:585: inlining call to (*Parser).pushNode
query/parser/parser.go:565: inlining call to (*Parser).pushNode
query/parser/parser.go:506: inlining call to (*Parser).pushNode
query/parser/parser.go:528: inlining call to (*Parser).pushNode
query/parser/parser.go:518: inlining call to (*Parser).pushNode
query/parser/parser.go:535: can inline (*Parser).addLiteralList
query/parser/parser.go:536: inlining call to (*Parser).pushNode
query/parser/parser.go:531: can inline (*Parser).addTagLiteral
query/parser/parser.go:532: inlining call to (*Parser).pushNode
query/parser/language.peg.go:708: inlining call to (*Parser).pushNode
query/parser/language.peg.go:712: inlining call to (*Parser).addEvaluationContext
query/parser/language.peg.go:712: inlining call to (*Parser).pushNode
query/parser/language.peg.go:714: inlining call to (*Parser).addPropertyKey
query/parser/language.peg.go:714: inlining call to (*Parser).pushNode
query/parser/language.peg.go:716: inlining call to (*Parser).addPropertyValue
query/parser/language.peg.go:716: inlining call to (*Parser).pushNode
query/parser/language.peg.go:724: inlining call to (*Parser).addExpressionList
query/parser/language.peg.go:724: inlining call to (*Parser).pushNode
query/parser/language.peg.go:730: inlining call to (*Parser).addOperatorLiteral
query/parser/language.peg.go:730: inlining call to (*Parser).pushNode
query/parser/language.peg.go:732: inlining call to (*Parser).addOperatorLiteral
query/parser/language.peg.go:732: inlining call to (*Parser).pushNode
query/parser/language.peg.go:736: inlining call to (*Parser).addOperatorLiteral
query/parser/language.peg.go:736: inlining call to (*Parser).pushNode
query/parser/language.peg.go:738: inlining call to (*Parser).addOperatorLiteral
query/parser/language.peg.go:738: inlining call to (*Parser).pushNode
query/parser/language.peg.go:742: inlining call to (*Parser).pushNode
query/parser/language.peg.go:744: inlining call to (*Parser).addExpressionList
query/parser/language.peg.go:744: inlining call to (*Parser).pushNode
query/parser/language.peg.go:747: inlining call to (*Parser).addExpressionList
query/parser/language.peg.go:747: inlining call to (*Parser).pushNode
query/parser/language.peg.go:748: inlining call to (*Parser).addGroupBy
query/parser/language.peg.go:748: inlining call to (*Parser).pushNode
query/parser/language.peg.go:757: inlining call to (*Parser).addStringNode
query/parser/language.peg.go:757: inlining call to (*Parser).pushNode
query/parser/language.peg.go:761: inlining call to (*Parser).addGroupBy
query/parser/language.peg.go:761: inlining call to (*Parser).pushNode
query/parser/language.peg.go:764: inlining call to (*Parser).pushNode
query/parser/language.peg.go:772: inlining call to (*Parser).pushNode
query/parser/language.peg.go:819: inlining call to (*Parser).pushNode
query/parser/language.peg.go:822: inlining call to (*Parser).addLiteralList
query/parser/language.peg.go:822: inlining call to (*Parser).pushNode
query/parser/language.peg.go:828: inlining call to (*Parser).addTagLiteral
query/parser/language.peg.go:828: inlining call to (*Parser).pushNode
query/parser/language.peg.go:874: can inline (*Parser).Init.func4
query/parser/language.peg.go:859: can inline (*Parser).Init.func2
query/parser/parser.go:737: can inline min
query/parser/parser.go:744: can inline max
query/parser/parser.go:711: inlining call to min
query/parser/parser.go:711: inlining call to max
query/parser/parser.go:712: inlining call to min
query/parser/parser.go:712: inlining call to max
query/parser/errors.go:36: leaking param: err to result ~r0 level=0
query/parser/errors.go:41: leaking param: err to result ~r0 level=0
query/parser/errors.go:45: leaking param: err to result ~r0 level=0
query/parser/errors.go:53: make([]string, len(errors)) escapes to heap
query/parser/errors.go:52: leaking param content: errors
query/parser/language.peg.go:303: rul3s[node.token32.pegRule] escapes to heap
query/parser/language.peg.go:303: strconv.Quote(string(([]rune)(buffer)[node.token32.begin:node.token32.end])) escapes to heap
query/parser/language.peg.go:298: (*node32).print node does not escape
query/parser/language.peg.go:298: (*node32).print buffer does not escape
query/parser/language.peg.go:303: (*node32).print ([]rune)(buffer) does not escape
query/parser/language.peg.go:303: (*node32).print string(([]rune)(buffer)[node.token32.begin:node.token32.end]) does not escape
query/parser/language.peg.go:303: (*node32).print ... argument does not escape
query/parser/language.peg.go:311: (*node32).Print node does not escape
query/parser/language.peg.go:311: (*node32).Print buffer does not escape
query/parser/language.peg.go:326: (*token32).isZero t does not escape
query/parser/language.peg.go:330: (*token32).isParentOf t does not escape
query/parser/language.peg.go:334: (*token32).getToken32 t does not escape
query/parser/language.peg.go:339: rul3s[t.pegRule] escapes to heap
query/parser/language.peg.go:339: t.begin escapes to heap
query/parser/language.peg.go:339: t.end escapes to heap
query/parser/language.peg.go:339: t.next escapes to heap
query/parser/language.peg.go:338: (*token32).String t does not escape
query/parser/language.peg.go:339: (*token32).String ... argument does not escape
query/parser/language.peg.go:348: (*tokens32).trim ignoring self-assignment to t.tree
query/parser/language.peg.go:347: (*tokens32).trim t does not escape
query/parser/language.peg.go:353: token.String() escapes to heap
query/parser/language.peg.go:351: (*tokens32).Print t does not escape
query/parser/language.peg.go:353: (*tokens32).Print token does not escape
query/parser/language.peg.go:353: (*tokens32).Print ... argument does not escape
query/parser/language.peg.go:365: (*tokens32).Order ignoring self-assignment to t.tree
query/parser/language.peg.go:357: leaking param: t to result ~r0 level=1
query/parser/language.peg.go:376: make([][]token32, len(depths)) escapes to heap
query/parser/language.peg.go:362: make([]int32, 1, math.MaxInt16) escapes to heap
query/parser/language.peg.go:376: make([][]token32, len(depths)) escapes to heap
query/parser/language.peg.go:376: make([]token32, len(t.tree) + len(depths)) escapes to heap
query/parser/language.peg.go:376: make([]token32, len(t.tree) + len(depths)) escapes to heap
query/parser/language.peg.go:376: make([][]token32, len(depths)) escapes to heap
query/parser/language.peg.go:546: func literal escapes to heap
query/parser/language.peg.go:546: func literal escapes to heap
query/parser/language.peg.go:544: leaking param: t
query/parser/language.peg.go:545: make(chan token32, 16) escapes to heap
query/parser/language.peg.go:545: make(chan token32, 16) escapes to heap
query/parser/language.peg.go:548: (*tokens32).Tokens.func1 v does not escape
query/parser/language.peg.go:398: leaking param: t
query/parser/language.peg.go:400: &node32 literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:400: &element literal escapes to heap
query/parser/language.peg.go:400: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:400: &element literal escapes to heap
query/parser/language.peg.go:400: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:400: &element literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:400: &node32 literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:400: &element literal escapes to heap
query/parser/language.peg.go:400: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:400: &element literal escapes to heap
query/parser/language.peg.go:400: &node32 literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:405: &node32 literal escapes to heap
query/parser/language.peg.go:400: &element literal escapes to heap
query/parser/language.peg.go:411: &element literal escapes to heap
query/parser/language.peg.go:421: make([]int32, len(ordered)) escapes to heap
query/parser/language.peg.go:425: leaking closure reference states
query/parser/language.peg.go:421: make([]int32, len(ordered)) escapes to heap
query/parser/language.peg.go:421: make([]int32, len(ordered)) escapes to heap
query/parser/language.peg.go:423: make([]int32, len(ordered)) escapes to heap
query/parser/language.peg.go:418: func literal escapes to heap
query/parser/language.peg.go:418: func literal escapes to heap
query/parser/language.peg.go:416: leaking param content: t
query/parser/language.peg.go:417: make(chan state32, 6) escapes to heap
query/parser/language.peg.go:421: make([]int32, len(ordered)) escapes to heap
query/parser/language.peg.go:421: make([]int32, len(ordered)) escapes to heap
query/parser/language.peg.go:421: make([]int32, len(ordered)) escapes to heap
query/parser/language.peg.go:416: mark escaped content: t
query/parser/language.peg.go:417: make(chan state32, 6) escapes to heap
query/parser/language.peg.go:416: leaking param: t to result ~r1 level=1
query/parser/language.peg.go:424: (*tokens32).PreOrder.func1 func literal does not escape
query/parser/language.peg.go:439: (*tokens32).PreOrder.func1 a does not escape
query/parser/language.peg.go:440: (*tokens32).PreOrder.func1 ordered[depth - 1][j - 2] does not escape
query/parser/language.peg.go:455: (*tokens32).PreOrder.func1 b does not escape
query/parser/language.peg.go:466: (*tokens32).PreOrder.func1 a does not escape
query/parser/language.peg.go:476: (*tokens32).PreOrder.func1 a does not escape
query/parser/language.peg.go:489: leaking param content: t
query/parser/language.peg.go:494: token.token32.begin escapes to heap
query/parser/language.peg.go:496: rul3s[ordered[i][depths[i] - 1].pegRule] escapes to heap
query/parser/language.peg.go:498: rul3s[token.token32.pegRule] escapes to heap
query/parser/language.peg.go:500: token.token32.begin escapes to heap
query/parser/language.peg.go:502: rul3s[ordered[i][depths[i] - 1].pegRule] escapes to heap
query/parser/language.peg.go:504: rul3s[token.token32.pegRule] escapes to heap
query/parser/language.peg.go:509: j escapes to heap
query/parser/language.peg.go:509: token.token32.String() escapes to heap
query/parser/language.peg.go:514: j escapes to heap
query/parser/language.peg.go:514: token.token32.String() escapes to heap
query/parser/language.peg.go:519: c escapes to heap
query/parser/language.peg.go:521: rul3s[ordered[i][depths[i] - 1].pegRule] escapes to heap
query/parser/language.peg.go:523: rul3s[token.token32.pegRule] escapes to heap
query/parser/language.peg.go:494: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:496: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:498: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:500: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:502: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:504: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:509: (*tokens32).PrintSyntax token.token32 does not escape
query/parser/language.peg.go:509: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:514: (*tokens32).PrintSyntax token.token32 does not escape
query/parser/language.peg.go:514: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:519: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:521: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:523: (*tokens32).PrintSyntax ... argument does not escape
query/parser/language.peg.go:530: leaking param content: t
query/parser/language.peg.go:536: rul3s[token.token32.pegRule] escapes to heap
query/parser/language.peg.go:536: strconv.Quote(string(([]rune)(buffer)[token.token32.begin:token.token32.end])) escapes to heap
query/parser/language.peg.go:530: (*tokens32).PrintSyntaxTree buffer does not escape
query/parser/language.peg.go:536: (*tokens32).PrintSyntaxTree ([]rune)(buffer) does not escape
query/parser/language.peg.go:536: (*tokens32).PrintSyntaxTree string(([]rune)(buffer)[token.token32.begin:token.token32.end]) does not escape
query/parser/language.peg.go:536: (*tokens32).PrintSyntaxTree ... argument does not escape
query/parser/language.peg.go:540: (*tokens32).Add t does not escape
query/parser/language.peg.go:558: make([]token32, length) escapes to heap
query/parser/language.peg.go:558: make([]token32, length) escapes to heap
query/parser/language.peg.go:555: (*tokens32).Error t does not escape
query/parser/language.peg.go:562: (*tokens32).Error o[len(o) - 2] does not escape
query/parser/language.peg.go:583: make([]token32, 2 * len(tree)) escapes to heap
query/parser/language.peg.go:580: leaking param content: t
query/parser/language.peg.go:583: make([]token32, 2 * len(tree)) escapes to heap
query/parser/language.peg.go:624: leaking param: positions
query/parser/language.peg.go:625: make(textPositionMap, len(positions)) escapes to heap
query/parser/language.peg.go:624: translatePositions buffer does not escape
query/parser/language.peg.go:656: make([]int, 2 * len(tokens)) escapes to heap
query/parser/language.peg.go:656: make([]int, 2 * len(tokens)) escapes to heap
query/parser/language.peg.go:669: rul3s[token.pegRule] escapes to heap
query/parser/language.peg.go:670: translations[begin].line escapes to heap
query/parser/language.peg.go:670: translations[begin].symbol escapes to heap
query/parser/language.peg.go:671: translations[end].line escapes to heap
query/parser/language.peg.go:671: translations[end].symbol escapes to heap
query/parser/language.peg.go:672: strconv.Quote(string(e.p.buffer[begin:end])) escapes to heap
query/parser/language.peg.go:654: (*parseError).Error e does not escape
query/parser/language.peg.go:655: (*parseError).Error []token32 literal does not escape
query/parser/language.peg.go:672: (*parseError).Error string(e.p.buffer[begin:end]) does not escape
query/parser/language.peg.go:672: (*parseError).Error ... argument does not escape
query/parser/language.peg.go:678: leaking param content: p
query/parser/language.peg.go:678: leaking param content: p
query/parser/language.peg.go:682: leaking param content: p
query/parser/parser.go:659: functionName make([]uintptr, 1) does not escape
query/parser/parser.go:201: (*Parser).popNodeInto ignoring self-assignment to p.nodeStack
query/parser/parser.go:189: leaking param: target
query/parser/parser.go:193: functionName(1) escapes to heap
query/parser/parser.go:198: functionName(1) escapes to heap
query/parser/parser.go:189: leaking param content: p
query/parser/parser.go:208: functionName(1) escapes to heap
query/parser/parser.go:209: expectedType.String() escapes to heap
query/parser/parser.go:210: actualType.String() escapes to heap
query/parser/parser.go:193: (*Parser).popNodeInto ... argument does not escape
query/parser/parser.go:198: (*Parser).popNodeInto ... argument does not escape
query/parser/parser.go:210: (*Parser).popNodeInto ... argument does not escape
query/parser/parser.go:260: leaking param content: p
query/parser/parser.go:262: &contextNode escapes to heap
query/parser/parser.go:261: moved to heap: contextNode
query/parser/parser.go:262: &contextNode escapes to heap
query/parser/parser.go:260: leaking param content: p
query/parser/parser.go:264: &predicate escapes to heap
query/parser/parser.go:263: moved to heap: predicate
query/parser/parser.go:264: &predicate escapes to heap
query/parser/parser.go:260: leaking param content: p
query/parser/parser.go:266: &list escapes to heap
query/parser/parser.go:265: moved to heap: list
query/parser/parser.go:266: &list escapes to heap
query/parser/parser.go:276: &command.SelectCommand literal escapes to heap
query/parser/parser.go:275: &command.SelectCommand literal escapes to heap
query/parser/parser.go:288: leaking param content: p
query/parser/parser.go:290: &matcher escapes to heap
query/parser/parser.go:289: moved to heap: matcher
query/parser/parser.go:290: &matcher escapes to heap
query/parser/parser.go:291: &command.DescribeAllCommand literal escapes to heap
query/parser/parser.go:291: &command.DescribeAllCommand literal escapes to heap
query/parser/parser.go:280: regexp.MustCompile("") escapes to heap
query/parser/parser.go:279: leaking param content: p
query/parser/parser.go:279: leaking param content: p
query/parser/parser.go:615: leaking param content: p
query/parser/parser.go:617: &literal escapes to heap
query/parser/parser.go:616: moved to heap: literal
query/parser/parser.go:617: &literal escapes to heap
query/parser/parser.go:622: err.Error() escapes to heap
query/parser/parser.go:615: leaking param content: p
query/parser/parser.go:615: leaking param content: p
query/parser/parser.go:622: (*Parser).popRegex ... argument does not escape
query/parser/parser.go:283: leaking param content: p
query/parser/parser.go:285: compiled escapes to heap
query/parser/parser.go:283: leaking param content: p
query/parser/parser.go:283: leaking param content: p
query/parser/parser.go:294: leaking param content: p
query/parser/parser.go:297: &literal escapes to heap
query/parser/parser.go:296: moved to heap: literal
query/parser/parser.go:297: &literal escapes to heap
query/parser/parser.go:294: leaking param content: p
query/parser/parser.go:300: &tagLiteral escapes to heap
query/parser/parser.go:299: moved to heap: tagLiteral
query/parser/parser.go:300: &tagLiteral escapes to heap
query/parser/parser.go:304: &command.DescribeMetricsCommand literal escapes to heap
query/parser/parser.go:303: &command.DescribeMetricsCommand literal escapes to heap
query/parser/parser.go:635: leaking param: escaped to result ~r1 level=0
query/parser/parser.go:635: leaking param: escaped to result ~r1 level=0
query/parser/parser.go:635: leaking param: escaped
query/parser/parser.go:639: unescapeLiteral []string literal does not escape
query/parser/parser.go:647: unescapeLiteral "\\" + char does not escape
query/parser/parser.go:249: leaking param content: p
query/parser/parser.go:251: &condition escapes to heap
query/parser/parser.go:250: moved to heap: condition
query/parser/parser.go:251: &condition escapes to heap
query/parser/parser.go:249: leaking param content: p
query/parser/parser.go:253: &literal escapes to heap
query/parser/parser.go:252: moved to heap: literal
query/parser/parser.go:253: &literal escapes to heap
query/parser/parser.go:257: &command.DescribeCommand literal escapes to heap
query/parser/parser.go:256: &command.DescribeCommand literal escapes to heap
query/parser/parser.go:107: leaking param: date
query/parser/parser.go:124: date escapes to heap
query/parser/parser.go:131: &errors.errorString literal escapes to heap
query/parser/parser.go:131: &errors.errorString literal escapes to heap
query/parser/parser.go:107: parseDate now does not escape
query/parser/parser.go:124: parseDate ... argument does not escape
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:343: &valueNode escapes to heap
query/parser/parser.go:342: moved to heap: valueNode
query/parser/parser.go:343: &valueNode escapes to heap
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:345: &keyNode escapes to heap
query/parser/parser.go:344: moved to heap: keyNode
query/parser/parser.go:345: &keyNode escapes to heap
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:347: &contextNode escapes to heap
query/parser/parser.go:346: moved to heap: contextNode
query/parser/parser.go:347: &contextNode escapes to heap
query/parser/parser.go:358: key escapes to heap
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:377: value escapes to heap
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:404: err.Error() escapes to heap
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:410: key escapes to heap
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:413: contextNode escapes to heap
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:341: leaking param content: p
query/parser/parser.go:358: (*Parser).insertPropertyKeyValue ... argument does not escape
query/parser/parser.go:377: (*Parser).insertPropertyKeyValue ... argument does not escape
query/parser/parser.go:404: (*Parser).insertPropertyKeyValue ... argument does not escape
query/parser/parser.go:410: (*Parser).insertPropertyKeyValue ... argument does not escape
query/parser/parser.go:417: leaking param content: p
query/parser/parser.go:419: &contextNode escapes to heap
query/parser/parser.go:418: moved to heap: contextNode
query/parser/parser.go:419: &contextNode escapes to heap
query/parser/parser.go:425: field escapes to heap
query/parser/parser.go:417: leaking param content: p
query/parser/parser.go:417: leaking param content: p
query/parser/parser.go:429: contextNode escapes to heap
query/parser/parser.go:417: leaking param content: p
query/parser/parser.go:417: leaking param content: p
query/parser/parser.go:420: (*Parser).checkPropertyClause []string literal does not escape
query/parser/parser.go:425: (*Parser).checkPropertyClause ... argument does not escape
query/parser/parser.go:577: predicate.All() escapes to heap
query/parser/parser.go:576: leaking param content: p
query/parser/parser.go:576: leaking param content: p
query/parser/parser.go:489: leaking param content: p
query/parser/parser.go:491: &expression escapes to heap
query/parser/parser.go:490: moved to heap: expression
query/parser/parser.go:491: &expression escapes to heap
query/parser/parser.go:489: leaking param content: p
query/parser/parser.go:493: &list escapes to heap
query/parser/parser.go:492: moved to heap: list
query/parser/parser.go:493: &list escapes to heap
query/parser/parser.go:494: append(list, expression) escapes to heap
query/parser/parser.go:489: leaking param content: p
query/parser/parser.go:489: leaking param content: p
query/parser/parser.go:311: leaking param content: p
query/parser/parser.go:314: &right escapes to heap
query/parser/parser.go:312: moved to heap: right
query/parser/parser.go:314: &right escapes to heap
query/parser/parser.go:311: leaking param content: p
query/parser/parser.go:316: &operatorNode escapes to heap
query/parser/parser.go:315: moved to heap: operatorNode
query/parser/parser.go:316: &operatorNode escapes to heap
query/parser/parser.go:311: leaking param content: p
query/parser/parser.go:318: &left escapes to heap
query/parser/parser.go:317: moved to heap: left
query/parser/parser.go:318: &left escapes to heap
query/parser/parser.go:321: &expression.FunctionExpression literal escapes to heap
query/parser/parser.go:321: &expression.FunctionExpression literal escapes to heap
query/parser/parser.go:321: []function.Expression literal escapes to heap
query/parser/parser.go:311: leaking param content: p
query/parser/parser.go:311: leaking param content: p
query/parser/parser.go:432: leaking param content: p
query/parser/parser.go:434: &groupBy escapes to heap
query/parser/parser.go:433: moved to heap: groupBy
query/parser/parser.go:434: &groupBy escapes to heap
query/parser/parser.go:432: leaking param content: p
query/parser/parser.go:436: &expressionList escapes to heap
query/parser/parser.go:435: moved to heap: expressionList
query/parser/parser.go:436: &expressionList escapes to heap
query/parser/parser.go:432: leaking param content: p
query/parser/parser.go:438: &literal escapes to heap
query/parser/parser.go:437: moved to heap: literal
query/parser/parser.go:438: &literal escapes to heap
query/parser/parser.go:432: leaking param content: p
query/parser/parser.go:440: &expressionNode escapes to heap
query/parser/parser.go:439: moved to heap: expressionNode
query/parser/parser.go:440: &expressionNode escapes to heap
query/parser/parser.go:445: &expression.FunctionExpression literal escapes to heap
query/parser/parser.go:445: &expression.FunctionExpression literal escapes to heap
query/parser/parser.go:443: []function.Expression literal escapes to heap
query/parser/parser.go:432: leaking param content: p
query/parser/parser.go:432: leaking param content: p
query/parser/parser.go:588: leaking param: value
query/parser/parser.go:590: expression.Duration literal escapes to heap
query/parser/parser.go:588: leaking param content: p
query/parser/parser.go:588: leaking param content: p
query/parser/parser.go:594: value escapes to heap
query/parser/parser.go:594: err.Error() escapes to heap
query/parser/parser.go:588: leaking param content: p
query/parser/parser.go:588: leaking param content: p
query/parser/parser.go:594: (*Parser).addDurationNode ... argument does not escape
query/parser/parser.go:599: leaking param: value
query/parser/parser.go:601: expression.Scalar literal escapes to heap
query/parser/parser.go:599: leaking param content: p
query/parser/parser.go:599: leaking param content: p
query/parser/parser.go:605: value escapes to heap
query/parser/parser.go:599: leaking param content: p
query/parser/parser.go:599: leaking param content: p
query/parser/parser.go:605: (*Parser).addNumberNode ... argument does not escape
query/parser/parser.go:465: leaking param content: p
query/parser/parser.go:467: &content escapes to heap
query/parser/parser.go:466: moved to heap: content
query/parser/parser.go:467: &content escapes to heap
query/parser/parser.go:470: &expression.AnnotationExpression literal escapes to heap
query/parser/parser.go:470: &expression.AnnotationExpression literal escapes to heap
query/parser/parser.go:465: leaking param: annotation
query/parser/parser.go:465: leaking param content: p
query/parser/parser.go:465: leaking param content: p
query/parser/parser.go:449: leaking param content: p
query/parser/parser.go:451: &groupBy escapes to heap
query/parser/parser.go:450: moved to heap: groupBy
query/parser/parser.go:451: &groupBy escapes to heap
query/parser/parser.go:449: leaking param content: p
query/parser/parser.go:453: &expressionList escapes to heap
query/parser/parser.go:452: moved to heap: expressionList
query/parser/parser.go:453: &expressionList escapes to heap
query/parser/parser.go:449: leaking param content: p
query/parser/parser.go:455: &literal escapes to heap
query/parser/parser.go:454: moved to heap: literal
query/parser/parser.go:455: &literal escapes to heap
query/parser/parser.go:461: &expression.FunctionExpression literal escapes to heap
query/parser/parser.go:461: &expression.FunctionExpression literal escapes to heap
query/parser/parser.go:449: leaking param content: p
query/parser/parser.go:449: leaking param content: p
query/parser/parser.go:474: leaking param content: p
query/parser/parser.go:476: &predicateNode escapes to heap
query/parser/parser.go:475: moved to heap: predicateNode
query/parser/parser.go:476: &predicateNode escapes to heap
query/parser/parser.go:474: leaking param content: p
query/parser/parser.go:478: &literal escapes to heap
query/parser/parser.go:477: moved to heap: literal
query/parser/parser.go:478: &literal escapes to heap
query/parser/parser.go:481: &expression.MetricFetchExpression literal escapes to heap
query/parser/parser.go:481: &expression.MetricFetchExpression literal escapes to heap
query/parser/parser.go:474: leaking param content: p
query/parser/parser.go:474: leaking param content: p
query/parser/parser.go:216: leaking param: target
query/parser/parser.go:220: functionName(1) escapes to heap
query/parser/parser.go:225: functionName(1) escapes to heap
query/parser/parser.go:216: leaking param content: p
query/parser/parser.go:234: functionName(1) escapes to heap
query/parser/parser.go:235: expectedType.String() escapes to heap
query/parser/parser.go:236: actualType.String() escapes to heap
query/parser/parser.go:220: (*Parser).peekNodeInto ... argument does not escape
query/parser/parser.go:225: (*Parser).peekNodeInto ... argument does not escape
query/parser/parser.go:236: (*Parser).peekNodeInto ... argument does not escape
query/parser/parser.go:549: leaking param content: p
query/parser/parser.go:551: &listNode escapes to heap
query/parser/parser.go:550: moved to heap: listNode
query/parser/parser.go:551: &listNode escapes to heap
query/parser/parser.go:549: leaking param: literal
query/parser/parser.go:555: leaking param content: p
query/parser/parser.go:557: &listNode escapes to heap
query/parser/parser.go:556: moved to heap: listNode
query/parser/parser.go:557: &listNode escapes to heap
query/parser/parser.go:555: leaking param: literal
query/parser/parser.go:568: leaking param content: p
query/parser/parser.go:570: &rightPredicate escapes to heap
query/parser/parser.go:569: moved to heap: rightPredicate
query/parser/parser.go:570: &rightPredicate escapes to heap
query/parser/parser.go:568: leaking param content: p
query/parser/parser.go:572: &leftPredicate escapes to heap
query/parser/parser.go:571: moved to heap: leftPredicate
query/parser/parser.go:572: &leftPredicate escapes to heap
query/parser/parser.go:573: predicate.Any(leftPredicate, rightPredicate) escapes to heap
query/parser/parser.go:568: leaking param content: p
query/parser/parser.go:568: leaking param content: p
query/parser/parser.go:573: (*Parser).addOrPredicate ... argument does not escape
query/parser/parser.go:580: leaking param content: p
query/parser/parser.go:582: &rightPredicate escapes to heap
query/parser/parser.go:581: moved to heap: rightPredicate
query/parser/parser.go:582: &rightPredicate escapes to heap
query/parser/parser.go:580: leaking param content: p
query/parser/parser.go:584: &leftPredicate escapes to heap
query/parser/parser.go:583: moved to heap: leftPredicate
query/parser/parser.go:584: &leftPredicate escapes to heap
query/parser/parser.go:585: predicate.All(leftPredicate, rightPredicate) escapes to heap
query/parser/parser.go:580: leaking param content: p
query/parser/parser.go:580: leaking param content: p
query/parser/parser.go:585: (*Parser).addAndPredicate ... argument does not escape
query/parser/parser.go:562: leaking param content: p
query/parser/parser.go:564: &original escapes to heap
query/parser/parser.go:563: moved to heap: original
query/parser/parser.go:564: &original escapes to heap
query/parser/parser.go:565: predicate.NotPredicate literal escapes to heap
query/parser/parser.go:562: leaking param content: p
query/parser/parser.go:562: leaking param content: p
query/parser/parser.go:497: leaking param content: p
query/parser/parser.go:499: &literal escapes to heap
query/parser/parser.go:498: moved to heap: literal
query/parser/parser.go:499: &literal escapes to heap
query/parser/parser.go:497: leaking param content: p
query/parser/parser.go:502: &tagLiteral escapes to heap
query/parser/parser.go:500: moved to heap: tagLiteral
query/parser/parser.go:502: &tagLiteral escapes to heap
query/parser/parser.go:503: predicate.ListMatcher literal escapes to heap
query/parser/parser.go:505: []string literal escapes to heap
query/parser/parser.go:497: leaking param content: p
query/parser/parser.go:497: leaking param content: p
query/parser/parser.go:521: leaking param content: p
query/parser/parser.go:521: leaking param content: p
query/parser/parser.go:524: &tagLiteral escapes to heap
query/parser/parser.go:523: moved to heap: tagLiteral
query/parser/parser.go:524: &tagLiteral escapes to heap
query/parser/parser.go:525: predicate.RegexMatcher literal escapes to heap
query/parser/parser.go:521: leaking param content: p
query/parser/parser.go:521: leaking param content: p
query/parser/parser.go:509: leaking param content: p
query/parser/parser.go:512: &stringLiteral escapes to heap
query/parser/parser.go:510: moved to heap: stringLiteral
query/parser/parser.go:512: &stringLiteral escapes to heap
query/parser/parser.go:509: leaking param content: p
query/parser/parser.go:514: &tagLiteral escapes to heap
query/parser/parser.go:513: moved to heap: tagLiteral
query/parser/parser.go:514: &tagLiteral escapes to heap
query/parser/parser.go:515: predicate.ListMatcher literal escapes to heap
query/parser/parser.go:509: leaking param content: p
query/parser/parser.go:509: leaking param content: p
query/parser/parser.go:539: leaking param content: p
query/parser/parser.go:541: &listNode escapes to heap
query/parser/parser.go:540: moved to heap: listNode
query/parser/parser.go:541: &listNode escapes to heap
query/parser/parser.go:539: leaking param: literal
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:708: unescapeLiteral(buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:712: &evaluationContextNode literal escapes to heap
query/parser/language.peg.go:712: &evaluationContextNode literal escapes to heap
query/parser/language.peg.go:712: make(map[string]bool) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:714: &evaluationContextKey literal escapes to heap
query/parser/language.peg.go:714: &evaluationContextKey literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:716: &evaluationContextValue literal escapes to heap
query/parser/language.peg.go:716: &evaluationContextValue literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:724: []function.Expression literal escapes to heap
query/parser/language.peg.go:724: []function.Expression literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:730: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:730: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:732: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:732: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:736: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:736: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:738: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:738: &operatorLiteral literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:742: unescapeLiteral(buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:744: []function.Expression literal escapes to heap
query/parser/language.peg.go:744: []function.Expression literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:747: []function.Expression literal escapes to heap
query/parser/language.peg.go:747: []function.Expression literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:748: &groupByList literal escapes to heap
query/parser/language.peg.go:748: &groupByList literal escapes to heap
query/parser/language.peg.go:748: make([]string, 0) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:693: string(_buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:757: expression.String literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:761: &groupByList literal escapes to heap
query/parser/language.peg.go:761: &groupByList literal escapes to heap
query/parser/language.peg.go:761: make([]string, 0) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:764: unescapeLiteral(buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:772: unescapeLiteral(buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:693: string(_buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:693: string(_buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:819: unescapeLiteral(buffer[begin:end]) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:822: &stringLiteralList literal escapes to heap
query/parser/language.peg.go:822: &stringLiteralList literal escapes to heap
query/parser/language.peg.go:822: make([]string, 0) escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:828: &tagLiteral literal escapes to heap
query/parser/language.peg.go:828: &tagLiteral literal escapes to heap
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:686: leaking param content: p
query/parser/language.peg.go:693: string(_buffer[begin:end]) escapes to heap
query/parser/language.peg.go:864: leaking closure reference tree
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: make([]token32, math.MaxInt16) escapes to heap
query/parser/language.peg.go:864: leaking closure reference tree
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: make([]token32, math.MaxInt16) escapes to heap
query/parser/language.peg.go:851: leaking closure reference tree
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: make([]token32, math.MaxInt16) escapes to heap
query/parser/language.peg.go:835: leaking param content: p
query/parser/language.peg.go:836: ([]rune)(p.Buffer) escapes to heap
query/parser/language.peg.go:835: leaking param content: p
query/parser/language.peg.go:835: leaking param content: p
query/parser/language.peg.go:841: make([]token32, math.MaxInt16) escapes to heap
query/parser/language.peg.go:845: func literal escapes to heap
query/parser/language.peg.go:845: func literal escapes to heap
query/parser/language.peg.go:835: leaking param: p
query/parser/language.peg.go:841: moved to heap: tree
query/parser/language.peg.go:851: &tree escapes to heap
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: make([]token32, math.MaxInt16) escapes to heap
query/parser/language.peg.go:843: moved to heap: tokenIndex
query/parser/language.peg.go:853: &tokenIndex escapes to heap
query/parser/language.peg.go:842: moved to heap: max
query/parser/language.peg.go:856: &max escapes to heap
query/parser/language.peg.go:859: func literal escapes to heap
query/parser/language.peg.go:859: func literal escapes to heap
query/parser/language.peg.go:843: moved to heap: position
query/parser/language.peg.go:860: &position escapes to heap
query/parser/language.peg.go:860: &tokenIndex escapes to heap
query/parser/language.peg.go:843: moved to heap: depth
query/parser/language.peg.go:860: &depth escapes to heap
query/parser/language.peg.go:901: func literal escapes to heap
query/parser/language.peg.go:901: func literal escapes to heap
query/parser/language.peg.go:902: &position escapes to heap
query/parser/language.peg.go:902: &tokenIndex escapes to heap
query/parser/language.peg.go:902: &depth escapes to heap
query/parser/language.peg.go:843: moved to heap: _rules
query/parser/language.peg.go:911: &_rules escapes to heap
query/parser/language.peg.go:901: func literal escapes to heap
query/parser/language.peg.go:901: func literal escapes to heap
query/parser/language.peg.go:902: &position escapes to heap
query/parser/language.peg.go:902: &tokenIndex escapes to heap
query/parser/language.peg.go:902: &depth escapes to heap
query/parser/language.peg.go:911: &_rules escapes to heap
query/parser/language.peg.go:863: func literal escapes to heap
query/parser/language.peg.go:863: func literal escapes to heap
query/parser/language.peg.go:864: &tree escapes to heap
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: &tokens32 literal escapes to heap
query/parser/language.peg.go:841: make([]token32, math.MaxInt16) escapes to heap
query/parser/language.peg.go:864: &tokenIndex escapes to heap
query/parser/language.peg.go:867: &position escapes to heap
query/parser/language.peg.go:867: &depth escapes to heap
query/parser/language.peg.go:869: &max escapes to heap
query/parser/language.peg.go:874: func literal escapes to heap
query/parser/language.peg.go:874: func literal escapes to heap
query/parser/language.peg.go:875: &position escapes to heap
query/parser/language.peg.go:1779: func literal escapes to heap
query/parser/language.peg.go:1779: func literal escapes to heap
query/parser/language.peg.go:1781: &position escapes to heap
query/parser/language.peg.go:1782: &depth escapes to heap
query/parser/language.peg.go:1784: &tokenIndex escapes to heap
query/parser/language.peg.go:1788: &_rules escapes to heap
query/parser/language.peg.go:1892: func literal escapes to heap
query/parser/language.peg.go:1892: func literal escapes to heap
query/parser/language.peg.go:1893: &position escapes to heap
query/parser/language.peg.go:1893: &tokenIndex escapes to heap
query/parser/language.peg.go:1893: &depth escapes to heap
query/parser/language.peg.go:1900: &_rules escapes to heap
query/parser/language.peg.go:1934: func literal escapes to heap
query/parser/language.peg.go:1934: func literal escapes to heap
query/parser/language.peg.go:1935: &position escapes to heap
query/parser/language.peg.go:1935: &tokenIndex escapes to heap
query/parser/language.peg.go:1935: &depth escapes to heap
query/parser/language.peg.go:1942: &_rules escapes to heap
query/parser/language.peg.go:2017: func literal escapes to heap
query/parser/language.peg.go:2017: func literal escapes to heap
query/parser/language.peg.go:2018: &position escapes to heap
query/parser/language.peg.go:2018: &tokenIndex escapes to heap
query/parser/language.peg.go:2018: &depth escapes to heap
query/parser/language.peg.go:2022: &_rules escapes to heap
query/parser/language.peg.go:2091: func literal escapes to heap
query/parser/language.peg.go:2091: func literal escapes to heap
query/parser/language.peg.go:2093: &position escapes to heap
query/parser/language.peg.go:2094: &depth escapes to heap
query/parser/language.peg.go:2097: &tokenIndex escapes to heap
query/parser/language.peg.go:2101: &_rules escapes to heap
query/parser/language.peg.go:2186: func literal escapes to heap
query/parser/language.peg.go:2186: func literal escapes to heap
query/parser/language.peg.go:2187: &position escapes to heap
query/parser/language.peg.go:2187: &tokenIndex escapes to heap
query/parser/language.peg.go:2187: &depth escapes to heap
query/parser/language.peg.go:2199: &_rules escapes to heap
query/parser/language.peg.go:2410: func literal escapes to heap
query/parser/language.peg.go:2410: func literal escapes to heap
query/parser/language.peg.go:2412: &position escapes to heap
query/parser/language.peg.go:2413: &depth escapes to heap
query/parser/language.peg.go:2415: &tokenIndex escapes to heap
query/parser/language.peg.go:2419: &_rules escapes to heap
query/parser/language.peg.go:2473: func literal escapes to heap
query/parser/language.peg.go:2473: func literal escapes to heap
query/parser/language.peg.go:2475: &position escapes to heap
query/parser/language.peg.go:2476: &depth escapes to heap
query/parser/language.peg.go:2481: &tokenIndex escapes to heap
query/parser/language.peg.go:2487: &_rules escapes to heap
query/parser/language.peg.go:2887: func literal escapes to heap
query/parser/language.peg.go:2887: func literal escapes to heap
query/parser/language.peg.go:2888: &position escapes to heap
query/parser/language.peg.go:2888: &tokenIndex escapes to heap
query/parser/language.peg.go:2888: &depth escapes to heap
query/parser/language.peg.go:2894: &_rules escapes to heap
query/parser/language.peg.go:2962: func literal escapes to heap
query/parser/language.peg.go:2962: func literal escapes to heap
query/parser/language.peg.go:2963: &position escapes to heap
query/parser/language.peg.go:2963: &tokenIndex escapes to heap
query/parser/language.peg.go:2963: &depth escapes to heap
query/parser/language.peg.go:2969: &_rules escapes to heap
query/parser/language.peg.go:3052: func literal escapes to heap
query/parser/language.peg.go:3052: func literal escapes to heap
query/parser/language.peg.go:3053: &position escapes to heap
query/parser/language.peg.go:3053: &tokenIndex escapes to heap
query/parser/language.peg.go:3053: &depth escapes to heap
query/parser/language.peg.go:3059: &_rules escapes to heap
query/parser/language.peg.go:3383: func literal escapes to heap
query/parser/language.peg.go:3383: func literal escapes to heap
query/parser/language.peg.go:3384: &position escapes to heap
query/parser/language.peg.go:3384: &tokenIndex escapes to heap
query/parser/language.peg.go:3384: &depth escapes to heap
query/parser/language.peg.go:3388: &_rules escapes to heap
query/parser/language.peg.go:3408: func literal escapes to heap
query/parser/language.peg.go:3408: func literal escapes to heap
query/parser/language.peg.go:3409: &position escapes to heap
query/parser/language.peg.go:3409: &tokenIndex escapes to heap
query/parser/language.peg.go:3409: &depth escapes to heap
query/parser/language.peg.go:3413: &_rules escapes to heap
query/parser/language.peg.go:3431: func literal escapes to heap
query/parser/language.peg.go:3431: func literal escapes to heap
query/parser/language.peg.go:3432: &position escapes to heap
query/parser/language.peg.go:3432: &tokenIndex escapes to heap
query/parser/language.peg.go:3432: &depth escapes to heap
query/parser/language.peg.go:3436: &_rules escapes to heap
query/parser/language.peg.go:3466: func literal escapes to heap
query/parser/language.peg.go:3466: func literal escapes to heap
query/parser/language.peg.go:3467: &position escapes to heap
query/parser/language.peg.go:3467: &tokenIndex escapes to heap
query/parser/language.peg.go:3467: &depth escapes to heap
query/parser/language.peg.go:3471: &_rules escapes to heap
query/parser/language.peg.go:3487: func literal escapes to heap
query/parser/language.peg.go:3487: func literal escapes to heap
query/parser/language.peg.go:3488: &position escapes to heap
query/parser/language.peg.go:3488: &tokenIndex escapes to heap
query/parser/language.peg.go:3488: &depth escapes to heap
query/parser/language.peg.go:3501: &_rules escapes to heap
query/parser/language.peg.go:4524: func literal escapes to heap
query/parser/language.peg.go:4524: func literal escapes to heap
query/parser/language.peg.go:4525: &position escapes to heap
query/parser/language.peg.go:4525: &tokenIndex escapes to heap
query/parser/language.peg.go:4525: &depth escapes to heap
query/parser/language.peg.go:4529: &_rules escapes to heap
query/parser/language.peg.go:4554: func literal escapes to heap
query/parser/language.peg.go:4554: func literal escapes to heap
query/parser/language.peg.go:4555: &position escapes to heap
query/parser/language.peg.go:4555: &tokenIndex escapes to heap
query/parser/language.peg.go:4555: &depth escapes to heap
query/parser/language.peg.go:4591: func literal escapes to heap
query/parser/language.peg.go:4591: func literal escapes to heap
query/parser/language.peg.go:4592: &position escapes to heap
query/parser/language.peg.go:4592: &tokenIndex escapes to heap
query/parser/language.peg.go:4592: &depth escapes to heap
query/parser/language.peg.go:4598: &_rules escapes to heap
query/parser/language.peg.go:4619: func literal escapes to heap
query/parser/language.peg.go:4619: func literal escapes to heap
query/parser/language.peg.go:4620: &position escapes to heap
query/parser/language.peg.go:4620: &tokenIndex escapes to heap
query/parser/language.peg.go:4620: &depth escapes to heap
query/parser/language.peg.go:4723: &_rules escapes to heap
query/parser/language.peg.go:5059: func literal escapes to heap
query/parser/language.peg.go:5059: func literal escapes to heap
query/parser/language.peg.go:5060: &position escapes to heap
query/parser/language.peg.go:5060: &tokenIndex escapes to heap
query/parser/language.peg.go:5060: &depth escapes to heap
query/parser/language.peg.go:5077: func literal escapes to heap
query/parser/language.peg.go:5077: func literal escapes to heap
query/parser/language.peg.go:5078: &position escapes to heap
query/parser/language.peg.go:5078: &tokenIndex escapes to heap
query/parser/language.peg.go:5078: &depth escapes to heap
query/parser/language.peg.go:5095: func literal escapes to heap
query/parser/language.peg.go:5095: func literal escapes to heap
query/parser/language.peg.go:5096: &position escapes to heap
query/parser/language.peg.go:5096: &tokenIndex escapes to heap
query/parser/language.peg.go:5096: &depth escapes to heap
query/parser/language.peg.go:5102: &_rules escapes to heap
query/parser/language.peg.go:5178: func literal escapes to heap
query/parser/language.peg.go:5178: func literal escapes to heap
query/parser/language.peg.go:5179: &position escapes to heap
query/parser/language.peg.go:5179: &tokenIndex escapes to heap
query/parser/language.peg.go:5179: &depth escapes to heap
query/parser/language.peg.go:5192: &_rules escapes to heap
query/parser/language.peg.go:5235: func literal escapes to heap
query/parser/language.peg.go:5235: func literal escapes to heap
query/parser/language.peg.go:5236: &position escapes to heap
query/parser/language.peg.go:5236: &tokenIndex escapes to heap
query/parser/language.peg.go:5236: &depth escapes to heap
query/parser/language.peg.go:5264: func literal escapes to heap
query/parser/language.peg.go:5264: func literal escapes to heap
query/parser/language.peg.go:5265: &position escapes to heap
query/parser/language.peg.go:5265: &tokenIndex escapes to heap
query/parser/language.peg.go:5265: &depth escapes to heap
query/parser/language.peg.go:5434: func literal escapes to heap
query/parser/language.peg.go:5434: func literal escapes to heap
query/parser/language.peg.go:5435: &position escapes to heap
query/parser/language.peg.go:5435: &tokenIndex escapes to heap
query/parser/language.peg.go:5435: &depth escapes to heap
query/parser/language.peg.go:5452: func literal escapes to heap
query/parser/language.peg.go:5452: func literal escapes to heap
query/parser/language.peg.go:5453: &position escapes to heap
query/parser/language.peg.go:5453: &tokenIndex escapes to heap
query/parser/language.peg.go:5453: &depth escapes to heap
query/parser/language.peg.go:5470: func literal escapes to heap
query/parser/language.peg.go:5470: func literal escapes to heap
query/parser/language.peg.go:5471: &position escapes to heap
query/parser/language.peg.go:5471: &tokenIndex escapes to heap
query/parser/language.peg.go:5471: &depth escapes to heap
query/parser/language.peg.go:5488: func literal escapes to heap
query/parser/language.peg.go:5488: func literal escapes to heap
query/parser/language.peg.go:5490: &position escapes to heap
query/parser/language.peg.go:5491: &depth escapes to heap
query/parser/language.peg.go:5494: &tokenIndex escapes to heap
query/parser/language.peg.go:5629: func literal escapes to heap
query/parser/language.peg.go:5629: func literal escapes to heap
query/parser/language.peg.go:5630: &position escapes to heap
query/parser/language.peg.go:5630: &tokenIndex escapes to heap
query/parser/language.peg.go:5630: &depth escapes to heap
query/parser/language.peg.go:5636: &_rules escapes to heap
query/parser/language.peg.go:856: &parseError literal escapes to heap
query/parser/language.peg.go:856: &parseError literal escapes to heap
query/parser/language.peg.go:845: (*Parser).Init.func1 rule does not escape
query/parser/parser.go:700: leaking param: parser to result ~r3 level=1
query/parser/parser.go:700: leaking param: parser to result ~r3 level=1
query/parser/parser.go:724: strings.Repeat(" ", symbolBegin) + strings.Repeat("^", length) escapes to heap
query/parser/parser.go:732: strings.Repeat(" ", symbolBegin) + strings.Repeat("^", length) escapes to heap
query/parser/parser.go:700: makePrettyLine translations does not escape
query/parser/parser.go:666: leaking param content: parser
query/parser/parser.go:672: make([]int, 2 * len(tokens)) escapes to heap
query/parser/parser.go:672: make([]int, 2 * len(tokens)) escapes to heap
query/parser/parser.go:689: rul3s[token.pegRule] escapes to heap
query/parser/parser.go:690: translations[begin].line escapes to heap
query/parser/parser.go:690: translations[begin].symbol escapes to heap
query/parser/parser.go:691: translations[end].line escapes to heap
query/parser/parser.go:691: translations[end].symbol escapes to heap
query/parser/parser.go:691: line escapes to heap
query/parser/parser.go:666: leaking param content: parser
query/parser/parser.go:691: underline escapes to heap
query/parser/parser.go:678: customParseError make(map[pair]bool) does not escape
query/parser/parser.go:694: customParseError ... argument does not escape
query/parser/parser.go:147: message escapes to heap
query/parser/parser.go:139: moved to heap: p
query/parser/parser.go:140: p escapes to heap
query/parser/parser.go:138: leaking param: query
query/parser/parser.go:157: SyntaxErrors([]SyntaxError literal) escapes to heap
query/parser/parser.go:154: []SyntaxError literal escapes to heap
query/parser/parser.go:160: AssertionError literal escapes to heap
query/parser/parser.go:165: AssertionError literal escapes to heap
query/parser/parser.go:169: SyntaxErrors(p.errors) escapes to heap
query/parser/parser.go:173: AssertionError literal escapes to heap
query/parser/parser.go:141: Parse func literal does not escape
query/parser/parser.go:156: Parse &p does not escape
query/parser/parser.go:163: Parse p does not escape
query/parser/parser.go:183: leaking param: err
query/parser/parser.go:183: leaking param content: p
query/parser/parser.go:183: leaking param content: p
query/parser/parser.go:242: leaking param: node
query/parser/parser.go:242: leaking param content: p
query/parser/parser.go:242: leaking param content: p
query/parser/parser.go:308: &operatorLiteral literal escapes to heap
query/parser/parser.go:308: &operatorLiteral literal escapes to heap
query/parser/parser.go:307: leaking param: operator
query/parser/parser.go:307: leaking param content: p
query/parser/parser.go:307: leaking param content: p
query/parser/parser.go:326: &evaluationContextKey literal escapes to heap
query/parser/parser.go:326: &evaluationContextKey literal escapes to heap
query/parser/parser.go:325: leaking param: key
query/parser/parser.go:325: leaking param content: p
query/parser/parser.go:325: leaking param content: p
query/parser/parser.go:330: &evaluationContextValue literal escapes to heap
query/parser/parser.go:330: &evaluationContextValue literal escapes to heap
query/parser/parser.go:329: leaking param: value
query/parser/parser.go:329: leaking param content: p
query/parser/parser.go:329: leaking param content: p
query/parser/parser.go:337: &evaluationContextNode literal escapes to heap
query/parser/parser.go:337: &evaluationContextNode literal escapes to heap
query/parser/parser.go:337: make(map[string]bool) escapes to heap
query/parser/parser.go:333: leaking param content: p
query/parser/parser.go:333: leaking param content: p
query/parser/parser.go:486: []function.Expression literal escapes to heap
query/parser/parser.go:486: []function.Expression literal escapes to heap
query/parser/parser.go:485: leaking param content: p
query/parser/parser.go:485: leaking param content: p
query/parser/parser.go:532: &tagLiteral literal escapes to heap
query/parser/parser.go:532: &tagLiteral literal escapes to heap
query/parser/parser.go:531: leaking param: tag
query/parser/parser.go:531: leaking param content: p
query/parser/parser.go:531: leaking param content: p
query/parser/parser.go:536: &stringLiteralList literal escapes to heap
query/parser/parser.go:536: &stringLiteralList literal escapes to heap
query/parser/parser.go:536: make([]string, 0) escapes to heap
query/parser/parser.go:535: leaking param content: p
query/parser/parser.go:535: leaking param content: p
query/parser/parser.go:546: &groupByList literal escapes to heap
query/parser/parser.go:546: &groupByList literal escapes to heap
query/parser/parser.go:546: make([]string, 0) escapes to heap
query/parser/parser.go:545: leaking param content: p
query/parser/parser.go:545: leaking param content: p
query/parser/parser.go:611: expression.String literal escapes to heap
query/parser/parser.go:610: leaking param: value
query/parser/parser.go:610: leaking param content: p
query/parser/parser.go:610: leaking param content: p
<autogenerated>:1: inlining call to AssertionError.Error
<autogenerated>:1: leaking param: .this to result ~r0 level=1
<autogenerated>:2: inlining call to SyntaxError.Token
<autogenerated>:2: leaking param: .this to result ~r0 level=1
<autogenerated>:3: inlining call to SyntaxError.Error
<autogenerated>:3: leaking param: .this to result ~r0 level=1
<autogenerated>:4: leaking param content: .this
<autogenerated>:5: (*node32).isZero .this does not escape
<autogenerated>:5: (*node32).isZero &.this.token32 does not escape
<autogenerated>:6: (*node32).isParentOf .this does not escape
<autogenerated>:6: (*node32).isParentOf &.this.token32 does not escape
<autogenerated>:7: (*node32).getToken32 .this does not escape
<autogenerated>:7: (*node32).getToken32 &.this.token32 does not escape
<autogenerated>:8: (*node32).String .this does not escape
<autogenerated>:8: (*node32).String &.this.token32 does not escape
<autogenerated>:9: leaking param: .this
<autogenerated>:10: leaking param: .this
<autogenerated>:11: leaking param: .this
<autogenerated>:12: leaking param: .this
<autogenerated>:13: leaking param: .this
<autogenerated>:14: leaking param: .this
<autogenerated>:15: leaking param: buffer
<autogenerated>:15: leaking param: .this
<autogenerated>:16: leaking param: .this
<autogenerated>:17: leaking param: .this
<autogenerated>:18: (*state32).isZero .this does not escape
<autogenerated>:18: (*state32).isZero &.this.token32 does not escape
<autogenerated>:19: (*state32).isParentOf .this does not escape
<autogenerated>:19: (*state32).isParentOf &.this.token32 does not escape
<autogenerated>:20: (*state32).getToken32 .this does not escape
<autogenerated>:20: (*state32).getToken32 &.this.token32 does not escape
<autogenerated>:21: (*state32).String .this does not escape
<autogenerated>:21: (*state32).String &.this.token32 does not escape
<autogenerated>:22: leaking param content: .this
<autogenerated>:23: leaking param: .this
<autogenerated>:24: leaking param content: .this
<autogenerated>:25: leaking param: .this
<autogenerated>:26: leaking param content: .this
<autogenerated>:27: leaking param: .this
<autogenerated>:28: leaking param content: .this
<autogenerated>:29: leaking param: .this
<autogenerated>:30: leaking param content: .this
<autogenerated>:31: leaking param: .this
<autogenerated>:32: leaking param content: .this
<autogenerated>:33: leaking param: .this
<autogenerated>:34: leaking param content: .this
<autogenerated>:35: leaking param: .this
<autogenerated>:36: leaking param content: .this
<autogenerated>:37: leaking param: .this
<autogenerated>:38: leaking param content: .this
<autogenerated>:39: leaking param: .this
# github.com/square/metrics/main/console
main/console/console.go:69: inlining call to blueflood.NewBlueflood
main/console/console.go:81: inlining call to registry.Default
main/console/console.go:85: inlining call to bufio.NewReader
main/console/console.go:85: inlining call to bufio.NewReaderSize
main/console/console.go:85: inlining call to bufio.reset
main/console/console.go:43: os.Stdout escapes to heap
main/console/console.go:38: make(chan os.Signal, 1) escapes to heap
main/console/console.go:39: syscall.SIGUSR2 escapes to heap
main/console/console.go:41: func literal escapes to heap
main/console/console.go:41: func literal escapes to heap
main/console/console.go:38: make(chan os.Signal, 1) escapes to heap
main/console/console.go:53: &config escapes to heap
main/console/console.go:51: moved to heap: config
main/console/console.go:53: &config escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:57: err.Error() escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:63: err.Error() escapes to heap
main/console/console.go:85: make([]byte, bufio.size·3) escapes to heap
main/console/console.go:85: make([]byte, bufio.size·3) escapes to heap
main/console/console.go:85: os.Stdin escapes to heap
main/console/console.go:91: err.Error() escapes to heap
main/console/console.go:96: err.Error() escapes to heap
main/console/console.go:77: cassandraAPI escapes to heap
main/console/console.go:69: blueflood.b·3 escapes to heap
main/console/console.go:69: &blueflood.Blueflood literal escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:67: &util.RuleBasedGraphiteConverter literal escapes to heap
main/console/console.go:69: http.DefaultClient escapes to heap
main/console/console.go:81: registry.Default() escapes to heap
main/console/console.go:101: err.Error() escapes to heap
main/console/console.go:106: err.Error() escapes to heap
main/console/console.go:109: string(encoded) escapes to heap
main/console/console.go:109: string(encoded) escapes to heap
main/console/console.go:39: main ... argument does not escape
main/console/console.go:57: main ... argument does not escape
main/console/console.go:63: main ... argument does not escape
main/console/console.go:85: main new(bufio.Reader) does not escape
main/console/console.go:91: main ... argument does not escape
main/console/console.go:96: main ... argument does not escape
main/console/console.go:101: main ... argument does not escape
main/console/console.go:106: main ... argument does not escape
main/console/console.go:109: main ... argument does not escape
# github.com/square/metrics/metric_metadata/cached
metric_metadata/cached/cached.go:95: can inline NewMetricMetadataAPI
metric_metadata/cached/cached.go:184: inlining call to errors.New
metric_metadata/cached/cached.go:207: inlining call to time.Time.Add
metric_metadata/cached/cached.go:208: inlining call to time.Time.Before
metric_metadata/cached/cached.go:211: inlining call to time.Time.Add
metric_metadata/cached/cached.go:160: can inline (*metricMetadataAPI).GetBackgroundAction
metric_metadata/cached/cached.go:252: inlining call to time.Time.IsZero
metric_metadata/cached/cached.go:252: inlining call to time.Time.Before
metric_metadata/cached/cached.go:283: inlining call to time.Time.Before
metric_metadata/cached/cached.go:293: can inline (*metricMetadataAPI).CurrentLiveRequests
metric_metadata/cached/cached.go:298: can inline (*metricMetadataAPI).MaximumLiveRequests
metric_metadata/cached/cached.go:64: leaking param: metric
metric_metadata/cached/cached.go:64: leaking param: context
metric_metadata/cached/cached.go:64: leaking param content: m
metric_metadata/cached/cached.go:68: leaking param: metrics
metric_metadata/cached/cached.go:68: leaking param: context
metric_metadata/cached/cached.go:68: leaking param content: m
metric_metadata/cached/cached.go:109: &metricUpdateAPI literal escapes to heap
metric_metadata/cached/cached.go:109: &metricUpdateAPI literal escapes to heap
metric_metadata/cached/cached.go:95: leaking param: apiInstance to result ~r2 level=-1
metric_metadata/cached/cached.go:102: util.RealClock literal escapes to heap
metric_metadata/cached/cached.go:103: map[api.MetricKey]*CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:96: make(chan func(metadata.Context) error, config.RequestLimit) escapes to heap
metric_metadata/cached/cached.go:111: &result escapes to heap
metric_metadata/cached/cached.go:107: moved to heap: result
metric_metadata/cached/cached.go:111: &result escapes to heap
metric_metadata/cached/cached.go:102: util.RealClock literal escapes to heap
metric_metadata/cached/cached.go:103: map[api.MetricKey]*CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:96: make(chan func(metadata.Context) error, config.RequestLimit) escapes to heap
metric_metadata/cached/cached.go:184: &errors.errorString literal escapes to heap
metric_metadata/cached/cached.go:184: &errors.errorString literal escapes to heap
metric_metadata/cached/cached.go:187: item.wg escapes to heap
metric_metadata/cached/cached.go:182: leaking param: item
metric_metadata/cached/cached.go:190: item.Mutex escapes to heap
metric_metadata/cached/cached.go:182: leaking param content: c
metric_metadata/cached/cached.go:182: leaking param: metricKey
metric_metadata/cached/cached.go:182: leaking param: context
metric_metadata/cached/cached.go:182: leaking param content: c
metric_metadata/cached/cached.go:195: item.Mutex escapes to heap
metric_metadata/cached/cached.go:199: item.wg escapes to heap
metric_metadata/cached/cached.go:214: ... argument escapes to heap
metric_metadata/cached/cached.go:213: metricKey escapes to heap
metric_metadata/cached/cached.go:214: newExpiry.String() escapes to heap
metric_metadata/cached/cached.go:214: item.Expiry.String() escapes to heap
metric_metadata/cached/cached.go:217: item.wg escapes to heap
metric_metadata/cached/cached.go:144: ... argument escapes to heap
metric_metadata/cached/cached.go:144: metricKey escapes to heap
metric_metadata/cached/cached.go:144: leaking closure reference metricKey
metric_metadata/cached/cached.go:116: leaking param: metricKey
metric_metadata/cached/cached.go:145: ... argument escapes to heap
metric_metadata/cached/cached.go:145: metricKey escapes to heap
metric_metadata/cached/cached.go:144: leaking closure reference metricKey
metric_metadata/cached/cached.go:147: item.Mutex escapes to heap
metric_metadata/cached/cached.go:147: leaking closure reference item
metric_metadata/cached/cached.go:116: leaking param: item
metric_metadata/cached/cached.go:148: item.Mutex escapes to heap
metric_metadata/cached/cached.go:147: leaking closure reference item
metric_metadata/cached/cached.go:143: leaking param: context
metric_metadata/cached/cached.go:116: leaking param content: c
metric_metadata/cached/cached.go:147: leaking closure reference item
metric_metadata/cached/cached.go:144: leaking closure reference metricKey
metric_metadata/cached/cached.go:118: ... argument escapes to heap
metric_metadata/cached/cached.go:118: metricKey escapes to heap
metric_metadata/cached/cached.go:122: c.queueMutex escapes to heap
metric_metadata/cached/cached.go:116: leaking param: c
metric_metadata/cached/cached.go:123: c.queueMutex escapes to heap
metric_metadata/cached/cached.go:126: ... argument escapes to heap
metric_metadata/cached/cached.go:126: metricKey escapes to heap
metric_metadata/cached/cached.go:131: ... argument escapes to heap
metric_metadata/cached/cached.go:131: metricKey escapes to heap
metric_metadata/cached/cached.go:136: ... argument escapes to heap
metric_metadata/cached/cached.go:136: metricKey escapes to heap
metric_metadata/cached/cached.go:140: ... argument escapes to heap
metric_metadata/cached/cached.go:140: metricKey escapes to heap
metric_metadata/cached/cached.go:143: func literal escapes to heap
metric_metadata/cached/cached.go:143: func literal escapes to heap
metric_metadata/cached/cached.go:160: (*metricMetadataAPI).GetBackgroundAction c does not escape
metric_metadata/cached/cached.go:165: leaking param: context
metric_metadata/cached/cached.go:165: leaking param content: c
metric_metadata/cached/cached.go:170: leaking param: tagKey
metric_metadata/cached/cached.go:170: leaking param: tagValue
metric_metadata/cached/cached.go:170: leaking param: context
metric_metadata/cached/cached.go:170: leaking param content: c
metric_metadata/cached/cached.go:175: leaking param content: c
metric_metadata/cached/cached.go:228: leaking param: context
metric_metadata/cached/cached.go:232: c.getAllTagsCacheMutex escapes to heap
metric_metadata/cached/cached.go:228: leaking param: c
metric_metadata/cached/cached.go:234: c.getAllTagsCacheMutex escapes to heap
metric_metadata/cached/cached.go:237: c.getAllTagsCacheMutex escapes to heap
metric_metadata/cached/cached.go:228: leaking param: metricKey
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:247: c.getAllTagsCacheMutex escapes to heap
metric_metadata/cached/cached.go:250: item.Mutex escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:254: item.Mutex escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:255: item.wg escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:258: item.Mutex escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:259: item.Mutex escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:265: item.Mutex escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:280: item.Mutex escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:243: &CachedTagSetList literal escapes to heap
metric_metadata/cached/cached.go:293: (*metricMetadataAPI).CurrentLiveRequests c does not escape
metric_metadata/cached/cached.go:298: (*metricMetadataAPI).MaximumLiveRequests c does not escape
<autogenerated>:1: (*CachedTagSetList).Lock .this does not escape
<autogenerated>:1: (*CachedTagSetList).Lock &.this.Mutex does not escape
<autogenerated>:2: (*CachedTagSetList).Unlock .this does not escape
<autogenerated>:2: (*CachedTagSetList).Unlock &.this.Mutex does not escape
<autogenerated>:3: (*metricUpdateAPI).AddMetric .this does not escape
<autogenerated>:3: (*metricUpdateAPI).AddMetric metric does not escape
<autogenerated>:3: (*metricUpdateAPI).AddMetric context does not escape
<autogenerated>:3: (*metricUpdateAPI).AddMetric &.this.metricMetadataAPI does not escape
<autogenerated>:4: (*metricUpdateAPI).AddMetrics .this does not escape
<autogenerated>:4: (*metricUpdateAPI).AddMetrics metrics does not escape
<autogenerated>:4: (*metricUpdateAPI).AddMetrics context does not escape
<autogenerated>:4: (*metricUpdateAPI).AddMetrics &.this.metricMetadataAPI does not escape
<autogenerated>:5: (*metricUpdateAPI).addBackgroundGetAllTagsRequest .this does not escape
<autogenerated>:5: (*metricUpdateAPI).addBackgroundGetAllTagsRequest item does not escape
<autogenerated>:5: (*metricUpdateAPI).addBackgroundGetAllTagsRequest metricKey does not escape
<autogenerated>:5: (*metricUpdateAPI).addBackgroundGetAllTagsRequest &.this.metricMetadataAPI does not escape
<autogenerated>:6: (*metricUpdateAPI).GetBackgroundAction .this does not escape
<autogenerated>:6: (*metricUpdateAPI).GetBackgroundAction &.this.metricMetadataAPI does not escape
<autogenerated>:7: (*metricUpdateAPI).GetAllMetrics .this does not escape
<autogenerated>:7: (*metricUpdateAPI).GetAllMetrics context does not escape
<autogenerated>:7: (*metricUpdateAPI).GetAllMetrics &.this.metricMetadataAPI does not escape
<autogenerated>:8: (*metricUpdateAPI).GetMetricsForTag .this does not escape
<autogenerated>:8: (*metricUpdateAPI).GetMetricsForTag tagKey does not escape
<autogenerated>:8: (*metricUpdateAPI).GetMetricsForTag tagValue does not escape
<autogenerated>:8: (*metricUpdateAPI).GetMetricsForTag context does not escape
<autogenerated>:8: (*metricUpdateAPI).GetMetricsForTag &.this.metricMetadataAPI does not escape
<autogenerated>:9: (*metricUpdateAPI).CheckHealthy .this does not escape
<autogenerated>:9: (*metricUpdateAPI).CheckHealthy &.this.metricMetadataAPI does not escape
<autogenerated>:10: (*metricUpdateAPI).fetchAndUpdateCachedTagSet .this does not escape
<autogenerated>:10: (*metricUpdateAPI).fetchAndUpdateCachedTagSet item does not escape
<autogenerated>:10: (*metricUpdateAPI).fetchAndUpdateCachedTagSet metricKey does not escape
<autogenerated>:10: (*metricUpdateAPI).fetchAndUpdateCachedTagSet context does not escape
<autogenerated>:10: (*metricUpdateAPI).fetchAndUpdateCachedTagSet &.this.metricMetadataAPI does not escape
<autogenerated>:11: (*metricUpdateAPI).GetAllTags .this does not escape
<autogenerated>:11: (*metricUpdateAPI).GetAllTags metricKey does not escape
<autogenerated>:11: (*metricUpdateAPI).GetAllTags context does not escape
<autogenerated>:11: (*metricUpdateAPI).GetAllTags &.this.metricMetadataAPI does not escape
<autogenerated>:12: (*metricUpdateAPI).CurrentLiveRequests .this does not escape
<autogenerated>:12: (*metricUpdateAPI).CurrentLiveRequests &.this.metricMetadataAPI does not escape
<autogenerated>:13: (*metricUpdateAPI).MaximumLiveRequests .this does not escape
<autogenerated>:13: (*metricUpdateAPI).MaximumLiveRequests &.this.metricMetadataAPI does not escape
<autogenerated>:14: leaking param: .this
<autogenerated>:15: leaking param: .this
<autogenerated>:16: leaking param: metadata.context
<autogenerated>:16: leaking param: .this
<autogenerated>:17: leaking param: metadata.metricKey
<autogenerated>:17: leaking param: metadata.context
<autogenerated>:17: leaking param: .this
<autogenerated>:18: leaking param: .this
<autogenerated>:19: leaking param: metadata.tagKey
<autogenerated>:19: leaking param: metadata.tagValue
<autogenerated>:19: leaking param: metadata.context
<autogenerated>:19: leaking param: .this
<autogenerated>:20: leaking param: .this
# github.com/square/metrics/web
web/common.go:72: inlining call to url.Values.Get
web/common.go:78: inlining call to url.Values.Get
web/common.go:86: inlining call to url.Values.Get
web/ingest.go:44: inlining call to json.NewDecoder
web/query.go:202: inlining call to command.NewProfilingCommandWithProfiler
web/query.go:275: can inline queryHandler.ServeHTTP.func1
web/query.go:231: inlining call to inspect.New
web/query.go:237: inlining call to json.NewDecoder
web/query.go:270: inlining call to url.Values.Get
web/query.go:281: inlining call to url.Values.Get
web/server.go:27: inlining call to http.NewServeMux
web/server.go:53: inlining call to http.FileServer
web/token.go:58: inlining call to url.Values.Get
web/common.go:29: leaking param: err
web/common.go:30: composite literal escapes to heap
web/common.go:37: ... argument escapes to heap
web/common.go:37: err escapes to heap
web/common.go:37: err2 escapes to heap
web/common.go:38: ([]byte)("{\"success\":false, \"error\": \"internal server error while marshalling error message\"}") escapes to heap
web/common.go:49: leaking param: h
web/common.go:49: leaking param: writer
web/common.go:49: singleStaticHandler.ServeHTTP request does not escape
web/common.go:50: singleStaticHandler.ServeHTTP ... argument does not escape
web/common.go:53: leaking param: target
web/common.go:74: keyValue escapes to heap
web/common.go:82: store escapes to heap
web/common.go:86: ([]byte)(string(~r0)) escapes to heap
web/common.go:89: field escapes to heap
web/common.go:53: parseStruct form does not escape
web/common.go:89: parseStruct ... argument does not escape
web/ingest.go:36: leaking param: writer
web/ingest.go:44: &json.Decoder literal escapes to heap
web/ingest.go:44: request.Body escapes to heap
web/ingest.go:36: leaking param content: request
web/ingest.go:44: &metrics escapes to heap
web/ingest.go:43: moved to heap: metrics
web/ingest.go:44: &metrics escapes to heap
web/ingest.go:43: []IngestRequest literal escapes to heap
web/ingest.go:49: []api.TaggedMetric literal escapes to heap
web/ingest.go:36: leaking param: h
web/ingest.go:62: ([]byte)("{\"success\": true}") escapes to heap
web/query.go:84: s.name escapes to heap
web/query.go:79: leaking param content: s
web/query.go:84: message escapes to heap
web/query.go:79: leaking param: message
web/query.go:84: (*singleChecker).add ... argument does not escape
web/query.go:120: predicate.NotPredicate literal escapes to heap
web/query.go:130: predicate.AndPredicate literal escapes to heap
web/query.go:122: make([]predicate.Predicate, len(c.All)) escapes to heap
web/query.go:140: predicate.OrPredicate literal escapes to heap
web/query.go:132: make([]predicate.Predicate, len(c.Any)) escapes to heap
web/query.go:145: predicate.ListMatcher literal escapes to heap
web/query.go:91: leaking param content: c
web/query.go:91: leaking param: c
web/query.go:147: []string literal escapes to heap
web/query.go:153: predicate.ListMatcher literal escapes to heap
web/query.go:165: predicate.RegexMatcher literal escapes to heap
web/query.go:122: make([]predicate.Predicate, len(c.All)) escapes to heap
web/query.go:120: predicate.NotPredicate literal escapes to heap
web/query.go:130: predicate.AndPredicate literal escapes to heap
web/query.go:122: make([]predicate.Predicate, len(c.All)) escapes to heap
web/query.go:140: predicate.OrPredicate literal escapes to heap
web/query.go:132: make([]predicate.Predicate, len(c.Any)) escapes to heap
web/query.go:145: predicate.ListMatcher literal escapes to heap
web/query.go:147: []string literal escapes to heap
web/query.go:153: predicate.ListMatcher literal escapes to heap
web/query.go:165: predicate.RegexMatcher literal escapes to heap
web/query.go:132: make([]predicate.Predicate, len(c.Any)) escapes to heap
web/query.go:120: predicate.NotPredicate literal escapes to heap
web/query.go:130: predicate.AndPredicate literal escapes to heap
web/query.go:122: make([]predicate.Predicate, len(c.All)) escapes to heap
web/query.go:140: predicate.OrPredicate literal escapes to heap
web/query.go:132: make([]predicate.Predicate, len(c.Any)) escapes to heap
web/query.go:145: predicate.ListMatcher literal escapes to heap
web/query.go:147: []string literal escapes to heap
web/query.go:153: predicate.ListMatcher literal escapes to heap
web/query.go:165: predicate.RegexMatcher literal escapes to heap
web/query.go:170: only.name escapes to heap
web/query.go:120: predicate.NotPredicate literal escapes to heap
web/query.go:130: predicate.AndPredicate literal escapes to heap
web/query.go:122: make([]predicate.Predicate, len(c.All)) escapes to heap
web/query.go:140: predicate.OrPredicate literal escapes to heap
web/query.go:132: make([]predicate.Predicate, len(c.Any)) escapes to heap
web/query.go:145: predicate.ListMatcher literal escapes to heap
web/query.go:147: []string literal escapes to heap
web/query.go:153: predicate.ListMatcher literal escapes to heap
web/query.go:165: predicate.RegexMatcher literal escapes to heap
web/query.go:130: predicate.AndPredicate literal escapes to heap
web/query.go:122: make([]predicate.Predicate, len(c.All)) escapes to heap
web/query.go:140: predicate.OrPredicate literal escapes to heap
web/query.go:132: make([]predicate.Predicate, len(c.Any)) escapes to heap
web/query.go:145: predicate.ListMatcher literal escapes to heap
web/query.go:147: []string literal escapes to heap
web/query.go:153: predicate.ListMatcher literal escapes to heap
web/query.go:165: predicate.RegexMatcher literal escapes to heap
web/query.go:92: predicateFromConstraint &singleChecker literal does not escape
web/query.go:170: predicateFromConstraint ... argument does not escape
web/query.go:210: leaking closure reference context
web/query.go:181: leaking param: q
web/query.go:210: leaking closure reference profiledCommand
web/query.go:202: command.ProfilingCommand literal escapes to heap
web/query.go:181: leaking param: profiler
web/query.go:186: leaking closure reference parsedForm
web/query.go:181: leaking param: parsedForm
web/query.go:182: ... argument escapes to heap
web/query.go:182: parsedForm escapes to heap
web/query.go:202: command.ProfilingCommand literal escapes to heap
web/query.go:185: queryHandler.process func literal does not escape
web/query.go:209: queryHandler.process func literal does not escape
web/query.go:277: leaking closure reference profiler
web/query.go:231: &inspect.Profiler literal escapes to heap
web/query.go:231: []inspect.Profile literal escapes to heap
web/query.go:229: leaking param: writer
web/query.go:237: &json.Decoder literal escapes to heap
web/query.go:237: request.Body escapes to heap
web/query.go:229: leaking param content: request
web/query.go:237: &queryForm escapes to heap
web/query.go:233: moved to heap: queryForm
web/query.go:237: &queryForm escapes to heap
web/query.go:229: leaking param content: request
web/query.go:247: &queryForm escapes to heap
web/query.go:247: &queryForm escapes to heap
web/query.go:229: leaking param: q
web/query.go:231: &inspect.Profiler literal escapes to heap
web/query.go:231: []inspect.Profile literal escapes to heap
web/query.go:231: &inspect.Profiler literal escapes to heap
web/query.go:231: []inspect.Profile literal escapes to heap
web/query.go:275: func literal escapes to heap
web/query.go:275: func literal escapes to heap
web/query.go:231: &inspect.Profiler literal escapes to heap
web/query.go:231: []inspect.Profile literal escapes to heap
web/query.go:285: responseJSON escapes to heap
web/query.go:287: responseJSON escapes to heap
web/server.go:28: leaking param: writer
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:28: func literal escapes to heap
web/server.go:28: func literal escapes to heap
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:31: singleStaticHandler literal escapes to heap
web/server.go:25: leaking param: config
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:32: singleStaticHandler literal escapes to heap
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:33: queryHandler literal escapes to heap
web/server.go:25: leaking param: context
web/server.go:25: leaking param: hook
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:37: composite literal escapes to heap
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:42: ingestHandler literal escapes to heap
web/server.go:53: &http.fileHandler literal escapes to heap
web/server.go:53: &http.fileHandler literal escapes to heap
web/server.go:53: http.Dir(config.StaticDir) escapes to heap
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:27: &http.ServeMux literal escapes to heap
web/server.go:27: make(map[string]http.muxEntry) escapes to heap
web/server.go:28: NewMux.func1 request does not escape
web/token.go:31: leaking param: writer
web/token.go:31: leaking param: h
web/token.go:45: h.context.Registry.All() escapes to heap
web/token.go:46: metrics escapes to heap
web/token.go:31: leaking param content: request
web/token.go:61: response escapes to heap
web/token.go:47: map[string]interface {} literal escapes to heap
web/token.go:44: map[string]interface {} literal escapes to heap
web/token.go:63: response escapes to heap
web/token.go:47: map[string]interface {} literal escapes to heap
web/token.go:44: map[string]interface {} literal escapes to heap
web/token.go:67: ([]byte)("{\"success\": false, \"message\": \"Failed to encode the result message.\"}") escapes to heap
<autogenerated>:1: leaking param content: .this
<autogenerated>:1: leaking param: writer
<autogenerated>:1: (*singleStaticHandler).ServeHTTP request does not escape
<autogenerated>:2: leaking param content: .this
<autogenerated>:2: leaking param: writer
<autogenerated>:2: leaking param content: request
<autogenerated>:3: leaking param content: .this
<autogenerated>:3: leaking param: profiler
<autogenerated>:3: leaking param: parsedForm
<autogenerated>:4: leaking param content: .this
<autogenerated>:4: leaking param: writer
<autogenerated>:4: leaking param content: request
<autogenerated>:5: leaking param: .this
<autogenerated>:6: leaking param: .this
<autogenerated>:7: leaking param content: .this
<autogenerated>:7: leaking param: writer
<autogenerated>:7: leaking param content: request
# github.com/square/metrics/testing_support/assert
testing_support/assert/assert.go:39: can inline New
testing_support/assert/assert.go:46: can inline Assert.Stack
testing_support/assert/assert.go:110: inlining call to math.IsNaN
testing_support/assert/assert.go:117: inlining call to math.IsNaN
testing_support/assert/assert.go:111: inlining call to math.IsNaN
testing_support/assert/assert.go:127: inlining call to math.IsNaN
testing_support/assert/assert.go:127: inlining call to math.IsNaN
testing_support/assert/assert.go:130: inlining call to math.IsNaN
testing_support/assert/assert.go:39: leaking param: t to result ~r1 level=0
testing_support/assert/assert.go:46: leaking param: assert to result ~r1 level=0
testing_support/assert/assert.go:56: leaking param content: format
testing_support/assert/assert.go:56: leaking param content: a
testing_support/assert/assert.go:56: leaking param: assert to result ~r2 level=0
testing_support/assert/assert.go:164: leaking param content: format
testing_support/assert/assert.go:164: leaking param content: a
testing_support/assert/assert.go:167: assert.t.common escapes to heap
testing_support/assert/assert.go:164: leaking param: assert
testing_support/assert/assert.go:167: file escapes to heap
testing_support/assert/assert.go:167: line escapes to heap
testing_support/assert/assert.go:167: assert.context escapes to heap
testing_support/assert/assert.go:167: fmt.Sprintf(format, a...) escapes to heap
testing_support/assert/assert.go:164: leaking param content: format
testing_support/assert/assert.go:164: leaking param content: a
testing_support/assert/assert.go:169: assert.t.common escapes to heap
testing_support/assert/assert.go:169: file escapes to heap
testing_support/assert/assert.go:169: line escapes to heap
testing_support/assert/assert.go:169: fmt.Sprintf(format, a...) escapes to heap
testing_support/assert/assert.go:167: Assert.withCaller ... argument does not escape
testing_support/assert/assert.go:169: Assert.withCaller ... argument does not escape
testing_support/assert/assert.go:65: leaking param: assert
testing_support/assert/assert.go:65: leaking param content: format
testing_support/assert/assert.go:65: leaking param content: a
testing_support/assert/assert.go:70: leaking param: assert
testing_support/assert/assert.go:72: expected escapes to heap
testing_support/assert/assert.go:70: leaking param: expected
testing_support/assert/assert.go:72: actual escapes to heap
testing_support/assert/assert.go:70: leaking param: actual
testing_support/assert/assert.go:72: Assert.EqString ... argument does not escape
testing_support/assert/assert.go:77: leaking param: assert
testing_support/assert/assert.go:79: expected escapes to heap
testing_support/assert/assert.go:79: actual escapes to heap
testing_support/assert/assert.go:79: Assert.EqBool ... argument does not escape
testing_support/assert/assert.go:173: leaking param content: format
testing_support/assert/assert.go:173: leaking param content: a
testing_support/assert/assert.go:176: assert.t.common escapes to heap
testing_support/assert/assert.go:173: leaking param: assert
testing_support/assert/assert.go:176: file escapes to heap
testing_support/assert/assert.go:176: line escapes to heap
testing_support/assert/assert.go:176: assert.context escapes to heap
testing_support/assert/assert.go:176: fmt.Sprintf(format, a...) escapes to heap
testing_support/assert/assert.go:173: leaking param content: format
testing_support/assert/assert.go:173: leaking param content: a
testing_support/assert/assert.go:178: assert.t.common escapes to heap
testing_support/assert/assert.go:178: file escapes to heap
testing_support/assert/assert.go:178: line escapes to heap
testing_support/assert/assert.go:178: fmt.Sprintf(format, a...) escapes to heap
testing_support/assert/assert.go:176: Assert.withCallerFatal ... argument does not escape
testing_support/assert/assert.go:178: Assert.withCallerFatal ... argument does not escape
testing_support/assert/assert.go:84: leaking param: assert
testing_support/assert/assert.go:86: expected escapes to heap
testing_support/assert/assert.go:86: actual escapes to heap
testing_support/assert/assert.go:86: Assert.MustEqBool ... argument does not escape
testing_support/assert/assert.go:91: leaking param: assert
testing_support/assert/assert.go:93: expected escapes to heap
testing_support/assert/assert.go:93: actual escapes to heap
testing_support/assert/assert.go:93: Assert.EqInt ... argument does not escape
testing_support/assert/assert.go:98: leaking param: assert
testing_support/assert/assert.go:100: expected escapes to heap
testing_support/assert/assert.go:100: actual escapes to heap
testing_support/assert/assert.go:100: Assert.MustEqInt ... argument does not escape
testing_support/assert/assert.go:104: leaking param: assert
testing_support/assert/assert.go:106: expected escapes to heap
testing_support/assert/assert.go:104: leaking param: expected
testing_support/assert/assert.go:106: actual escapes to heap
testing_support/assert/assert.go:104: leaking param: actual
testing_support/assert/assert.go:112: expected escapes to heap
testing_support/assert/assert.go:112: actual escapes to heap
testing_support/assert/assert.go:118: expected escapes to heap
testing_support/assert/assert.go:118: actual escapes to heap
testing_support/assert/assert.go:106: Assert.EqFloatArray ... argument does not escape
testing_support/assert/assert.go:112: Assert.EqFloatArray ... argument does not escape
testing_support/assert/assert.go:118: Assert.EqFloatArray ... argument does not escape
testing_support/assert/assert.go:126: leaking param: assert
testing_support/assert/assert.go:128: expected escapes to heap
testing_support/assert/assert.go:128: actual escapes to heap
testing_support/assert/assert.go:135: expected escapes to heap
testing_support/assert/assert.go:135: actual escapes to heap
testing_support/assert/assert.go:128: Assert.EqFloat ... argument does not escape
testing_support/assert/assert.go:135: Assert.EqFloat ... argument does not escape
testing_support/assert/assert.go:140: leaking param: assert
testing_support/assert/assert.go:143: expected escapes to heap
testing_support/assert/assert.go:143: actual escapes to heap
testing_support/assert/assert.go:143: Assert.EqApproximate ... argument does not escape
testing_support/assert/assert.go:148: leaking param: actual
testing_support/assert/assert.go:148: leaking param: expected
testing_support/assert/assert.go:148: leaking param: assert
testing_support/assert/assert.go:150: Assert.Eq ... argument does not escape
testing_support/assert/assert.go:155: leaking param: err
testing_support/assert/assert.go:155: leaking param: assert
testing_support/assert/assert.go:157: err.Error() escapes to heap
testing_support/assert/assert.go:157: Assert.CheckError ... argument does not escape
<autogenerated>:1: inlining call to Assert.Stack
<autogenerated>:1: leaking param: .this to result ~r1 level=1
<autogenerated>:2: leaking param content: format
<autogenerated>:2: leaking param content: a
<autogenerated>:2: leaking param: .this to result ~r2 level=1
<autogenerated>:3: leaking param content: .this
<autogenerated>:3: leaking param content: format
<autogenerated>:3: leaking param content: a
<autogenerated>:4: leaking param content: .this
<autogenerated>:4: leaking param: actual
<autogenerated>:4: leaking param: expected
<autogenerated>:5: leaking param content: .this
<autogenerated>:6: leaking param content: .this
<autogenerated>:7: leaking param content: .this
<autogenerated>:8: leaking param content: .this
<autogenerated>:9: leaking param content: .this
<autogenerated>:9: leaking param: actual
<autogenerated>:9: leaking param: expected
<autogenerated>:10: leaking param content: .this
<autogenerated>:11: leaking param content: .this
<autogenerated>:12: leaking param content: .this
<autogenerated>:12: leaking param: actual
<autogenerated>:12: leaking param: expected
<autogenerated>:13: leaking param content: .this
<autogenerated>:13: leaking param: err
<autogenerated>:14: leaking param content: .this
<autogenerated>:14: leaking param content: format
<autogenerated>:14: leaking param content: a
<autogenerated>:15: leaking param content: .this
<autogenerated>:15: leaking param content: format
<autogenerated>:15: leaking param content: a
# github.com/square/metrics/main/web
main/web/web.go:90: inlining call to blueflood.NewBlueflood
main/web/web.go:95: inlining call to cached.NewMetricMetadataAPI
main/web/web.go:118: inlining call to registry.Default
main/web/web.go:39: leaking param: config
main/web/web.go:39: leaking param: context
main/web/web.go:46: config.Port escapes to heap
main/web/web.go:52: config.Port escapes to heap
main/web/web.go:50: &http.Server literal escapes to heap
main/web/web.go:47: httpMux escapes to heap
main/web/web.go:46: startServer ... argument does not escape
main/web/web.go:52: startServer ... argument does not escape
main/web/web.go:100: leaking closure reference optimizedMetadataAPI
main/web/web.go:95: &cached.metricUpdateAPI literal escapes to heap
main/web/web.go:95: &cached.metricUpdateAPI literal escapes to heap
main/web/web.go:95: metadataAPI escapes to heap
main/web/web.go:95: composite literal escapes to heap
main/web/web.go:95: map[api.MetricKey]*cached.CachedTagSetList literal escapes to heap
main/web/web.go:95: make(chan func(metadata.Context) error, cached.config·3.RequestLimit) escapes to heap
main/web/web.go:95: &cached.result·5 escapes to heap
main/web/web.go:95: moved to heap: cached.result·5
main/web/web.go:95: &cached.result·5 escapes to heap
main/web/web.go:102: ... argument escapes to heap
main/web/web.go:102: err.Error() escapes to heap
main/web/web.go:63: os.Stdout escapes to heap
main/web/web.go:58: make(chan os.Signal, 1) escapes to heap
main/web/web.go:59: syscall.SIGUSR2 escapes to heap
main/web/web.go:61: func literal escapes to heap
main/web/web.go:61: func literal escapes to heap
main/web/web.go:58: make(chan os.Signal, 1) escapes to heap
main/web/web.go:74: &config escapes to heap
main/web/web.go:72: moved to heap: config
main/web/web.go:74: &config escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:78: err.Error() escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:84: err.Error() escapes to heap
main/web/web.go:98: func literal escapes to heap
main/web/web.go:98: func literal escapes to heap
main/web/web.go:95: &cached.metricUpdateAPI literal escapes to heap
main/web/web.go:95: &cached.metricUpdateAPI literal escapes to heap
main/web/web.go:95: metadataAPI escapes to heap
main/web/web.go:95: composite literal escapes to heap
main/web/web.go:95: map[api.MetricKey]*cached.CachedTagSetList literal escapes to heap
main/web/web.go:95: make(chan func(metadata.Context) error, cached.config·3.RequestLimit) escapes to heap
main/web/web.go:95: &cached.result·5 escapes to heap
main/web/web.go:95: &cached.result·5 escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:114: optimizedMetadataAPI escapes to heap
main/web/web.go:95: &cached.metricUpdateAPI literal escapes to heap
main/web/web.go:95: &cached.metricUpdateAPI literal escapes to heap
main/web/web.go:95: metadataAPI escapes to heap
main/web/web.go:95: composite literal escapes to heap
main/web/web.go:95: map[api.MetricKey]*cached.CachedTagSetList literal escapes to heap
main/web/web.go:95: make(chan func(metadata.Context) error, cached.config·3.RequestLimit) escapes to heap
main/web/web.go:95: &cached.result·5 escapes to heap
main/web/web.go:95: &cached.result·5 escapes to heap
main/web/web.go:90: blueflood.b·3 escapes to heap
main/web/web.go:90: &blueflood.Blueflood literal escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:88: &util.RuleBasedGraphiteConverter literal escapes to heap
main/web/web.go:90: http.DefaultClient escapes to heap
main/web/web.go:118: registry.Default() escapes to heap
main/web/web.go:59: main ... argument does not escape
main/web/web.go:78: main ... argument does not escape
main/web/web.go:84: main ... argument does not escape
# github.com/square/metrics/testing_support/mocks
testing_support/mocks/api.go:39: can inline NewFakeMetricMetadataAPI
testing_support/mocks/api.go:54: can inline (*FakeMetricMetadataAPI).AddPairWithoutGraphite
testing_support/mocks/api.go:49: can inline (*FakeMetricMetadataAPI).AddPair
testing_support/mocks/api.go:51: inlining call to (*FakeMetricMetadataAPI).AddPairWithoutGraphite
testing_support/mocks/api.go:94: can inline (*FakeMetricMetadataAPI).CheckHealthy
testing_support/mocks/api.go:124: can inline FakeTimeseriesStorageAPI.ChooseResolution
testing_support/mocks/api.go:125: inlining call to api.Timerange.Resolution
testing_support/mocks/api.go:140: inlining call to errors.New
testing_support/mocks/api.go:145: inlining call to api.Timerange.Slots
testing_support/mocks/api.go:147: inlining call to api.Timerange.StartMillis
testing_support/mocks/api.go:152: inlining call to errors.New
testing_support/mocks/api.go:173: can inline FakeTimeseriesStorageAPI.CheckHealthy
testing_support/mocks/clock.go:23: can inline NewTestClock
testing_support/mocks/clock.go:29: can inline (*testClock).Now
testing_support/mocks/clock.go:33: can inline (*testClock).Move
testing_support/mocks/clock.go:34: inlining call to time.Time.Add
testing_support/mocks/combo_api.go:68: can inline FakeComboAPI.CheckHealthy
testing_support/mocks/combo_api.go:75: inlining call to api.Timerange.Resolution
testing_support/mocks/combo_api.go:75: inlining call to api.Timerange.Resolution
testing_support/mocks/combo_api.go:76: inlining call to api.Timerange.Resolution
testing_support/mocks/combo_api.go:76: inlining call to api.Timerange.Resolution
testing_support/mocks/combo_api.go:78: inlining call to api.Timerange.Resolution
testing_support/mocks/combo_api.go:95: inlining call to api.Timerange.Slots
testing_support/mocks/combo_api.go:100: inlining call to math.NaN
testing_support/mocks/combo_api.go:100: inlining call to math.Float64frombits
testing_support/mocks/combo_api.go:104: inlining call to api.Timerange.TimeOfIndex
testing_support/mocks/combo_api.go:104: inlining call to api.Timerange.Start
testing_support/mocks/combo_api.go:104: inlining call to time.Unix
testing_support/mocks/combo_api.go:104: inlining call to api.Timerange.Resolution
testing_support/mocks/combo_api.go:104: inlining call to time.Time.Add
testing_support/mocks/combo_api.go:140: inlining call to api.Timerange.Slots
testing_support/mocks/combo_api.go:141: inlining call to api.Timerange.Slots
testing_support/mocks/http_client.go:36: can inline NewFakeHTTPClient
testing_support/mocks/http_client.go:42: can inline (*FakeHTTPClient).SetResponse
testing_support/mocks/http_client.go:57: inlining call to bytes.NewBufferString
testing_support/mocks/http_client.go:57: inlining call to ioutil.NopCloser
testing_support/mocks/http_client.go:59: inlining call to errors.New
testing_support/mocks/api.go:45: &FakeMetricMetadataAPI literal escapes to heap
testing_support/mocks/api.go:41: make(map[api.MetricKey][]api.TagSet) escapes to heap
testing_support/mocks/api.go:45: make(map[struct { key string; value string }][]api.MetricKey) escapes to heap
testing_support/mocks/api.go:49: leaking param: gm
testing_support/mocks/api.go:49: leaking param: tm
testing_support/mocks/api.go:49: leaking param content: fa
testing_support/mocks/api.go:49: (*FakeMetricMetadataAPI).AddPair converter does not escape
testing_support/mocks/api.go:54: leaking param: tm
testing_support/mocks/api.go:54: leaking param content: fa
testing_support/mocks/api.go:58: leaking param: context
testing_support/mocks/api.go:62: metricKey escapes to heap
testing_support/mocks/api.go:58: leaking param: metricKey
testing_support/mocks/api.go:58: (*FakeMetricMetadataAPI).GetAllTags fa does not escape
testing_support/mocks/api.go:62: (*FakeMetricMetadataAPI).GetAllTags ... argument does not escape
testing_support/mocks/api.go:67: leaking param: context
testing_support/mocks/api.go:69: []api.MetricKey literal escapes to heap
testing_support/mocks/api.go:67: (*FakeMetricMetadataAPI).GetAllMetrics fa does not escape
testing_support/mocks/api.go:76: leaking param: context
testing_support/mocks/api.go:78: []api.MetricKey literal escapes to heap
testing_support/mocks/api.go:76: (*FakeMetricMetadataAPI).GetMetricsForTag fa does not escape
testing_support/mocks/api.go:76: (*FakeMetricMetadataAPI).GetMetricsForTag tagKey does not escape
testing_support/mocks/api.go:76: (*FakeMetricMetadataAPI).GetMetricsForTag tagValue does not escape
testing_support/mocks/api.go:94: (*FakeMetricMetadataAPI).CheckHealthy fa does not escape
testing_support/mocks/api.go:106: v escapes to heap
testing_support/mocks/api.go:104: leaking param content: fa
testing_support/mocks/api.go:106: metric escapes to heap
testing_support/mocks/api.go:104: leaking param: metric
testing_support/mocks/api.go:110: metric escapes to heap
testing_support/mocks/api.go:110: (*FakeGraphiteConverter).ToGraphiteName ... argument does not escape
testing_support/mocks/api.go:116: string(metric) escapes to heap
testing_support/mocks/api.go:113: leaking param: metric
testing_support/mocks/api.go:113: (*FakeGraphiteConverter).ToTaggedName fa does not escape
testing_support/mocks/api.go:116: (*FakeGraphiteConverter).ToTaggedName ... argument does not escape
testing_support/mocks/api.go:128: leaking param: request
testing_support/mocks/api.go:131: []float64 literal escapes to heap
testing_support/mocks/api.go:131: api.TagSet literal escapes to heap
testing_support/mocks/api.go:131: composite literal escapes to heap
testing_support/mocks/api.go:132: []float64 literal escapes to heap
testing_support/mocks/api.go:132: api.TagSet literal escapes to heap
testing_support/mocks/api.go:132: []float64 literal escapes to heap
testing_support/mocks/api.go:132: api.TagSet literal escapes to heap
testing_support/mocks/api.go:132: composite literal escapes to heap
testing_support/mocks/api.go:133: []float64 literal escapes to heap
testing_support/mocks/api.go:133: api.TagSet literal escapes to heap
testing_support/mocks/api.go:133: []float64 literal escapes to heap
testing_support/mocks/api.go:133: api.TagSet literal escapes to heap
testing_support/mocks/api.go:133: []float64 literal escapes to heap
testing_support/mocks/api.go:133: api.TagSet literal escapes to heap
testing_support/mocks/api.go:133: composite literal escapes to heap
testing_support/mocks/api.go:145: make([]float64, int(~r0)) escapes to heap
testing_support/mocks/api.go:145: make([]float64, int(~r0)) escapes to heap
testing_support/mocks/api.go:140: &errors.errorString literal escapes to heap
testing_support/mocks/api.go:140: &errors.errorString literal escapes to heap
testing_support/mocks/api.go:152: &errors.errorString literal escapes to heap
testing_support/mocks/api.go:152: &errors.errorString literal escapes to heap
testing_support/mocks/api.go:130: FakeTimeseriesStorageAPI.FetchSingleTimeseries map[api.MetricKey][]api.Timeseries literal does not escape
testing_support/mocks/api.go:136: FakeTimeseriesStorageAPI.FetchSingleTimeseries make(chan struct {}) does not escape
testing_support/mocks/api.go:155: leaking param: request
testing_support/mocks/api.go:157: make([]api.Timeseries, 0) escapes to heap
testing_support/mocks/clock.go:25: &testClock literal escapes to heap
testing_support/mocks/clock.go:23: leaking param: startTime to result ~r1 level=-1
testing_support/mocks/clock.go:29: leaking param: t to result ~r0 level=1
testing_support/mocks/clock.go:33: leaking param content: t
testing_support/mocks/combo_api.go:32: FakeComboAPI.AddMetric fapi does not escape
testing_support/mocks/combo_api.go:32: FakeComboAPI.AddMetric metric does not escape
testing_support/mocks/combo_api.go:32: FakeComboAPI.AddMetric context does not escape
testing_support/mocks/combo_api.go:35: FakeComboAPI.AddMetrics fapi does not escape
testing_support/mocks/combo_api.go:35: FakeComboAPI.AddMetrics metrics does not escape
testing_support/mocks/combo_api.go:35: FakeComboAPI.AddMetrics context does not escape
testing_support/mocks/combo_api.go:41: metric escapes to heap
testing_support/mocks/combo_api.go:38: leaking param: metric
testing_support/mocks/combo_api.go:43: []api.TagSet literal escapes to heap
testing_support/mocks/combo_api.go:38: FakeComboAPI.GetAllTags fapi does not escape
testing_support/mocks/combo_api.go:38: FakeComboAPI.GetAllTags context does not escape
testing_support/mocks/combo_api.go:41: FakeComboAPI.GetAllTags ... argument does not escape
testing_support/mocks/combo_api.go:50: []api.MetricKey literal escapes to heap
testing_support/mocks/combo_api.go:49: FakeComboAPI.GetAllMetrics fapi does not escape
testing_support/mocks/combo_api.go:49: FakeComboAPI.GetAllMetrics context does not escape
testing_support/mocks/combo_api.go:57: []api.MetricKey literal escapes to heap
testing_support/mocks/combo_api.go:56: FakeComboAPI.GetMetricsForTag fapi does not escape
testing_support/mocks/combo_api.go:56: FakeComboAPI.GetMetricsForTag tagKey does not escape
testing_support/mocks/combo_api.go:56: FakeComboAPI.GetMetricsForTag tagValue does not escape
testing_support/mocks/combo_api.go:56: FakeComboAPI.GetMetricsForTag context does not escape
testing_support/mocks/combo_api.go:68: FakeComboAPI.CheckHealthy fapi does not escape
testing_support/mocks/combo_api.go:76: fapi.timerange.Resolution() escapes to heap
testing_support/mocks/combo_api.go:76: requested.Resolution() escapes to heap
testing_support/mocks/combo_api.go:74: FakeComboAPI.ChooseResolution fapi does not escape
testing_support/mocks/combo_api.go:76: FakeComboAPI.ChooseResolution ... argument does not escape
testing_support/mocks/combo_api.go:95: make([]float64, int(~r0)) escapes to heap
testing_support/mocks/combo_api.go:81: leaking param: request to result ~r1 level=0
testing_support/mocks/combo_api.go:88: request.Metric.MetricKey escapes to heap
testing_support/mocks/combo_api.go:81: leaking param: request
testing_support/mocks/combo_api.go:95: make([]float64, int(~r0)) escapes to heap
testing_support/mocks/combo_api.go:111: request.Metric.MetricKey escapes to heap
testing_support/mocks/combo_api.go:111: request.Metric.TagSet escapes to heap
testing_support/mocks/combo_api.go:81: FakeComboAPI.FetchSingleTimeseries fapi does not escape
testing_support/mocks/combo_api.go:88: FakeComboAPI.FetchSingleTimeseries ... argument does not escape
testing_support/mocks/combo_api.go:100: FakeComboAPI.FetchSingleTimeseries &math.b·2 does not escape
testing_support/mocks/combo_api.go:111: FakeComboAPI.FetchSingleTimeseries ... argument does not escape
testing_support/mocks/combo_api.go:114: leaking param: multiRequest
testing_support/mocks/combo_api.go:117: make([]api.Timeseries, len(requests)) escapes to heap
testing_support/mocks/combo_api.go:117: make([]api.Timeseries, len(requests)) escapes to heap
testing_support/mocks/combo_api.go:114: FakeComboAPI.FetchMultipleTimeseries fapi does not escape
testing_support/mocks/combo_api.go:136: composite literal escapes to heap
testing_support/mocks/combo_api.go:141: timerange.Slots() escapes to heap
testing_support/mocks/combo_api.go:141: series.TagSet escapes to heap
testing_support/mocks/combo_api.go:132: leaking param content: timeseries
testing_support/mocks/combo_api.go:141: len(series.Values) escapes to heap
testing_support/mocks/combo_api.go:144: series.TagSet escapes to heap
testing_support/mocks/combo_api.go:132: leaking param content: timeseries
testing_support/mocks/combo_api.go:132: leaking param content: timeseries
testing_support/mocks/combo_api.go:135: map[api.MetricKey][]api.Timeseries literal escapes to heap
testing_support/mocks/combo_api.go:141: NewComboAPI ... argument does not escape
testing_support/mocks/combo_api.go:144: NewComboAPI ... argument does not escape
testing_support/mocks/http_client.go:38: &FakeHTTPClient literal escapes to heap
testing_support/mocks/http_client.go:38: make(map[string]Response) escapes to heap
testing_support/mocks/http_client.go:42: leaking param: url
testing_support/mocks/http_client.go:42: leaking param: r
testing_support/mocks/http_client.go:42: (*FakeHTTPClient).SetResponse c does not escape
testing_support/mocks/http_client.go:49: url escapes to heap
testing_support/mocks/http_client.go:46: leaking param: url
testing_support/mocks/http_client.go:49: c.responses escapes to heap
testing_support/mocks/http_client.go:46: leaking param content: c
testing_support/mocks/http_client.go:59: &errors.errorString literal escapes to heap
testing_support/mocks/http_client.go:59: &errors.errorString literal escapes to heap
testing_support/mocks/http_client.go:55: moved to heap: resp
testing_support/mocks/http_client.go:59: &resp escapes to heap
testing_support/mocks/http_client.go:57: composite literal escapes to heap
testing_support/mocks/http_client.go:57: bytes.NewBufferString(r.Body) escapes to heap
testing_support/mocks/http_client.go:57: &bytes.Buffer literal escapes to heap
testing_support/mocks/http_client.go:57: ([]byte)(bytes.s·2) escapes to heap
testing_support/mocks/http_client.go:61: &resp escapes to heap
testing_support/mocks/http_client.go:57: composite literal escapes to heap
testing_support/mocks/http_client.go:57: bytes.NewBufferString(r.Body) escapes to heap
testing_support/mocks/http_client.go:57: &bytes.Buffer literal escapes to heap
testing_support/mocks/http_client.go:57: ([]byte)(bytes.s·2) escapes to heap
testing_support/mocks/http_client.go:49: (*FakeHTTPClient).Get ... argument does not escape
<autogenerated>:1: inlining call to FakeTimeseriesStorageAPI.ChooseResolution
<autogenerated>:1: inlining call to api.Timerange.Resolution
<autogenerated>:1: (*FakeTimeseriesStorageAPI).ChooseResolution .this does not escape
<autogenerated>:2: leaking param: request
<autogenerated>:2: (*FakeTimeseriesStorageAPI).FetchSingleTimeseries .this does not escape
<autogenerated>:3: leaking param: request
<autogenerated>:3: (*FakeTimeseriesStorageAPI).FetchMultipleTimeseries .this does not escape
<autogenerated>:4: inlining call to FakeTimeseriesStorageAPI.CheckHealthy
<autogenerated>:4: (*FakeTimeseriesStorageAPI).CheckHealthy .this does not escape
<autogenerated>:5: (*FakeComboAPI).AddMetric .this does not escape
<autogenerated>:5: (*FakeComboAPI).AddMetric metric does not escape
<autogenerated>:5: (*FakeComboAPI).AddMetric context does not escape
<autogenerated>:6: (*FakeComboAPI).AddMetrics .this does not escape
<autogenerated>:6: (*FakeComboAPI).AddMetrics metrics does not escape
<autogenerated>:6: (*FakeComboAPI).AddMetrics context does not escape
<autogenerated>:7: leaking param: metric
<autogenerated>:7: (*FakeComboAPI).GetAllTags .this does not escape
<autogenerated>:7: (*FakeComboAPI).GetAllTags context does not escape
<autogenerated>:8: (*FakeComboAPI).GetAllMetrics .this does not escape
<autogenerated>:8: (*FakeComboAPI).GetAllMetrics context does not escape
<autogenerated>:9: (*FakeComboAPI).GetMetricsForTag .this does not escape
<autogenerated>:9: (*FakeComboAPI).GetMetricsForTag tagKey does not escape
<autogenerated>:9: (*FakeComboAPI).GetMetricsForTag tagValue does not escape
<autogenerated>:9: (*FakeComboAPI).GetMetricsForTag context does not escape
<autogenerated>:10: inlining call to FakeComboAPI.CheckHealthy
<autogenerated>:10: (*FakeComboAPI).CheckHealthy .this does not escape
<autogenerated>:11: (*FakeComboAPI).ChooseResolution .this does not escape
<autogenerated>:12: leaking param: request
<autogenerated>:12: (*FakeComboAPI).FetchSingleTimeseries .this does not escape
<autogenerated>:13: leaking param: multiRequest
<autogenerated>:13: (*FakeComboAPI).FetchMultipleTimeseries .this does not escape
